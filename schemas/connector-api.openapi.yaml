openapi: 3.0.4
info:
  title: Connector API
  description: General-purpose API that enables partners of Mews to access data and services in Mews Operations
  termsOfService: https://www.mews.com/en/terms-conditions/partners
  contact:
    name: Partner success
    email: partnersuccess@mews.com
  version: v1
servers:
  - url: https://api.mews.com
paths:
  /api/connector/v1/accountNotes/getAll:
    post:
      tags:
        - Account notes
      summary: Get all account notes
      description: "Returns all account notes of an account, optionally filtered by activity state, account identifiers, specific account note identifiers or other filter parameters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: accountNotes_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountNoteFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ChainIds:
                - 1df21f06-0cfc-4960-9c58-a3bf1261663e
                - 5fcd1933-22f2-40b9-84da-7db04cbecec2
              AccountNoteIds:
                - 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
                - 8a98965a-7c03-48a1-a28c-ab1b009b53c8
              AccountIds:
                - a6738390-c241-45b7-8e46-14f47207abe5
                - 435d4d5f-d14f-48dc-a47e-0481fc28ead0
              UpdatedUtc:
                StartUtc: '2022-10-10T00:00:00Z'
                EndUtc: '2022-10-17T00:00:00Z'
              ActivityStates:
                - Active
              Limitation:
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
                Count: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNoteResult'
              example:
                AccountNotes:
                  - Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                    AccountId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                    Content: Customer receives a free bottle of champagne during stay
                    AccountType: Customer
                    Classifications:
                      - Gifts
                    IsActive: true
                    CreatorProfile:
                      Discriminator: Enterprise
                      EnterpriseProfile:
                        ProfileId: 52d19c34-b0aa-4635-905d-1326fa8b8e13
                    UpdaterProfile:
                      Discriminator: Integration
                      EnterpriseProfile: 
                  - Id: da34b396-41f7-47f6-8847-aecf00a3f19e
                    AccountId: 5fcd1933-22f2-40b9-84da-7db04cbecec2
                    Content: Lactose intolerant
                    AccountType: Customer
                    Classifications:
                      - FoodAndBeverage
                    IsActive: true
                    CreatorProfile:
                      Discriminator: Enterprise
                      EnterpriseProfile:
                        ProfileId: 52d19c34-b0aa-4635-905d-1326fa8b8e13
                    UpdaterProfile:
                      Discriminator: Integration
                      EnterpriseProfile: 
                Cursor: da34b396-41f7-47f6-8847-aecf00a3f19e
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/accountNotes/add:
    post:
      tags:
        - Account notes
      summary: Add account notes
      description: 'Adds account notes to an account of the enterprise chain. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: accountNotes_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAccountNoteAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              AccountNotes:
                - AccountId: 8ddea57b-6a5c-4eec-8c4c-24467dce118e
                  Content: Brother of the CEO
                  Classifications:
                    - FamilyRelations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNoteAdditionResult'
              example:
                AccountNotes:
                  - Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                    AccountId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                    Content: Brother of the CEO
                    AccountType: Customer
                    Classifications:
                      - FamilyRelations
                    IsActive: true
                    CreatorProfile:
                      Discriminator: Enterprise
                      EnterpriseProfile:
                        ProfileId: 52d19c34-b0aa-4635-905d-1326fa8b8e13
                    UpdaterProfile:
                      Discriminator: Integration
                      EnterpriseProfile: 
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/accountNotes/update:
    post:
      tags:
        - Account notes
      summary: Update account notes
      description: Updates information about the specified account notes.
      operationId: accountNotes_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAccountNoteUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              AccountNoteUpdates:
                - AccountNoteId: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  Content:
                    Value: The AC in the room doesn't work anymore
                  Classifications:
                    Maintenance:
                      Value: true
                    Housekeeping:
                      Value: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNoteUpdateResult'
              example:
                AccountNotes:
                  - Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                    AccountId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                    Content: The AC in the room doesn't work anymore
                    AccountType: Customer
                    Classifications:
                      - Maintenance
                    IsActive: true
                    CreatorProfile:
                      Discriminator: Enterprise
                      EnterpriseProfile:
                        ProfileId: 52d19c34-b0aa-4635-905d-1326fa8b8e13
                    UpdaterProfile:
                      Discriminator: Integration
                      EnterpriseProfile: 
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/accountNotes/delete:
    post:
      tags:
        - Account notes
      summary: Delete account notes
      description: Deletes specified account notes.
      operationId: accountNotes_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAccountNoteDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              AccountNoteIds:
                - a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                - da34b396-41f7-47f6-8847-aecf00a3f19e
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/accountingCategories/getAll:
    post:
      tags:
        - Accounting categories
      summary: Get all accounting categories
      description: "Returns all accounting categories of the enterprise associated with the connector integration. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: accountingCategories_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountingCategoryFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              AccountingCategoryIds:
                - 0cf7aa90-736f-43e9-a7dc-787704548d86
                - 0b9560fb-055d-47d3-a6d4-e579c44ca558
              UpdatedUtc:
                StartUtc: '2023-10-01T00:00:00Z'
                EndUtc: '2023-10-31T00:00:00Z'
              ActivityStates:
                - Active
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingCategoryResult'
              example:
                AccountingCategories:
                  - Classification: Accommodation
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    Code: '345'
                    CostCenterCode: '2589'
                    ExternalCode: '3010'
                    Id: 0cf7aa90-736f-43e9-a7dc-787704548d86
                    IsActive: true
                    LedgerAccountCode: '311100'
                    Name: Accommodation
                    PostingAccountCode: '602020'
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                  - Classification: 
                    EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                    Code: '100'
                    CostCenterCode: '2589'
                    ExternalCode: ABVG
                    Id: 0b9560fb-055d-47d3-a6d4-e579c44ca558
                    IsActive: true
                    LedgerAccountCode: '311100'
                    Name: Alcoholic Beverage
                    PostingAccountCode: '602020'
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                Cursor: 0b9560fb-055d-47d3-a6d4-e579c44ca558
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/accountingItems/update:
    post:
      tags:
        - Accounting items
      summary: Update accounting items
      description: 'Updates specified accounting items. You can use this operation to assign an accounting item to a different account or bill. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: accountingItems_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAccountingItemsUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              AccountingItemUpdates:
                - AccountingItemId: 6c2897de-620a-4f48-af1e-ada8004202bd
                  AccountId:
                    Value: 182a56ee-037d-4da5-b6f8-ada8006e7d5c
                  BillId:
                    Value: 9e3791dc-95c7-439a-aa8a-ada8007de0ca
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingItemResult'
              example:
                OrderItems:
                  - Id: 6c2897de-620a-4f48-af1e-ada8004202bd
                    AccountId: 182a56ee-037d-4da5-b6f8-ada8006e7d5c
                    OrderId: f9090129-fb49-46d2-9dc5-ad9d015d43b9
                    BillId: 9e3791dc-95c7-439a-aa8a-ada8007de0ca
                    AccountingCategoryId: d250149e-a29d-4c70-b607-a1759faf7320
                    Amount:
                      Currency: GBP
                      NetValue: 95.24
                      GrossValue: 100
                      TaxValues:
                        - Code: UK-2020-R
                          Value: 4.76
                      Breakdown:
                        Items:
                          - TaxRateCode: UK-2020-R
                            NetValue: 95.24
                            TaxValue: 4.76
                    RevenueType: Additional
                    ConsumedUtc: '2021-09-19T04:00:20Z'
                    ClosedUtc: 
                    AccountingState: Open
                    Data:
                      Discriminator: CancellationFee
                      Value: 
                PaymentItems: [ ]
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/accountingItems/getAll:
    post:
      tags:
        - Accounting items
      summary: Get all accounting items
      description: Use `payments/getAll` or `orderItems/getAll`.
      operationId: accountingItems_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountingItemParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ConsumedUtc:
                StartUtc: '2020-01-05T00:00:00Z'
                EndUtc: '2020-01-10T00:00:00Z'
              ClosedUtc:
                StartUtc: '2020-01-05T00:00:00Z'
                EndUtc: '2020-01-10T00:00:00Z'
              UpdatedUtc:
                StartUtc: '2020-01-05T00:00:00Z'
                EndUtc: '2020-01-10T00:00:00Z'
              ItemIds:
                - cb643cb7-8b6e-48a6-b67e-ad4c0041f550
                - 44ca12b8-f009-455e-be91-ad4c013fcbc5
              Extent:
                OrderItems: true
                PaymentItems: true
                CreditCardTransactions: false
              States:
                - Open
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingItemResult'
              example:
                OrderItems:
                  - Id: 6c2897de-620a-4f48-af1e-ada8004202bd
                    AccountId: 182a56ee-037d-4da5-b6f8-ada8006e7d5c
                    OrderId: f9090129-fb49-46d2-9dc5-ad9d015d43b9
                    BillId: 9e3791dc-95c7-439a-aa8a-ada8007de0ca
                    AccountingCategoryId: d250149e-a29d-4c70-b607-a1759faf7320
                    Amount:
                      Currency: GBP
                      NetValue: 95.24
                      GrossValue: 100
                      TaxValues:
                        - Code: UK-2020-R
                          Value: 4.76
                      Breakdown:
                        Items:
                          - TaxRateCode: UK-2020-R
                            NetValue: 95.24
                            TaxValue: 4.76
                    RevenueType: Additional
                    ConsumedUtc: '2021-09-19T04:00:20Z'
                    ClosedUtc: 
                    AccountingState: Open
                    Data:
                      Discriminator: CancellationFee
                      Value: 
                PaymentItems: [ ]
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      deprecated: true
      x-deprecatedMessage: Use `payments/getAll` or `orderItems/getAll`.
  /api/connector/v1/accounts/update:
    post:
      tags:
        - Accounts
      summary: Update accounts
      description: 'Updates one or more existing accounts in the system. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: accounts_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAccountUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              AccountUpdates:
                - Id: 3ff104e6-3ba8-4dfc-8d35-b0ec00c5fd4c
                  Discriminator: Company
                  Customer: 
                  Company:
                    Email:
                      Value: example@example.com
                    TaxIdentifier:
                      Value: CZ8810310963
                    BillingCode:
                      Value: 
                    AccountingCode:
                      Value: 
                    Notes:
                      Value: Example notes
                    Name:
                      Value: Example company
                    MotherCompanyId:
                      Value: 839e9d92-aa8b-48bf-8384-b0ec0081bb34
                    WebsiteUrl:
                      Value: https://www.example.com
                    InvoiceDueInterval:
                      Value: 
                    CreditRatingBasic:
                      Value: CreditOk
                    Department:
                      Value: Accounting
                    DunsNumber:
                      Value: '987654321'
                    ReferenceId:
                      Value: 
                    ExternalIdentifier:
                      Value: COM-123
                    AdditionalTaxIdentifier:
                      Value: XY00112233445
                    Contact:
                      Value: Sample contact
                    ContactPerson:
                      Value: Sample person
                    FiscalIdentifier:
                      Value: FiscalIdentifier
                    Iata:
                      Value: PAO
                    Telephone:
                      Value: 111-222-333
                    SourceId:
                      Value: F42098A0-8507-4963-ACC9-B0EC00821949
                    Classifications:
                      Corporate:
                        Value: true
                      Internal:
                        Value: true
                      Private:
                        Value: true
                      OnlineTravelAgency:
                        Value: true
                      GlobalDistributionSystem:
                        Value: true
                      Marketing:
                        Value: true
                      Inactive:
                        Value: true
                    Options:
                      Invoiceable:
                        Value: 'true'
                      AddFeesToInvoices:
                        Value: 'true'
                - Id: 71db411f-c1d6-4e1c-9cd7-44e8bf45f936
                  Discriminator: Customer
                  Company: 
                  Customer:
                    Email:
                      Value: example@example.com
                    TaxIdentifier:
                      Value: CZ8810310963
                    BillingCode:
                      Value: 
                    AccountingCode:
                      Value: 
                    Notes:
                      Value: Example notes
                    LastName:
                      Value: Sample
                    FirstName:
                      Value: Sample
                    SecondLastName:
                      Value: 
                    BirthPlace:
                      Value: Sample place
                    Telephone:
                      Value: 111-222-333
                    Occupation:
                      Value: 
                    CarRegistrationNumber:
                      Value: 
                    LoyaltyCode:
                      Value: 
                    NationalityCode:
                      Value: US
                    CompanyId:
                      Value: 839e9d92-aa8b-48bf-8384-b0ec0081bb34
                    BirthDate:
                      Value: '2000-01-01'
                    Sex:
                      Value: Male
                    Title:
                      Value: Mister
                    PreferredLanguageCode:
                      Value: 
                    Options:
                      SendMarketingEmails:
                        Value: true
                      Invoiceable:
                        Value: true
                      BillAddressObjection:
                        Value: true
                    Classifications:
                      PaymasterAccount:
                        Value: true
                      Blacklist:
                        Value: true
                      Media:
                        Value: true
                      LoyaltyProgram:
                        Value: true
                      PreviousComplaint:
                        Value: true
                      Returning:
                        Value: true
                      Staff:
                        Value: true
                      FriendOrFamily:
                        Value: true
                      TopManagement:
                        Value: true
                      Important:
                        Value: true
                      VeryImportant:
                        Value: true
                      Problematic:
                        Value: true
                      Cashlist:
                        Value: true
                      DisabledPerson:
                        Value: true
                      Military:
                        Value: true
                      Airline:
                        Value: true
                      HealthCompliant:
                        Value: true
                      InRoom:
                        Value: true
                      WaitingForRoom:
                        Value: true
                      Student:
                        Value: true
                    LegalEntityIdentifiers:
                      ItDestinationCode:
                        Value: 
                      ItFiscalCode:
                        Value: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResult'
              example:
                Accounts:
                  - Id: 3ff104e6-3ba8-4dfc-8d35-b0ec00c5fd4c
                    Discriminator: Company
                    Customer: 
                    Company:
                      ChainId: 79fa3c17-bec6-454f-b3be-b0ec00818acd
                      CreatedUtc: '2024-01-03T07:52:20Z'
                      UpdatedUtc: '2024-01-18T10:20:31Z'
                      UpdaterProfileId: 93f03906-ed13-4a26-b8dc-b0ec0082194f
                      Email: example@example.com
                      TaxIdentifier: CZ8810310963
                      BillingCode: 
                      AccountingCode: 
                      Notes: Example notes
                      Name: Example company
                      MotherCompanyId: 839e9d92-aa8b-48bf-8384-b0ec0081bb34
                      WebsiteUrl: https://www.example.com
                      InvoiceDueInterval: 
                      CreditRatingBasic: CreditOk
                      Department: Accounting
                      DunsNumber: '987654321'
                      ReferenceId: 
                      ExternalIdentifier: COM-123
                      AdditionalTaxIdentifier: XY00112233445
                      Contact: Sample contact
                      ContactPerson: Sample person
                      FiscalIdentifier: FiscalIdentifier
                      Iata: PAO
                      Telephone: 111-222-333
                      SourceId: F42098A0-8507-4963-ACC9-B0EC00821949
                      Classifications:
                        Corporate: true
                        Internal: true
                        Private: true
                        OnlineTravelAgency: true
                        GlobalDistributionSystem: true
                        Marketing: true
                        Inactive: true
                      Options:
                        Invoiceable: true
                        AddFeesToInvoices: true
                  - Id: 71db411f-c1d6-4e1c-9cd7-44e8bf45f936
                    Discriminator: Customer
                    Customer:
                      ChainId: 79fa3c17-bec6-454f-b3be-b0ec00818acd
                      CreatedUtc: '2024-01-03T07:52:19Z'
                      UpdatedUtc: '2024-01-18T10:25:41Z'
                      UpdaterProfileId: 93f03906-ed13-4a26-b8dc-b0ec0082194f
                      Email: example@example.com
                      TaxIdentifier: CZ8810310963
                      BillingCode: 
                      AccountingCode: 
                      Notes: Example notes
                      LastName: Sample
                      FirstName: Sample
                      SecondLastName: 
                      BirthPlace: Sample place
                      Telephone: 111-222-333
                      Occupation: 
                      CarRegistrationNumber: 
                      LoyaltyCode: 
                      NationalityCode: US
                      CompanyId: 839e9d92-aa8b-48bf-8384-b0ec0081bb34
                      BirthDate: '2000-01-01T00:00:00Z'
                      Sex: Male
                      Title: Mister
                      PreferredLanguageCode: 
                      Options:
                        SendMarketingEmails: true
                        Invoiceable: true
                        BillAddressObjection: true
                      Classifications:
                        PaymasterAccount: true
                        Blacklist: true
                        Media: true
                        LoyaltyProgram: true
                        PreviousComplaint: true
                        Returning: true
                        Staff: true
                        FriendOrFamily: true
                        TopManagement: true
                        Important: true
                        VeryImportant: true
                        Problematic: true
                        Cashlist: true
                        DisabledPerson: true
                        Military: true
                        Airline: true
                        HealthCompliant: true
                        InRoom: true
                        WaitingForRoom: true
                        Student: true
                      LegalEntityIdentifiers:
                        ItDestinationCode: 
                        ItFiscalCode: 
                    Company: 
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/accounts/addFile:
    post:
      tags:
        - Accounts
      summary: Upload and link file to account
      description: "Attaches the specified file to the account. \r\n\r\nAllowed MIME types: `application/pdf`, `image/bmp`, `image/gif`, `image/jpeg`, `image/png`, `image/tiff`.\r\n\r\nNote this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property)."
      operationId: accounts_addFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountFileParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","AccountId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","Name":"document.pdf","Type":"application/pdf","ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAccountFileResult'
              example: {"FileId":"f039f5b4-ff18-4510-9086-92b14a68ed78"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/accounts/merge:
    post:
      tags:
        - Accounts
      summary: Merge accounts
      description: Merges two or more accounts of the same account type together. The given source accounts will be merged into the given target account and the merged account will keep the target account ID.
      operationId: accounts_merge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAccountMergeParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              AccountMergeParameters:
                - AccountType: Company
                  SourceAccountIds:
                    - b0c10ced-34eb-44b4-92e8-af5b008f3fb4
                    - 5176d000-bf17-40be-b140-9041d2b70eee
                  TargetAccountId: 51262225-8130-4320-8210-af5b008f64e5
                - AccountType: Customer
                  SourceAccountIds:
                    - 7799f19a-c9c9-42bf-968f-a759e3ea1ea6
                    - bb926ffe-5310-48bc-8202-6165fa3bdcad
                  TargetAccountId: 49b2abd4-df58-4f1d-bead-0fa6342f8a78
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/addresses/getAll:
    post:
      tags:
        - Addresses
      summary: Get all addresses
      description: "Returns all addresses associated with the specified accounts within the enterprise. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: addresses_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ChainIds:
                - 1df21f06-0cfc-4960-9c58-a3bf1261663e
                - 5fcd1933-22f2-40b9-84da-7db04cbecec2
              AccountIds:
                - 3db2c989-7d95-42b4-a502-a9f246db1634
              AddressIds:
                - fc7b2df3-de66-48a6-907d-af4600ecd892
              UpdatedUtc:
                StartUtc: '2022-12-10T00:00:00Z'
                EndUtc: '2022-12-17T00:00:00Z'
              ActivityStates:
                - Active
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResultPage'
              example:
                Addresses:
                  - Id: fc7b2df3-de66-48a6-907d-af4600ecd892
                    AccountId: 3db2c989-7d95-42b4-a502-a9f246db1634
                    AccountType: Customer
                    Line1: I.P. Pavlova 5
                    Line2: 
                    City: Prague
                    PostalCode: '12000'
                    CountryCode: CZ
                    CountrySubdivisionCode: 
                    Latitude: 
                    Longitude: 
                    UpdatedUtc: '2023-11-29T14:49:29.982Z'
                    IsActive: true
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/addresses/add:
    post:
      tags:
        - Addresses
      summary: Add addresses
      description: 'Adds one or more new addresses to the system and assigns them to specified accounts. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: addresses_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAddressAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Addresses:
                - AccountId: 3db2c989-7d95-42b4-a502-a9f246db1634
                  Line1: Rheinlanddamm 207-209
                  Line2: 
                  City: Dortmund
                  PostalCode: '44137'
                  CountryCode: DE
                  CountrySubdivisionCode: 
                  Latitude: 
                  Longitude: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResult'
              example:
                Addresses:
                  - Id: fc7b2df3-de66-48a6-907d-af4600ecd892
                    AccountId: 3db2c989-7d95-42b4-a502-a9f246db1634
                    AccountType: Customer
                    Line1: I.P. Pavlova 5
                    Line2: 
                    City: Prague
                    PostalCode: '12000'
                    CountryCode: CZ
                    CountrySubdivisionCode: 
                    Latitude: 
                    Longitude: 
                    UpdatedUtc: '2023-11-29T14:49:29.982Z'
                    IsActive: true
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/addresses/update:
    post:
      tags:
        - Addresses
      summary: Update addresses
      description: 'Updates one or more existing addresses in the system, assigned to specified accounts. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: addresses_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAddressUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              AddressUpdates:
                - AddressId: fc7b2df3-de66-48a6-907d-af4600ecd892
                  AccountId: 3db2c989-7d95-42b4-a502-a9f246db1634
                  Line1:
                    Value: I.P. Pavlova 5
                  Line2:
                    Value: 
                  City:
                    Value: Prague
                  PostalCode:
                    Value: '12000'
                  CountryCode:
                    Value: CZ
                  CountrySubdivisionCode:
                    Value: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResult'
              example:
                Addresses:
                  - Id: fc7b2df3-de66-48a6-907d-af4600ecd892
                    AccountId: 3db2c989-7d95-42b4-a502-a9f246db1634
                    AccountType: Customer
                    Line1: I.P. Pavlova 5
                    Line2: 
                    City: Prague
                    PostalCode: '12000'
                    CountryCode: CZ
                    CountrySubdivisionCode: 
                    Latitude: 
                    Longitude: 
                    UpdatedUtc: '2023-11-29T14:49:29.982Z'
                    IsActive: true
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/addresses/delete:
    post:
      tags:
        - Addresses
      summary: Delete addresses
      description: 'Deletes one or more addresses in the system. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: addresses_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              AddressIds:
                - cefa640f-43fa-4a02-8d20-f97f68e19ed5
                - 44108366-8e9b-4007-844b-8ebcca4ac009
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/ageCategories/getAll:
    post:
      tags:
        - Age categories
      summary: Get all age categories
      description: "Returns all age categories filtered by [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service). \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: ageCategories_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgeCategoryParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ServiceIds:
                - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              AgeCategoryIds:
                - fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                - ab58c939-be30-4a60-8f75-ae1600c60c9f
              UpdatedUtc:
                StartUtc: '2023-10-01T00:00:00Z'
                EndUtc: '2023-10-31T00:00:00Z'
              ActivityStates:
                - Active
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeCategoryResult'
              example: {"AgeCategories":[{"Id":"ab58c939-be30-4a60-8f75-ae1600c60c9f","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","MinimalAge":null,"MaximalAge":null,"Names":{"cs-CZ":"Dospělí","da-DK":"Voksne","de-CH":"Erwachsene","de-DE":"Erwachsene","el-GR":"Ενήλικοι","en-GB":"Adults"},"ShortNames":null,"CreatedUtc":"2023-10-01T11:48:57Z","UpdatedUtc":"2023-10-28T11:48:57Z","Classification":"Adult","IsActive":false,"ExternalIdentifier":"Adult"},{"Id":"fe568bbd-1ecb-4bb2-bf77-96c3698de20d","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","MinimalAge":0,"MaximalAge":18,"Names":{"cs-CZ":"Děti","da-DK":"Børn","de-CH":"Kinder","de-DE":"Kinder","el-GR":"Παιδιά","en-GB":"Children"},"ShortNames":null,"CreatedUtc":"2023-10-01T11:48:57Z","UpdatedUtc":"2023-10-28T11:48:57Z","Classification":"Child","IsActive":false,"ExternalIdentifier":null}],"Cursor":"0b9560fb-055d-47d3-a6d4-e579c44ca558"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/availabilityAdjustments/getAll:
    post:
      tags:
        - Availability adjustments
      summary: Get all availability adjustments
      description: "Returns all availability adjustments.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: availabilityAdjustments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityAdjustmentParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","AvailabilityAdjustmentIds":["e19297af-373e-4701-b4ea-afae0129bded","7413724a-6c48-46d4-ab3a-afae01280999"],"UpdatedUtc":{"StartUtc":"2023-02-18T18:00:10.155Z","EndUtc":"2023-02-20T18:00:10.155Z"},"ActivityStates":["Active","Deleted"],"EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":100}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAdjustmentResult'
              example: {"AvailabilityAdjustments":[{"Id":"e19297af-373e-4701-b4ea-afae0129bded","AvailabilityBlockId":"5ee074b1-6c86-48e8-915f-c7aa4702086f","ResourceCategoryId":"773d5e42-de1e-43a0-9ce6-f940faf2303f","StartUtc":null,"EndUtc":null,"FirstTimeUnitStartUtc":"2021-10-14T00:00:00Z","LastTimeUnitStartUtc":"2021-10-17T00:00:00Z","UnitCount":6,"ActivityState":"Active","ReleaseOverrideUtc":"2021-10-13T00:00:00Z","UpdatedUtc":"2021-10-21T13:32:32Z","IsActive":false,"PaxCounts":null,"FirstTimeUnitReleaseUtc":"2021-10-13T00:00:00Z"},{"Id":"7413724a-6c48-46d4-ab3a-afae01280999","AvailabilityBlockId":null,"ResourceCategoryId":"773d5e42-de1e-43a0-9ce6-f940faf2303f","StartUtc":null,"EndUtc":null,"FirstTimeUnitStartUtc":"2023-02-19T23:00:00Z","LastTimeUnitStartUtc":"2023-02-23T23:00:00Z","UnitCount":5,"ActivityState":"Deleted","ReleaseOverrideUtc":null,"UpdatedUtc":"2023-02-28T23:00:00Z","IsActive":false,"PaxCounts":null,"FirstTimeUnitReleaseUtc":null}],"Cursor":"7413724a-6c48-46d4-ab3a-afae01280999"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/availabilityBlocks/delete:
    post:
      tags:
        - Availability blocks
      summary: Delete availability blocks
      description: 'Delete availability blocks. Note that an availability block containing active reservations (reservations which are not Canceled) cannot be deleted. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: availabilityBlocks_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityBlockDeleteParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","AvailabilityBlockIds":["5ee074b1-6c86-48e8-915f-c7aa4702086f","c32386aa-1cd2-414a-a823-489325842fbe"],"EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/availabilityBlocks/getAll:
    post:
      tags:
        - Availability blocks
      summary: Get all availability blocks
      description: 'Returns all availability blocks filtered by services, unique identifiers and other filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: availabilityBlocks_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityBlockParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","Extent":{"AvailabilityBlocks":true,"Adjustments":true,"ServiceOrders":false,"Rates":false},"ServiceIds":["bd26d8db-86da-4f96-9efc-e5a4654a4a94"],"AvailabilityBlockIds":["5ee074b1-6c86-48e8-915f-c7aa4702086f"],"CreatedUtc":{"StartUtc":"2020-11-04T00:00:00Z","EndUtc":"2020-11-05T00:00:00Z"},"UpdatedUtc":{"StartUtc":"2020-11-04T00:00:00Z","EndUtc":"2020-11-05T00:00:00Z"},"CollidingUtc":{"StartUtc":"2020-11-04T00:00:00Z","EndUtc":"2020-11-05T00:00:00Z"},"ReleasedUtc":{"StartUtc":"2020-11-04T00:00:00Z","EndUtc":"2020-11-05T00:00:00Z"},"ExternalIdentifiers":["Block-0001"],"States":["Confirmed"],"ActivityStates":["Active"],"Limitation":{"Count":100}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityBlockResult'
              example: {"AvailabilityBlocks":[{"Id":"5ee074b1-6c86-48e8-915f-c7aa4702086f","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RateId":"ed4b660b-19d0-434b-9360-a4de2ea42eda","VoucherId":null,"BookerId":"ebd507c5-6bfd-4ca9-96aa-ffed6fa94f72","CompanyId":null,"TravelAgencyId":null,"Budget":{"Currency":"USD","Value":48.0,"Net":null,"Tax":null,"TaxRate":null},"State":"Confirmed","ReservationPurpose":"Leisure","CreatedUtc":"2020-11-04T13:00:00Z","UpdatedUtc":"2020-11-04T13:00:00Z","FirstTimeUnitStartUtc":"2020-11-04T13:00:00Z","LastTimeUnitStartUtc":"2020-11-04T13:00:00Z","ReleasedUtc":"2020-11-04T13:00:00Z","RollingReleaseOffset":null,"ExternalIdentifier":"Block-0001","Name":"Wedding group","Notes":"Have a nice stay","PickupDistribution":"AllInOneGroup","IsActive":false,"QuoteId":null,"AvailabilityBlockNumber":"478","ReleaseStrategy":"FixedRelease","PurchaseOrderNumber":"XX-123"},{"Id":"c32386aa-1cd2-414a-a823-489325842fbe","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RateId":"ed4b660b-19d0-434b-9360-a4de2ea42eda","VoucherId":null,"BookerId":"ebd507c5-6bfd-4ca9-96aa-ffed6fa94f72","CompanyId":null,"TravelAgencyId":null,"Budget":{"Currency":"USD","Value":48.0,"Net":null,"Tax":null,"TaxRate":null},"State":"Confirmed","ReservationPurpose":"Leisure","CreatedUtc":"2022-10-11T13:32:32Z","UpdatedUtc":"2022-10-11T13:32:32Z","FirstTimeUnitStartUtc":"2022-10-14T00:00:00Z","LastTimeUnitStartUtc":"2022-11-17T00:00:00Z","ReleasedUtc":null,"RollingReleaseOffset":"P-3DT4H","ExternalIdentifier":"Block-0002","Name":"Rolling release","Notes":null,"PickupDistribution":"AllInOneGroup","IsActive":false,"QuoteId":"67eaf3c8-81e0-4ffb-b5f2-2b61803feb9c","AvailabilityBlockNumber":"479","ReleaseStrategy":"RollingRelease","PurchaseOrderNumber":null}],"ServiceOrders":null,"Adjustments":[{"Id":"e19297af-373e-4701-b4ea-afae0129bded","AvailabilityBlockId":"5ee074b1-6c86-48e8-915f-c7aa4702086f","ResourceCategoryId":"773d5e42-de1e-43a0-9ce6-f940faf2303f","StartUtc":null,"EndUtc":null,"FirstTimeUnitStartUtc":"2021-10-14T00:00:00Z","LastTimeUnitStartUtc":"2021-10-17T00:00:00Z","UnitCount":6,"ActivityState":"Active","ReleaseOverrideUtc":"2021-10-13T00:00:00Z","UpdatedUtc":"2021-10-21T13:32:32Z","IsActive":false,"PaxCounts":null,"FirstTimeUnitReleaseUtc":"2021-10-13T00:00:00Z"}],"Rates":null,"Cursor":"c32386aa-1cd2-414a-a823-489325842fbe"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/availabilityBlocks/add:
    post:
      tags:
        - Availability blocks
      summary: Add availability blocks
      description: 'Adds availability blocks which are used to group related `Availability updates`. This makes limiting public availability easier and more organized. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: availabilityBlocks_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAvailabilityBlockAddParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","AvailabilityBlocks":[{"ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RateId":"ed4b660b-19d0-434b-9360-a4de2ea42eda","FirstTimeUnitStartUtc":"2020-11-05T00:00:00Z","LastTimeUnitStartUtc":"2020-11-06T00:00:00Z","ReleasedUtc":"2020-11-04T00:00:00Z","Name":"Mr. Smith's block","Budget":{"Currency":"USD","Value":48.0},"ExternalIdentifier":"Block-0001","State":"Confirmed"},{"ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RateId":"ed4b660b-19d0-434b-9360-a4de2ea42eda","FirstTimeUnitStartUtc":"2021-11-05T00:00:00Z","LastTimeUnitStartUtc":"2021-11-06T00:00:00Z","Name":"Rolling release block","Budget":{"Currency":"USD","Value":48.0},"ExternalIdentifier":"Block-0002","State":"Confirmed"}],"EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityBlockAddResult'
              example: {"AvailabilityBlocks":[{"Id":"5ee074b1-6c86-48e8-915f-c7aa4702086f","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RateId":"ed4b660b-19d0-434b-9360-a4de2ea42eda","VoucherId":null,"BookerId":"ebd507c5-6bfd-4ca9-96aa-ffed6fa94f72","CompanyId":null,"TravelAgencyId":null,"Budget":{"Currency":"USD","Value":48.0,"Net":null,"Tax":null,"TaxRate":null},"State":"Confirmed","ReservationPurpose":"Leisure","CreatedUtc":"2020-11-04T13:00:00Z","UpdatedUtc":"2020-11-04T13:00:00Z","FirstTimeUnitStartUtc":"2020-11-04T13:00:00Z","LastTimeUnitStartUtc":"2020-11-04T13:00:00Z","ReleasedUtc":"2020-11-04T13:00:00Z","RollingReleaseOffset":null,"ExternalIdentifier":"Block-0001","Name":"Wedding group","Notes":"Have a nice stay","PickupDistribution":"AllInOneGroup","IsActive":false,"QuoteId":null,"AvailabilityBlockNumber":"478","ReleaseStrategy":"FixedRelease","PurchaseOrderNumber":"XX-123"},{"Id":"c32386aa-1cd2-414a-a823-489325842fbe","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RateId":"ed4b660b-19d0-434b-9360-a4de2ea42eda","VoucherId":null,"BookerId":"ebd507c5-6bfd-4ca9-96aa-ffed6fa94f72","CompanyId":null,"TravelAgencyId":null,"Budget":{"Currency":"USD","Value":48.0,"Net":null,"Tax":null,"TaxRate":null},"State":"Confirmed","ReservationPurpose":"Leisure","CreatedUtc":"2022-10-11T13:32:32Z","UpdatedUtc":"2022-10-11T13:32:32Z","FirstTimeUnitStartUtc":"2022-10-14T00:00:00Z","LastTimeUnitStartUtc":"2022-11-17T00:00:00Z","ReleasedUtc":null,"RollingReleaseOffset":"P-3DT4H","ExternalIdentifier":"Block-0002","Name":"Rolling release","Notes":null,"PickupDistribution":"AllInOneGroup","IsActive":false,"QuoteId":"67eaf3c8-81e0-4ffb-b5f2-2b61803feb9c","AvailabilityBlockNumber":"479","ReleaseStrategy":"RollingRelease","PurchaseOrderNumber":null}],"ServiceOrders":null,"Adjustments":[{"Id":"e19297af-373e-4701-b4ea-afae0129bded","AvailabilityBlockId":"5ee074b1-6c86-48e8-915f-c7aa4702086f","ResourceCategoryId":"773d5e42-de1e-43a0-9ce6-f940faf2303f","StartUtc":null,"EndUtc":null,"FirstTimeUnitStartUtc":"2021-10-14T00:00:00Z","LastTimeUnitStartUtc":"2021-10-17T00:00:00Z","UnitCount":6,"ActivityState":"Active","ReleaseOverrideUtc":"2021-10-13T00:00:00Z","UpdatedUtc":"2021-10-21T13:32:32Z","IsActive":false,"PaxCounts":null,"FirstTimeUnitReleaseUtc":"2021-10-13T00:00:00Z"}],"Rates":null,"Cursor":"c32386aa-1cd2-414a-a823-489325842fbe"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/availabilityBlocks/update:
    post:
      tags:
        - Availability blocks
      summary: Update availability blocks
      description: 'Updates information about the specified `Availability block`. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: availabilityBlocks_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAvailabilityBlockUpdateParameters'
            example: {"AvailabilityBlocks":[{"AvailabilityBlockId":"5ee074b1-6c86-48e8-915f-c7aa4702086f","Name":{"Value":"Mr. Smith's block"},"FirstTimeUnitStartUtc":{"Value":"2021-07-05T00:00:00Z"},"LastTimeUnitStartUtc":{"Value":"2021-07-15T00:00:00Z"},"ExternalIdentifier":{"Value":"Block-0001"},"State":{"Value":"Confirmed"},"ReservationPurpose":{"Value":"Leisure"},"BookerId":{"Value":"ebd507c5-6bfd-4ca9-96aa-ffed6fa94f72"},"Notes":{"Value":"Have a nice stay"},"Budget":{"Value":{"Currency":"USD","Value":48.0}},"ReleasedUtc":{"Value":"2021-07-01T00:00:00Z"},"QuoteId":{}},{"AvailabilityBlockId":"c32386aa-1cd2-414a-a823-489325842fbe","Name":{"Value":"Rolling release block"},"FirstTimeUnitStartUtc":{"Value":"2022-07-05T00:00:00Z"},"LastTimeUnitStartUtc":{"Value":"2022-07-15T00:00:00Z"},"ExternalIdentifier":{"Value":"Block-0002"},"State":{"Value":"Confirmed"},"ReservationPurpose":{"Value":"Leisure"},"BookerId":{"Value":"ebd507c5-6bfd-4ca9-96aa-ffed6fa94f72"},"Notes":{"Value":"Have a nice stay"},"Budget":{"Value":{"Currency":"USD","Value":48.0}},"RollingReleaseOffset":{"Value":"P-3DT4H"},"ReleasedUtc":{"Value":"2021-07-01T00:00:00Z"},"ReleaseStrategy":{"Value":"RollingRelease"},"QuoteId":{"Value":"67eaf3c8-81e0-4ffb-b5f2-2b61803feb9c"}}]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityBlockAddResult'
              example: {"AvailabilityBlocks":[{"Id":"5ee074b1-6c86-48e8-915f-c7aa4702086f","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RateId":"ed4b660b-19d0-434b-9360-a4de2ea42eda","VoucherId":null,"BookerId":"ebd507c5-6bfd-4ca9-96aa-ffed6fa94f72","CompanyId":null,"TravelAgencyId":null,"Budget":{"Currency":"USD","Value":48.0,"Net":null,"Tax":null,"TaxRate":null},"State":"Confirmed","ReservationPurpose":"Leisure","CreatedUtc":"2020-11-04T13:00:00Z","UpdatedUtc":"2020-11-04T13:00:00Z","FirstTimeUnitStartUtc":"2020-11-04T13:00:00Z","LastTimeUnitStartUtc":"2020-11-04T13:00:00Z","ReleasedUtc":"2020-11-04T13:00:00Z","RollingReleaseOffset":null,"ExternalIdentifier":"Block-0001","Name":"Wedding group","Notes":"Have a nice stay","PickupDistribution":"AllInOneGroup","IsActive":false,"QuoteId":null,"AvailabilityBlockNumber":"478","ReleaseStrategy":"FixedRelease","PurchaseOrderNumber":"XX-123"},{"Id":"c32386aa-1cd2-414a-a823-489325842fbe","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RateId":"ed4b660b-19d0-434b-9360-a4de2ea42eda","VoucherId":null,"BookerId":"ebd507c5-6bfd-4ca9-96aa-ffed6fa94f72","CompanyId":null,"TravelAgencyId":null,"Budget":{"Currency":"USD","Value":48.0,"Net":null,"Tax":null,"TaxRate":null},"State":"Confirmed","ReservationPurpose":"Leisure","CreatedUtc":"2022-10-11T13:32:32Z","UpdatedUtc":"2022-10-11T13:32:32Z","FirstTimeUnitStartUtc":"2022-10-14T00:00:00Z","LastTimeUnitStartUtc":"2022-11-17T00:00:00Z","ReleasedUtc":null,"RollingReleaseOffset":"P-3DT4H","ExternalIdentifier":"Block-0002","Name":"Rolling release","Notes":null,"PickupDistribution":"AllInOneGroup","IsActive":false,"QuoteId":"67eaf3c8-81e0-4ffb-b5f2-2b61803feb9c","AvailabilityBlockNumber":"479","ReleaseStrategy":"RollingRelease","PurchaseOrderNumber":null}],"ServiceOrders":null,"Adjustments":[{"Id":"e19297af-373e-4701-b4ea-afae0129bded","AvailabilityBlockId":"5ee074b1-6c86-48e8-915f-c7aa4702086f","ResourceCategoryId":"773d5e42-de1e-43a0-9ce6-f940faf2303f","StartUtc":null,"EndUtc":null,"FirstTimeUnitStartUtc":"2021-10-14T00:00:00Z","LastTimeUnitStartUtc":"2021-10-17T00:00:00Z","UnitCount":6,"ActivityState":"Active","ReleaseOverrideUtc":"2021-10-13T00:00:00Z","UpdatedUtc":"2021-10-21T13:32:32Z","IsActive":false,"PaxCounts":null,"FirstTimeUnitReleaseUtc":"2021-10-13T00:00:00Z"}],"Rates":null,"Cursor":"c32386aa-1cd2-414a-a823-489325842fbe"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/billingAutomations/getAll:
    post:
      tags:
        - Billing automations
      summary: Get all billing automations
      description: 'Returns all billing automations. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: billingAutomations_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingAutomationFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","CompanyIds":["c6f5c82d-621a-4c8a-903b-1b0a9a23b71f","956aa0f0-a090-42c8-bee2-991972d32f80"],"BillingAutomationIds":["ecd64eec-4423-4c65-b844-814b9199856d","13e6b16e-39bc-4cb1-8610-70ecdb4f91cc"],"EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAutomationResult'
              example: {"BillingAutomations":[{"Id":"ecd64eec-4423-4c65-b844-814b9199856d","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","Name":"Continuous billing automation for company XYZ","Description":"Billing Automation for company XYZ with prepayment all, company as owner.","CompaniesWithRelations":[{"CompanyId":"c6f5c82d-621a-4c8a-903b-1b0a9a23b71f","CompanyRelations":{"PartnerCompany":true,"TravelAgency":false}}],"Prepayment":"All","AssignmentTargetType":"CompanyAsOwner","TriggerType":"Continuous","BillAggregationType":"AggregateAll","CreatedUtc":"2017-01-31T10:58:06Z","ProcessingStartOffset":null,"OrderItemConsumptionPeriod":null,"Assignments":[{"Id":"d6b550e9-9c4b-42dd-9daa-555312b030e6","BillingAutomationId":"ecd64eec-4423-4c65-b844-814b9199856d","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RoutedItemTypes":{"SpaceOrder":true,"CityTax":true,"AllProducts":true,"Deposits":true,"AdditionalExpenses":false,"AllCustomItems":false},"RateIds":["ab3682ba-4493-4eb0-bcdc-8d000f5bad65"],"ProductCategoryIds":["599c477e-b826-4444-8ded-4fa7276ef0c1"],"ProductIds":["f0184ec2-9f02-4026-9b70-0b2bed2adde7"],"AccountingCategoryAssignments":[{"AccountingCategoryId":"2e0f5930-605e-4a23-9994-a7701a56b576","ItemTypes":{"Products":true,"CustomItems":false}}]}]}],"Cursor":"54ec08b6-e6fc-48e9-b8ae-02943e0ac693"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/billingAutomations/add:
    post:
      tags:
        - Billing automations
      summary: Add billing automations
      description: Adds billing automations.
      operationId: billingAutomations_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleBillingAutomationAddParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","BillingAutomations":[{"Name":"Company A billing automation","Description":"Billing automation routing reservations made for Company A to bills where company is an owner, aggregating all reservations onto one bill.","CompaniesWithRelations":[{"CompanyId":"c6f5c82d-621a-4c8a-903b-1b0a9a23b71f","CompanyRelations":{"PartnerCompany":true,"TravelAgency":false}}],"Prepayment":"All","AssignmentTargetType":"CompanyAsOwner","TriggerType":"Continuous","BillAggregationType":"AggregateAll","Assignments":[{"ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RoutedItemTypes":{"SpaceOrder":true,"CityTax":true,"AllProducts":false,"Deposits":true,"AdditionalExpenses":true,"AllCustomItems":false},"ProductIds":["507d93e6-9fb5-4734-a6d1-977afc4dfdff"]}]}]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAutomationModificationResult'
              example: {"BillingAutomations":[{"Id":"ecd64eec-4423-4c65-b844-814b9199856d","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","Name":"Continuous billing automation for company XYZ","Description":"Billing Automation for company XYZ with prepayment all, company as owner.","CompaniesWithRelations":[{"CompanyId":"c6f5c82d-621a-4c8a-903b-1b0a9a23b71f","CompanyRelations":{"PartnerCompany":true,"TravelAgency":false}}],"Prepayment":"All","AssignmentTargetType":"CompanyAsOwner","TriggerType":"Continuous","BillAggregationType":"AggregateAll","CreatedUtc":"2017-01-31T10:58:06Z","ProcessingStartOffset":null,"OrderItemConsumptionPeriod":null,"Assignments":[{"Id":"d6b550e9-9c4b-42dd-9daa-555312b030e6","BillingAutomationId":"ecd64eec-4423-4c65-b844-814b9199856d","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RoutedItemTypes":{"SpaceOrder":true,"CityTax":true,"AllProducts":true,"Deposits":true,"AdditionalExpenses":false,"AllCustomItems":false},"RateIds":["ab3682ba-4493-4eb0-bcdc-8d000f5bad65"],"ProductCategoryIds":["599c477e-b826-4444-8ded-4fa7276ef0c1"],"ProductIds":["f0184ec2-9f02-4026-9b70-0b2bed2adde7"],"AccountingCategoryAssignments":[{"AccountingCategoryId":"2e0f5930-605e-4a23-9994-a7701a56b576","ItemTypes":{"Products":true,"CustomItems":false}}]}]}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/billingAutomations/update:
    post:
      tags:
        - Billing automations
      summary: Update billing automations
      description: Updates one or more existing billing automations.
      operationId: billingAutomations_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleBillingAutomationUpdateParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","BillingAutomationUpdates":[{"BillingAutomationId":"ecd64eec-4423-4c65-b844-814b9199856d","Name":{"Value":"New name."},"Description":{"Value":"Billing Automation that has prepayment changed to All, Assignment target to Company as owner and Bill aggregation to aggregate all items into one bill."},"Prepayment":{"Value":"All"},"AssignmentTargetType":{"Value":"CompanyAsOwner"},"BillAggregationType":{"Value":"AggregateAll"}}]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAutomationModificationResult'
              example: {"BillingAutomations":[{"Id":"ecd64eec-4423-4c65-b844-814b9199856d","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","Name":"Continuous billing automation for company XYZ","Description":"Billing Automation for company XYZ with prepayment all, company as owner.","CompaniesWithRelations":[{"CompanyId":"c6f5c82d-621a-4c8a-903b-1b0a9a23b71f","CompanyRelations":{"PartnerCompany":true,"TravelAgency":false}}],"Prepayment":"All","AssignmentTargetType":"CompanyAsOwner","TriggerType":"Continuous","BillAggregationType":"AggregateAll","CreatedUtc":"2017-01-31T10:58:06Z","ProcessingStartOffset":null,"OrderItemConsumptionPeriod":null,"Assignments":[{"Id":"d6b550e9-9c4b-42dd-9daa-555312b030e6","BillingAutomationId":"ecd64eec-4423-4c65-b844-814b9199856d","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RoutedItemTypes":{"SpaceOrder":true,"CityTax":true,"AllProducts":true,"Deposits":true,"AdditionalExpenses":false,"AllCustomItems":false},"RateIds":["ab3682ba-4493-4eb0-bcdc-8d000f5bad65"],"ProductCategoryIds":["599c477e-b826-4444-8ded-4fa7276ef0c1"],"ProductIds":["f0184ec2-9f02-4026-9b70-0b2bed2adde7"],"AccountingCategoryAssignments":[{"AccountingCategoryId":"2e0f5930-605e-4a23-9994-a7701a56b576","ItemTypes":{"Products":true,"CustomItems":false}}]}]}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/billingAutomations/updateAssignments:
    post:
      tags:
        - Billing automations
      summary: Update billing automations assignments
      description: 'Add, update or remove billing automation assignments of a specific billing automation.'
      operationId: billingAutomations_updateAssignments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingAutomationAssignmentsUpdateParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","BillingAutomationId":"ecd64eec-4423-4c65-b844-814b9199856d","AssignmentsToUpdate":[{"BillingAutomationAssignmentId":"00000000-0000-0000-0000-000000000000","RoutedItemTypes":{"SpaceOrder":{"Value":true},"CityTax":{"Value":true},"AllProducts":{"Value":false},"Deposits":{"Value":true},"AdditionalExpenses":{"Value":true},"AllCustomItems":{"Value":false}},"ProductIds":{"Value":["507d93e6-9fb5-4734-a6d1-977afc4dfdff"]}}]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAutomationAssignmentsUpdateParameters'
              example: {"BillingAutomations":[{"Id":"ecd64eec-4423-4c65-b844-814b9199856d","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","Name":"Continuous billing automation for company XYZ","Description":"Billing Automation for company XYZ with prepayment all, company as owner.","CompaniesWithRelations":[{"CompanyId":"c6f5c82d-621a-4c8a-903b-1b0a9a23b71f","CompanyRelations":{"PartnerCompany":true,"TravelAgency":false}}],"Prepayment":"All","AssignmentTargetType":"CompanyAsOwner","TriggerType":"Continuous","BillAggregationType":"AggregateAll","CreatedUtc":"2017-01-31T10:58:06Z","ProcessingStartOffset":null,"OrderItemConsumptionPeriod":null,"Assignments":[{"Id":"d6b550e9-9c4b-42dd-9daa-555312b030e6","BillingAutomationId":"ecd64eec-4423-4c65-b844-814b9199856d","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","RoutedItemTypes":{"SpaceOrder":true,"CityTax":true,"AllProducts":true,"Deposits":true,"AdditionalExpenses":false,"AllCustomItems":false},"RateIds":["ab3682ba-4493-4eb0-bcdc-8d000f5bad65"],"ProductCategoryIds":["599c477e-b826-4444-8ded-4fa7276ef0c1"],"ProductIds":["f0184ec2-9f02-4026-9b70-0b2bed2adde7"],"AccountingCategoryAssignments":[{"AccountingCategoryId":"2e0f5930-605e-4a23-9994-a7701a56b576","ItemTypes":{"Products":true,"CustomItems":false}}]}]}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/billingAutomations/delete:
    post:
      tags:
        - Billing automations
      summary: Delete billing automations
      description: Deletes specified billing automations.
      operationId: billingAutomations_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingAutomationDeleteParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","BillingAutomationIds":["ecd64eec-4423-4c65-b844-814b9199856d","13e6b16e-39bc-4cb1-8610-70ecdb4f91cc"]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
              example: {}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/bills/update:
    post:
      tags:
        - Bills
      summary: Update bills
      description: 'Updates one or more existing bills in the system. Closed bills cannot be updated. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: bills_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleBillsUpdateParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","BillsUpdates":[{"BillId":"ea087d64-3901-4eee-b0b7-9fce4c58a005","AccountId":{"Value":"c6f5c82d-621a-4c8a-903b-1b0a9a23b71f"},"AssociatedAccountIds":{"Value":["fadd5bb6-b428-45d5-94f8-fd0d89fece6d"]}}],"EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillsUpdateResult'
              example: {"Bills":[{"Id":"ea087d64-3901-4eee-b0b7-9fce4c58a005","Name":"Accommodation Charges","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","AccountId":"c6f5c82d-621a-4c8a-903b-1b0a9a23b71f","AccountType":"Company","CustomerId":null,"CompanyId":null,"AssociatedAccountIds":["fadd5bb6-b428-45d5-94f8-fd0d89fece6d"],"CounterId":null,"State":"Closed","Type":"Invoice","Number":"29","VariableSymbol":null,"CreatedUtc":"2017-01-31T10:48:06Z","IssuedUtc":"2017-01-31T10:58:06Z","TaxedUtc":null,"PaidUtc":null,"DueUtc":null,"LastReminderDateUtc":null,"UpdatedUtc":"2017-01-31T10:58:06Z","PurchaseOrderNumber":"XX-123","Notes":"","Options":{"DisplayCustomer":true,"DisplayTaxation":true,"TrackReceivable":true,"DisplayCid":false,"Rebated":false},"Revenue":[],"Payments":[],"OrderItems":[],"PaymentItems":[],"AssigneeData":null,"OwnerData":{"Discriminator":"BillCompanyData","Value":{"Id":"26afba60-06c3-455b-92db-0e3983be0b1d","Address":{"Line1":"I.P. Pavlova 5","Line2":null,"City":"Prague","PostalCode":"12000","SubdivisionCode":"CZ-PR","CountryCode":"CZ"},"LegalIdentifiers":{"TaxIdentifier":"CZ24227781","CityOfRegistration":"Prague"},"BillingCode":"Billing code value","Name":"Acme, Inc.","FiscalIdentifier":"Fiscal identifier","AdditionalTaxIdentifier":"Additional tax identifier","DUNS":"150483782","Telephone":"+420123456789","TaxIdentifier":"CZ24227781","InvoicingEmail":"billing@acme.example","Department":"Billing"}},"CompanyDetails":null,"AssociatedAccountData":[{"Discriminator":"BillCompanyData","BillCustomerData":null,"BillCompanyData":{"Id":"26afba60-06c3-455b-92db-0e3983be0b1d","Address":{"Line1":"I.P. Pavlova 5","Line2":null,"City":"Prague","PostalCode":"12000","SubdivisionCode":"CZ-PR","CountryCode":"CZ"},"LegalIdentifiers":{"TaxIdentifier":"CZ24227781","CityOfRegistration":"Prague"},"BillingCode":"Billing code value","Name":"Acme, Inc.","FiscalIdentifier":"Fiscal identifier","AdditionalTaxIdentifier":"Additional tax identifier","DUNS":"150483782","Telephone":"+420123456789","TaxIdentifier":"CZ24227781","InvoicingEmail":"billing@acme.example","Department":"Billing"}}],"EnterpriseData":{"AdditionalTaxIdentifier":"XY00112233445","CompanyName":"The Sample Hotel Group AS","BankAccount":"CZ3808000000000012345678","BankName":"CESKA SPORITELNA A.S.","Iban":"CZ6508000000192000145399","Bic":"GIBACZPX"},"CorrectionState":"Bill","CorrectionType":null,"CorrectedBillId":null}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/bills/getAll:
    post:
      tags:
        - Bills
      summary: Get all bills
      description: 'Returns all bills, optionally filtered by customers, identifiers and other filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).'
      operationId: bills_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","Extent":{"Items":false},"ClosedUtc":{"StartUtc":"2020-02-05T00:00:00Z","EndUtc":"2020-02-10T00:00:00Z"},"CreatedUtc":{"StartUtc":"2020-02-05T00:00:00Z","EndUtc":"2020-02-10T00:00:00Z"},"UpdatedUtc":{"StartUtc":"2020-02-05T00:00:00Z","EndUtc":"2020-02-10T00:00:00Z"},"BillIds":["e654f217-d1b5-46be-a820-e93ba568dfac"],"CustomerIds":["fe795f96-0b64-445b-89ed-c032563f2bac"],"State":"Closed","EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":100,"Cursor":"e7f26210-10e7-462e-9da8-ae8300be8ab7"}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillsResult'
              example: {"Bills":[{"Id":"ea087d64-3901-4eee-b0b7-9fce4c58a005","Name":"Accommodation Charges","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","AccountId":"c6f5c82d-621a-4c8a-903b-1b0a9a23b71f","AccountType":"Company","CustomerId":null,"CompanyId":null,"AssociatedAccountIds":["fadd5bb6-b428-45d5-94f8-fd0d89fece6d"],"CounterId":null,"State":"Closed","Type":"Invoice","Number":"29","VariableSymbol":null,"CreatedUtc":"2017-01-31T10:48:06Z","IssuedUtc":"2017-01-31T10:58:06Z","TaxedUtc":null,"PaidUtc":null,"DueUtc":null,"LastReminderDateUtc":null,"UpdatedUtc":"2017-01-31T10:58:06Z","PurchaseOrderNumber":"XX-123","Notes":"","Options":{"DisplayCustomer":true,"DisplayTaxation":true,"TrackReceivable":true,"DisplayCid":false,"Rebated":false},"Revenue":[],"Payments":[],"OrderItems":[],"PaymentItems":[],"AssigneeData":null,"OwnerData":{"Discriminator":"BillCompanyData","Value":{"Id":"26afba60-06c3-455b-92db-0e3983be0b1d","Address":{"Line1":"I.P. Pavlova 5","Line2":null,"City":"Prague","PostalCode":"12000","SubdivisionCode":"CZ-PR","CountryCode":"CZ"},"LegalIdentifiers":{"TaxIdentifier":"CZ24227781","CityOfRegistration":"Prague"},"BillingCode":"Billing code value","Name":"Acme, Inc.","FiscalIdentifier":"Fiscal identifier","AdditionalTaxIdentifier":"Additional tax identifier","DUNS":"150483782","Telephone":"+420123456789","TaxIdentifier":"CZ24227781","InvoicingEmail":"billing@acme.example","Department":"Billing"}},"CompanyDetails":null,"AssociatedAccountData":[{"Discriminator":"BillCompanyData","BillCustomerData":null,"BillCompanyData":{"Id":"26afba60-06c3-455b-92db-0e3983be0b1d","Address":{"Line1":"I.P. Pavlova 5","Line2":null,"City":"Prague","PostalCode":"12000","SubdivisionCode":"CZ-PR","CountryCode":"CZ"},"LegalIdentifiers":{"TaxIdentifier":"CZ24227781","CityOfRegistration":"Prague"},"BillingCode":"Billing code value","Name":"Acme, Inc.","FiscalIdentifier":"Fiscal identifier","AdditionalTaxIdentifier":"Additional tax identifier","DUNS":"150483782","Telephone":"+420123456789","TaxIdentifier":"CZ24227781","InvoicingEmail":"billing@acme.example","Department":"Billing"}}],"EnterpriseData":{"AdditionalTaxIdentifier":"XY00112233445","CompanyName":"The Sample Hotel Group AS","BankAccount":"CZ3808000000000012345678","BankName":"CESKA SPORITELNA A.S.","Iban":"CZ6508000000192000145399","Bic":"GIBACZPX"},"CorrectionState":"Bill","CorrectionType":null,"CorrectedBillId":null}],"Cursor":"ea087d64-3901-4eee-b0b7-9fce4c58a005"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/bills/getPdf:
    post:
      tags:
        - Bills
      summary: Get bill PDF
      description: 'Creates a PDF version of the specified bill. In case it''s not possible to return PDF immediately, you must retry the call later while providing the unique event identifier that is returned from the first invocation.'
      operationId: bills_getPdf
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillPdfParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","BillId":"44eba542-193e-47c7-8077-abd7008eb206","PdfTemplate":"Detailed"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillPdfResult'
              example: {"BillId":"44eba542-193e-47c7-8077-abd7008eb206","Result":{"Discriminator":"BillPdfFile","Value":{"Base64Data":"JVBERi0xLj..."}}}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/bills/add:
    post:
      tags:
        - Bills
      summary: Add bill
      description: 'Creates new empty bill assigned to specified account. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: bills_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleBillAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              Bills:
                - AccountId: a5786a7b-a388-43cc-a838-abd7007b5ff7
                  Name: Bill of Joe Doe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillsAddResult'
              example:
                BillId: 44eba542-193e-47c7-8077-abd7008eb206
                Result:
                  Discriminator: BillPdfFile
                  Value:
                    Base64Data: JVBER.....
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/bills/delete:
    post:
      tags:
        - Bills
      summary: Delete bill
      description: 'Removes selected bills. Bill must be empty, otherwise it''s not possible to delete it. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: bills_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              BillIds:
                - 177966b7-f3d9-42b7-ba49-abd80057329b
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/bills/close:
    post:
      tags:
        - Bills
      summary: Close bill
      description: 'Closes a bill so no further modification to it is possible. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: bills_close
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillCloseParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              BillId: 44eba542-193e-47c7-8077-abd7008eb206
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              Type: Receipt
              BillCounterId: 84b25778-c1dd-48dc-8c00-ab3a00b6df14
              FiscalMachineId: 
              Options:
                DisplayCustomer:
                  Value: false
                DisplayTaxation: 
              TaxedDate:
                Value: '2020-07-07'
              DueDate:
                Value: '2020-07-14'
              VariableSymbol:
                Value: '5343'
              AccountTaxIdentifier:
                Value: '446768'
              AccountAddress:
                Line1: Astronautů 2
                Line2: ''
                City: Havířov
                PostalCode: '736 01'
                CountryCode: CZ
                CountrySubdivisionCode: 
              PurchaseOrderNumber:
                Value: XX-123
              Notes:
                Value: Bill closing note
              AssociatedAccountData:
                - Id: 84b25778-c1dd-48dc-8c00-ab3a00b6df14
                  TaxIdentifier:
                    Value: '123459'
                  Address:
                    Line1: Astronautů 2
                    Line2: ''
                    City: Havířov
                    PostalCode: '736 01'
                    CountryCode: CZ
                    CountrySubdivisionCode: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillsCloseResult'
              example:
                BillId: 44eba542-193e-47c7-8077-abd7008eb206
                Result:
                  Discriminator: BillPdfFile
                  Value:
                    Base64Data: JVBER.....
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/businessSegments/getAll:
    post:
      tags:
        - Business segments
      summary: Get all business segments
      description: 'Returns all business segments. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: businessSegments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessSegmentFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","Ids":["7760b5cb-a666-41bb-9758-76bf5d1df399","54ec08b6-e6fc-48e9-b8ae-02943e0ac693"],"ServiceIds":["bd26d8db-86da-4f96-9efc-e5a4654a4a94","8c1bd738-a505-4b29-aa71-9ecc2982b843"],"UpdatedUtc":{"StartUtc":"2023-10-01T00:00:00Z","EndUtc":"2023-10-31T00:00:00Z"},"ActivityStates":["Active"],"EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":10}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessSegmentResult'
              example: {"BusinessSegments":[{"Id":"7760b5cb-a666-41bb-9758-76bf5d1df399","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","IsActive":true,"Name":"Business","CreatedUtc":"2023-10-01T00:00:00Z","UpdatedUtc":"2023-10-01T00:00:00Z"},{"Id":"54ec08b6-e6fc-48e9-b8ae-02943e0ac693","ServiceId":"8c1bd738-a505-4b29-aa71-9ecc2982b843","IsActive":true,"Name":"Leisure","CreatedUtc":"2023-10-01T00:00:00Z","UpdatedUtc":"2023-10-01T00:00:00Z"}],"Cursor":"54ec08b6-e6fc-48e9-b8ae-02943e0ac693"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/cancellationPolicies/getAll:
    post:
      tags:
        - Cancellation policies
      summary: Get all cancellation policies
      description: "> ### Restricted!\n> This operation is currently in beta-test and as such it is subject to change.\nReturns all cancellation policies, filtered by services, rate groups and other filters. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: cancellationPolicies_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancellationPolicyFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ServiceIds:
                - e654f217-d1b5-46be-a820-e93ba568dfac
              CancellationPolicyIds:
                - fe795f96-0b64-445b-89ed-c032563f2bac
              RateGroupIds:
                - deb9444e-6897-4f2a-86b4-aff100c2896e
              UpdatedUtc:
                StartUtc: '2023-04-27T11:48:57Z'
                EndUtc: '2023-04-27T11:48:57Z'
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancellationPolicyResult'
              example:
                CancellationPolicies:
                  - Id: 769fc613-838f-41a7-ac2a-aff100c3189f
                    RateGroupId: deb9444e-6897-4f2a-86b4-aff100c2896e
                    CreatedUtc: '2023-04-27T11:48:57Z'
                    UpdatedUtc: '2023-04-27T11:48:57Z'
                    Applicability: Creation
                    FeeExtent:
                      - TimeUnits
                      - Products
                    ApplicabilityOffset: 0M0D0:0:0.0
                    FeeMaximumTimeUnits: 0
                    AbsoluteFee:
                      Currency: EUR
                      Value: 15
                    RelativeFee: 0
                Cursor: 769fc613-838f-41a7-ac2a-aff100c3189f
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/cancellationPolicies/getByReservations:
    post:
      tags:
        - Cancellation policies
      summary: Get cancellation policies by reservations
      description: 'Gets cancellation policies for enterprise grouped by reservation for granular cancellation policies flow. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: cancellationPolicies_getByReservations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancellationPolicyByReservationParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ReservationIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancellationPolicyByReservationResult'
              example: {"CancellationPolicies":[{"ReservationId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","Policies":[{"Applicability":"Start","FeeExtents":["TimeUnits","Products"],"ApplicabilityOffset":"P10DT20H30M","FeeMaximumTimeUnits":1,"AbsoluteFee":{"Currency":"EUR","Value":20.0},"RelativeFee":0.1}]},{"ReservationId":"4d0201db-36f5-428b-8d11-4f0a65e960cc","Policies":[{"Applicability":"Start","FeeExtents":["TimeUnits","Products"],"ApplicabilityOffset":"P5DT10H30M","FeeMaximumTimeUnits":2,"AbsoluteFee":{"Currency":"EUR","Value":15.0},"RelativeFee":0.4},{"Applicability":"Start","FeeExtents":["TimeUnits","Products"],"ApplicabilityOffset":"P10DT10H30M","FeeMaximumTimeUnits":2,"AbsoluteFee":{"Currency":"EUR","Value":15.0},"RelativeFee":0.2}]}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/cancellationPolicies/getByRates:
    post:
      tags:
        - Cancellation policies
      summary: Get cancellation policies by rates
      description: 'Gets cancellation policies for enterprise grouped by rate for granular cancellation policies flow. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: cancellationPolicies_getByRates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancellationPolicyByRateParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","RateIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancellationPolicyByRateResult'
              example: {"CancellationPolicies":[{"RateId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","Policies":[{"Applicability":"Start","FeeExtents":["TimeUnits","Products"],"ApplicabilityOffset":"P10DT20H30M","FeeMaximumTimeUnits":1,"AbsoluteFee":{"Currency":"EUR","Value":20.0},"RelativeFee":0.1}]},{"RateId":"4d0201db-36f5-428b-8d11-4f0a65e960cc","Policies":[{"Applicability":"Start","FeeExtents":["TimeUnits","Products"],"ApplicabilityOffset":"P5DT10H30M","FeeMaximumTimeUnits":2,"AbsoluteFee":{"Currency":"EUR","Value":15.0},"RelativeFee":0.4},{"Applicability":"Start","FeeExtents":["TimeUnits","Products"],"ApplicabilityOffset":"P10DT10H30M","FeeMaximumTimeUnits":2,"AbsoluteFee":{"Currency":"EUR","Value":15.0},"RelativeFee":0.2}]}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/cashierTransactions/getAll:
    post:
      tags:
        - Cashier transactions
      summary: Get all cashier transactions
      description: 'Returns all cashier transactions. At least one of the filter parameters `CashierTransactionIds` or `CreatedUtc` must be specified in the request. Note this operation uses [Pagination](../guidelines/pagination.md) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: cashierTransactions_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashierTransactionParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              CashierTransactionIds:
                - 177740c3-fec9-4338-a224-a3b03a35b3e1
              CreatedUtc:
                StartUtc: '2020-01-05T00:00:00Z'
                EndUtc: '2020-01-10T00:00:00Z'
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashierTransactionResult'
              example:
                CashierTransactions:
                  - Amount:
                      Currency: EUR
                      Value: 100
                    CashierId: 9a36e3fa-2299-474b-a8a2-5ea4da317abc
                    CreatedUtc: '2017-01-10T00:00:00Z'
                    Id: 177740c3-fec9-4338-a224-a3b03a35b3e1
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    Notes: Cash payment EUR
                    Number: '47'
                    PaymentId: a68ef257-2fbc-4a4f-85de-59d808cef657
                Cursor: 177740c3-fec9-4338-a224-a3b03a35b3e1
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/cashiers/getAll:
    post:
      tags:
        - Cashiers
      summary: Get all cashiers
      description: 'Returns all cashiers. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: cashiers_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashierParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","Ids":["9a36e3fa-2299-474b-a8a2-5ea4da317abc"],"UpdatedUtc":{"StartUtc":"2023-10-01T00:00:00Z","EndUtc":"2023-10-31T00:00:00Z"},"ActivityStates":["Active"],"EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":10}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashierResult'
              example: {"Cashiers":[{"Id":"9a36e3fa-2299-474b-a8a2-5ea4da317abc","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","IsActive":true,"Name":"Main Cashier","CreatedUtc":"2023-10-01T11:48:57Z","UpdatedUtc":"2023-10-28T11:48:57Z"}],"Cursor":"0b9560fb-055d-47d3-a6d4-e579c44ca558"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/commands/getAllByIds:
    post:
      tags:
        - Commands
      summary: Get all commands by ids
      description: Returns all commands by their identifiers.
      operationId: commands_getAllByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCommandFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              CommandIds:
                - aa20961f-6d9e-4b35-ad25-071213530aec
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCommandResult'
              example:
                Commands:
                  - Id: aa20961f-6d9e-4b35-ad25-071213530aec
                    State: Pending
                    CreatedUtc: '2015-09-02T19:25:44Z'
                    Creator:
                      FirstName: Sample
                      LastName: User
                      ImageUrl: ...
                    Device:
                      Id: 63efb573-fc58-4065-b687-9bdd51568529
                      Name: Test Printer
                      Type: Printer
                    Data:
                      CopyCount: 1
                      FileType: application/pdf
                      FileData: ...
                      PrinterName: Printer
                      PrinterDriverName: ''
                      PrinterPortName: ''
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/commands/getAllActive:
    post:
      tags:
        - Commands
      summary: Get all commands
      description: Returns all commands the are still active from the client application point of view. That means commands that are in either `Pending` or `Received` state.
      operationId: commands_getAllActive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllActiveCommandsParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCommandResult'
              example:
                Commands:
                  - Id: aa20961f-6d9e-4b35-ad25-071213530aec
                    State: Pending
                    CreatedUtc: '2015-09-02T19:25:44Z'
                    Creator:
                      FirstName: Sample
                      LastName: User
                      ImageUrl: ...
                    Device:
                      Id: 63efb573-fc58-4065-b687-9bdd51568529
                      Name: Test Printer
                      Type: Printer
                    Data:
                      CopyCount: 1
                      FileType: application/pdf
                      FileData: ...
                      PrinterName: Printer
                      PrinterDriverName: ''
                      PrinterPortName: ''
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/commands/addPrinter:
    post:
      tags:
        - Commands
      summary: Add printer command
      description: 'Adds a new printer command representing printing of the specified document on a printer. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: commands_addPrinter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrinterCommandParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              PrinterId: d117866d-78de-4459-9077-42d7ea0120e3
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              CopyCount: 1
              Data: JVBERi0xLjcKCjEgMCBvYmogICUgZW50cnkgcG9pbnQKPDwKICAvVHlwZSAvQ2F0YWxvZwogIC9QYWdlcyAyIDAgUgo+PgplbmRvYmoKCjIgMCBvYmoKPDwKICAvVHlwZSAvUGFnZXMKICAvTWVkaWFCb3ggWyAwIDAgMjAwIDIwMCBdCiAgL0NvdW50IDEKICAvS2lkcyBbIDMgMCBSIF0KPj4KZW5kb2JqCgozIDAgb2JqCjw8CiAgL1R5cGUgL1BhZ2UKICAvUGFyZW50IDIgMCBSCiAgL1Jlc291cmNlcyA8PAogICAgL0ZvbnQgPDwKICAgICAgL0YxIDQgMCBSIAogICAgPj4KICA+PgogIC9Db250ZW50cyA1IDAgUgo+PgplbmRvYmoKCjQgMCBvYmoKPDwKICAvVHlwZSAvRm9udAogIC9TdWJ0eXBlIC9UeXBlMQogIC9CYXNlRm9udCAvVGltZXMtUm9tYW4KPj4KZW5kb2JqCgo1IDAgb2JqICAlIHBhZ2UgY29udGVudAo8PAogIC9MZW5ndGggNDQKPj4Kc3RyZWFtCkJUCjcwIDUwIFRECi9GMSAxMiBUZgooSGVsbG8sIHdvcmxkISkgVGoKRVQKZW5kc3RyZWFtCmVuZG9iagoKeHJlZgowIDYKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAwMDEwIDAwMDAwIG4gCjAwMDAwMDAwNzkgMDAwMDAgbiAKMDAwMDAwMDE3MyAwMDAwMCBuIAowMDAwMDAwMzAxIDAwMDAwIG4gCjAwMDAwMDAzODAgMDAwMDAgbiAKdHJhaWxlcgo8PAogIC9TaXplIDYKICAvUm9vdCAxIDAgUgo+PgpzdGFydHhyZWYKNDkyCiUlRU9G
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCommandAddResult'
              example:
                CommandId: 2391a3df-1c61-4131-b6f8-c85b4234adcb
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/commands/addKeyCutter:
    post:
      tags:
        - Commands
      summary: Add key cutter command
      description: 'Adds a new key cutter command representing cutting of a key for the specified reservation. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: commands_addKeyCutter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyCutterCommandParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              KeyCutterId: 7dafffff-a727-4917-a203-bd53995f21bf
              ReservationId: be35b39e-ad7e-460a-8de9-4c7581e016a2
              KeyCount: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCommandAddResult'
              example:
                CommandId: 2391a3df-1c61-4131-b6f8-c85b4234adcb
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/commands/addPaymentTerminal:
    post:
      tags:
        - Commands
      summary: Add payment command
      description: "> ### Restricted!\r\n> This operation is part of a custom workflow for Mews partners such as POS systems to access Mews Payment Terminals.\r\n> See [Mews Payment Terminals](https://mews-systems.gitbook.io/connector-api/use-cases/mews-terminals).\r\n\r\nAdds a new Mews Payment Terminal command for taking a customer payment.\r\nThe operation instructs a specified terminal device to take a payment from a specified customer for a specified amount."
      operationId: commands_addPaymentTerminal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTerminalCommandParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: 7059D2C25BF64EA681ACAB3A00B859CC-D91BFF2B1E3047A3E0DEC1D57BE1382
              Client: MyPOS 1.0
              Type: Payment
              TerminalId: be35b39e-ad7e-460a-8de9-4c7581e016a2
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
              BillId: 
              Amount:
                Currency: EUR
                Value: 230
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCommandAddResult'
              example:
                CommandId: 2391a3df-1c61-4131-b6f8-c85b4234adcb
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/commands/update:
    post:
      tags:
        - Commands
      summary: Update command
      description: Updates state of a command.
      operationId: commands_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCommandUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              CommandId: aa20961f-6d9e-4b35-ad25-071213530aec
              State: Processed
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/fiscalMachineCommands/getAll:
    post:
      tags:
        - Commands
      summary: Get all fiscal machine commands
      description: 'Returns fiscal machine commands. The commands can be filtered either by unique command identifiers or by `Device` unique identifiers and command states. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: fiscalMachineCommands_getAll
      requestBody:
        content:
          application/json:
            schema:
              title: Get all commands filter parameters
              oneOf:
                - $ref: '#/components/schemas/CommandsGetAllFilterByCommandIdParameters'
                - $ref: '#/components/schemas/CommandsGetAllFilterByStatesParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","DeviceIds":["d117866d-78de-4459-9077-42d7ea0120e3","7dafffff-a727-4917-a203-bd53995f21bf"],"States":["Processed","Processing"],"UpdatedUtc":{"StartUtc":"2025-01-10T00:00:00Z","EndUtc":"2025-01-17T00:00:00Z"},"EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":100}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FiscalMachineCommandDataV20250623Result'
              example: {"Commands":[{"Id":"aa20961f-6d9e-4b35-ad25-071213530aec","State":"Processing","CreatedUtc":"2025-01-15T14:30:00Z","Creator":{"Discriminator":"Enterprise","EnterpriseProfile":{"ProfileId":"3cd637ef-4728-47f9-8fb1-afb900c9cdcf"}},"FiscalMachineId":"FM-001","ApiUrl":"https://fiscal-machine.example.com/api","FiscalMachineData":"{\"printerPort\": \"COM1\", \"baudRate\": 9600}","TaxIdentifier":"12345678901","Device":{"Id":"d117866d-78de-4459-9077-42d7ea0120e3","Type":"FiscalMachine","Name":"Fiscal Printer FP-001","Identifier":null},"Bill":{"Id":"ea087d64-3901-4eee-b0b7-9fce4c58a005","Name":"Hotel Invoice #1001","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","AccountId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","AssociatedAccountIds":null,"CounterId":null,"State":"Closed","Type":"Invoice","Number":"1001","VariableSymbol":"VS001","CreatedUtc":"2025-01-15T10:00:00Z","UpdatedUtc":"2025-01-15T14:25:00Z","IssuedUtc":"2025-01-15T14:25:00Z","TaxedUtc":"2025-01-15T14:25:00Z","PaidUtc":null,"DueUtc":"2025-01-29T23:59:59Z","LastReminderDateUtc":null,"PurchaseOrderNumber":"PO-2025-001","Notes":"Hotel accommodation services","Options":null,"Owner":null,"AssociatedAccountsData":null,"EnterpriseData":null,"CorrectionState":"Bill","CorrectionType":null,"CorrectedBillId":null},"CommandData":{"Discriminator":"ItalianFiscalMachineData","ItalianFiscalMachineData":{"IsRefund":false,"RebatedReceiptNumber":null,"RebatedReceiptSequence":null,"RebatedReceiptDateTimeUtc":null,"PrinterSerialNumber":"FP001-123456"},"ItalianFiscalMachinePayload":null}},{"Id":"f2e8c456-1234-4567-89ab-cdef01234567","State":"Processed","CreatedUtc":"2025-01-15T13:15:00Z","Creator":{"Discriminator":"Enterprise","EnterpriseProfile":{"ProfileId":"3cd637ef-4728-47f9-8fb1-afb900c9cdcf"}},"FiscalMachineId":"FM-002","ApiUrl":"https://fiscal-machine-2.example.com/api","FiscalMachineData":"{\"printerPort\": \"USB001\", \"certificatePath\": \"/etc/fiscal/cert.p12\"}","TaxIdentifier":"98765432109","Device":{"Id":"7dafffff-a727-4917-a203-bd53995f21bf","Type":"FiscalMachine","Name":"Fiscal Printer FP-002","Identifier":null},"Bill":{"Id":"12345678-1234-1234-1234-123456789012","Name":"Restaurant Bill #2001","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","AccountId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","AssociatedAccountIds":null,"CounterId":null,"State":"Closed","Type":"Receipt","Number":"2001","VariableSymbol":"VS002","CreatedUtc":"2025-01-15T12:30:00Z","UpdatedUtc":"2025-01-15T13:10:00Z","IssuedUtc":"2025-01-15T13:10:00Z","TaxedUtc":"2025-01-15T13:10:00Z","PaidUtc":"2025-01-15T13:10:00Z","DueUtc":null,"LastReminderDateUtc":null,"PurchaseOrderNumber":null,"Notes":"Restaurant services - Table 15","Options":null,"Owner":null,"AssociatedAccountsData":null,"EnterpriseData":null,"CorrectionState":"Bill","CorrectionType":null,"CorrectedBillId":null},"CommandData":{"Discriminator":"ItalianFiscalMachinePayload","ItalianFiscalMachineData":null,"ItalianFiscalMachinePayload":{"Payload":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPGZ2cF9kb2M+CiAgPGhlYWRlcj4KICAgIDx0aW1lc3RhbXA+MjAyNS0wMS0xNVQxMzoxMDowMFo8L3RpbWVzdGFtcD4KICA8L2hlYWRlcj4KICA8Ym9keT4KICAgIDxyZWNlaXB0X2RhdGE+U2FtcGxlIGZpc2NhbCByZWNlaXB0IGRhdGE8L3JlY2VpcHRfZGF0YT4KICA8L2JvZHk+CjwvZnZwX2RvYz4="}}}],"Cursor":"f2e8c456-1234-4567-89ab-cdef01234567"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/companies/add:
    post:
      tags:
        - Companies
      summary: Add company
      description: 'Adds a new company. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: companies_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              Name: Mews
              Options:
                Invoiceable: true
                AddFeesToInvoices: true
              MotherCompanyId: 
              Identifier: 
              TaxIdentifier: 
              AdditionalTaxIdentifier: 
              BillingCode: 
              AccountingCode: 
              Address: 
              InvoiceDueInterval: P2DT23H
              Telephone: 111-222-333
              ContacPerson: SamplePerson
              Contact: ContactInfo
              Notes: Note1
              Iata: PAO
              Department: Sales
              DunsNumber: '987654321'
              CreditRating:
                Basic: CreditOk
              ExternalIdentifier: '1234'
              ReferenceIdentifier: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
              WebsiteUrl: https://www.mews.com
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResult'
              example:
                Companies:
                  - Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                    ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                    Name: Sample Company 1
                    IsActive: true
                    Number: 11
                    Identifier: 
                    TaxIdentifier: 
                    AdditionalTaxIdentifier: 
                    ElectronicInvoiceIdentifier: 
                    InvoiceDueInterval: P2DT23H
                    AccountingCode: 
                    MotherCompanyId: 
                    CreatedUtc: '2022-07-11T09:56:54Z'
                    UpdatedUtc: '2022-07-11T09:56:54Z'
                    AddressId: bab7441c-4b82-43bc-8001-ab0400a346ec
                    BillingCode: 
                    Iata: PAO
                    Telephone: 111-222-333
                    InvoicingEmail: sample1@mews.com
                    ContacPerson: Sample Person 1
                    Contact: Contact Info 1
                    Notes: Note 1
                    Options:
                      Invoiceable: true
                      AddFeesToInvoices: true
                    Department: Sales
                    DunsNumber: '123456789'
                    CreditRating:
                      Basic: PaymentRequiredUpfront
                    ReferenceIdentifier: da34b396-77e3-495a-bd61-aecf00a3f19d
                    WebsiteUrl: https://www.mewssystems.com
                    ExternalIdentifier: company0001
                  - Id: da34b396-41f7-47f6-8847-aecf00a3f19e
                    ChainId: 5fcd1933-22f2-40b9-84da-7db04cbecec2
                    Name: Sample Company 2
                    IsActive: true
                    Number: 12
                    Identifier: 
                    TaxIdentifier: 
                    AdditionalTaxIdentifier: 
                    ElectronicInvoiceIdentifier: 
                    InvoiceDueInterval: P2DT23H
                    AccountingCode: 
                    MotherCompanyId: 
                    CreatedUtc: '2022-07-11T09:56:54Z'
                    UpdatedUtc: '2022-07-11T09:56:54Z'
                    AddressId: 
                    BillingCode: 
                    Iata: PAO
                    Telephone: 111-222-333
                    InvoicingEmail: sample2@mews.com
                    ContacPerson: Sample Person 2
                    Contact: Contact Info 2
                    Notes: Note 2
                    Options:
                      Invoiceable: true
                      AddFeesToInvoices: false
                    Department: Accounting
                    DunsNumber: '987654321'
                    CreditRating:
                      Basic: CreditOk
                    ReferenceIdentifier: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                    WebsiteUrl: https://www.mews.com
                    ExternalIdentifier: company0002
                Cursor: da34b396-41f7-47f6-8847-aecf00a3f19e
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/companies/update:
    post:
      tags:
        - Companies
      summary: Update company
      description: 'Updates information of the company. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: companies_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              CompanyId: 7a1e4d67-d6a2-4a4c-a464-ab1100bea786
              Name:
                Value: Sample company name
              Options:
                Invoiceable:
                  Value: true
                AddFeesToInvoices:
                  Value: false
              MotherCompanyId:
                Value: ff649bce-0c4b-4395-9cdd-02039acb7cb3
              Identifier: 
              TaxIdentifier: 
              AdditionalTaxIdentifier: 
              BillingCode: 
              AccountingCode: 
              InvoiceDueInterval:
                Value: P2DT23H
              ContactPerson:
                Value: John Snow
              Contact:
                Value: John Snow
              Notes:
                Value: Notes
              Iata:
                Value: PAO
              Department:
                Value: Marketing
              DunsNumber:
                Value: '123456789'
              CreditRating:
                Basic:
                  Value: PaymentRequiredUpfront
              ExternalIdentifier:
                Value: '4321'
              ReferenceIdentifier:
                Value: ff64395-9cdd-4395-9cdd-02039acb7cb3
              WebsiteUrl:
                Value: https://www.mews.com
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResult'
              example:
                Companies:
                  - Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                    ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                    Name: Sample Company 1
                    IsActive: true
                    Number: 11
                    Identifier: 
                    TaxIdentifier: 
                    AdditionalTaxIdentifier: 
                    ElectronicInvoiceIdentifier: 
                    InvoiceDueInterval: P2DT23H
                    AccountingCode: 
                    MotherCompanyId: 
                    CreatedUtc: '2022-07-11T09:56:54Z'
                    UpdatedUtc: '2022-07-11T09:56:54Z'
                    AddressId: bab7441c-4b82-43bc-8001-ab0400a346ec
                    BillingCode: 
                    Iata: PAO
                    Telephone: 111-222-333
                    InvoicingEmail: sample1@mews.com
                    ContacPerson: Sample Person 1
                    Contact: Contact Info 1
                    Notes: Note 1
                    Options:
                      Invoiceable: true
                      AddFeesToInvoices: true
                    Department: Sales
                    DunsNumber: '123456789'
                    CreditRating:
                      Basic: PaymentRequiredUpfront
                    ReferenceIdentifier: da34b396-77e3-495a-bd61-aecf00a3f19d
                    WebsiteUrl: https://www.mewssystems.com
                    ExternalIdentifier: company0001
                  - Id: da34b396-41f7-47f6-8847-aecf00a3f19e
                    ChainId: 5fcd1933-22f2-40b9-84da-7db04cbecec2
                    Name: Sample Company 2
                    IsActive: true
                    Number: 12
                    Identifier: 
                    TaxIdentifier: 
                    AdditionalTaxIdentifier: 
                    ElectronicInvoiceIdentifier: 
                    InvoiceDueInterval: P2DT23H
                    AccountingCode: 
                    MotherCompanyId: 
                    CreatedUtc: '2022-07-11T09:56:54Z'
                    UpdatedUtc: '2022-07-11T09:56:54Z'
                    AddressId: 
                    BillingCode: 
                    Iata: PAO
                    Telephone: 111-222-333
                    InvoicingEmail: sample2@mews.com
                    ContacPerson: Sample Person 2
                    Contact: Contact Info 2
                    Notes: Note 2
                    Options:
                      Invoiceable: true
                      AddFeesToInvoices: false
                    Department: Accounting
                    DunsNumber: '987654321'
                    CreditRating:
                      Basic: CreditOk
                    ReferenceIdentifier: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                    WebsiteUrl: https://www.mews.com
                    ExternalIdentifier: company0002
                Cursor: da34b396-41f7-47f6-8847-aecf00a3f19e
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/companies/getAll:
    post:
      tags:
        - Companies
      summary: Get all companies
      description: "Returns all company profiles of the enterprise, possibly filtered by identifiers, names or other filters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: companies_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ChainIds:
                - 1df21f06-0cfc-4960-9c58-a3bf1261663e
                - 5fcd1933-22f2-40b9-84da-7db04cbecec2
              Ids:
                - 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
                - 8a98965a-7c03-48a1-a28c-ab1b009b53c8
              Names:
                - AC Company
              CreatedUtc:
                StartUtc: '2019-12-05T00:00:00Z'
                EndUtc: '2019-12-10T00:00:00Z'
              UpdatedUtc:
                StartUtc: '2019-12-10T00:00:00Z'
                EndUtc: '2019-12-17T00:00:00Z'
              ExternalIdentifiers:
                - '12345'
                - '4312343'
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResult'
              example:
                Companies:
                  - Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                    ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
                    Name: Sample Company 1
                    IsActive: true
                    Number: 11
                    Identifier: 
                    TaxIdentifier: 
                    AdditionalTaxIdentifier: 
                    ElectronicInvoiceIdentifier: 
                    InvoiceDueInterval: P2DT23H
                    AccountingCode: 
                    MotherCompanyId: 
                    CreatedUtc: '2022-07-11T09:56:54Z'
                    UpdatedUtc: '2022-07-11T09:56:54Z'
                    AddressId: bab7441c-4b82-43bc-8001-ab0400a346ec
                    BillingCode: 
                    Iata: PAO
                    Telephone: 111-222-333
                    InvoicingEmail: sample1@mews.com
                    ContacPerson: Sample Person 1
                    Contact: Contact Info 1
                    Notes: Note 1
                    Options:
                      Invoiceable: true
                      AddFeesToInvoices: true
                    Department: Sales
                    DunsNumber: '123456789'
                    CreditRating:
                      Basic: PaymentRequiredUpfront
                    ReferenceIdentifier: da34b396-77e3-495a-bd61-aecf00a3f19d
                    WebsiteUrl: https://www.mewssystems.com
                    ExternalIdentifier: company0001
                  - Id: da34b396-41f7-47f6-8847-aecf00a3f19e
                    ChainId: 5fcd1933-22f2-40b9-84da-7db04cbecec2
                    Name: Sample Company 2
                    IsActive: true
                    Number: 12
                    Identifier: 
                    TaxIdentifier: 
                    AdditionalTaxIdentifier: 
                    ElectronicInvoiceIdentifier: 
                    InvoiceDueInterval: P2DT23H
                    AccountingCode: 
                    MotherCompanyId: 
                    CreatedUtc: '2022-07-11T09:56:54Z'
                    UpdatedUtc: '2022-07-11T09:56:54Z'
                    AddressId: 
                    BillingCode: 
                    Iata: PAO
                    Telephone: 111-222-333
                    InvoicingEmail: sample2@mews.com
                    ContacPerson: Sample Person 2
                    Contact: Contact Info 2
                    Notes: Note 2
                    Options:
                      Invoiceable: true
                      AddFeesToInvoices: false
                    Department: Accounting
                    DunsNumber: '987654321'
                    CreditRating:
                      Basic: CreditOk
                    ReferenceIdentifier: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                    WebsiteUrl: https://www.mews.com
                    ExternalIdentifier: company0002
                Cursor: da34b396-41f7-47f6-8847-aecf00a3f19e
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/companies/delete:
    post:
      tags:
        - Companies
      summary: Delete companies
      description: Deletes specified companies.
      operationId: companies_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCompanyDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              CompanyIds:
                - eb02cbff-353d-48ec-97da-7def2305a5c5
                - 63551515-1740-49b3-914e-309a8b1429f0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/companionships/getAll:
    post:
      tags:
        - Companionships
      summary: Get all companionships
      description: "Returns all companionships based on customers, reservations or reservation groups. One of them must be specified in the request.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: companionships_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanionshipFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              CompanionshipIds:
                - 72d4b117-1f84-44a3-1f84-8b2c0635ac60
              CustomerIds:
                - 35d4b117-4e60-44a3-9580-c582117eff98
              ReservationIds:
                - bfee2c44-1f84-4326-a862-5289598f6e2d
              ReservationGroupIds:
                - c704dff3-7811-4af7-a3a0-7b2b0635ac59
              UpdatedUtc:
                StartUtc: '2020-02-05T00:00:00Z'
                EndUtc: '2020-02-10T00:00:00Z'
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanionshipResult'
              example:
                Companionships:
                  - Id: 72d4b117-1f84-44a3-1f84-8b2c0635ac60
                    CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
                    ReservationGroupId: c704dff3-7811-4af7-a3a0-7b2b0635ac59
                    ReservationId: bfee2c44-1f84-4326-a862-5289598f6e2d
                Customers: 
                Reservations: 
                ReservationGroups: 
                Cursor: 72d4b117-1f84-44a3-1f84-8b2c0635ac60
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/companyContracts/getAll:
    post:
      tags:
        - Company contracts
      summary: Get all company contracts
      description: "Returns all contracts between the enterprise and other companies.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: companyContracts_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyContractFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","CompanyContractIds":["3396f6f3-6733-443b-92e0-b2a0009a05a7"],"CompanyIds":["bfd5667b-533f-424f-860d-af150065f4d6"],"ServiceIds":["c8f88563-dc60-47f3-aca3-af150065d951"],"UpdatedUtc":{"StartUtc":"2023-10-01T00:00:00Z","EndUtc":"2023-10-31T00:00:00Z"},"ActivityStates":["Active","Deleted"],"EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":10}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResult'
              example:
                TravelAgencyContracts:
                  - Id: 0078f370-3787-43dc-a615-af150066bb88
                    ServiceId: c8f88563-dc60-47f3-aca3-af150065d951
                    CompanyId: bfd5667b-533f-424f-860d-af150065f4d6
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    IsActive: true
                    CommissionIncluded: true
                    Commission: 0.1
                    ChannelManagerAbsoluteAdjustment: 10
                    ChannelManagerRelativeAdjustment: 0.15
                    Options:
                      IncludeCancellationFeeInCommissionEstimate: true
                      SkipAutomaticSettlement: true
                    AccountingCode: P2DT23H
                    InvoiceDueInterval: P0M15DT0H0M0S
                    ChannelManagerBusinessSegmentId: 1289d3c8-3c83-4169-b756-af150066bb87
                    ContactPerson: Sample person
                    ContactEmail: sample-person@email.com
                    AdditionalContactInfo: 
                    Notes: 
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/companyContracts/add:
    post:
      tags:
        - Company contracts
      summary: Add company contracts
      description: Adds one or more company contracts.
      operationId: companyContracts_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCompanyContractAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              TravelAgencyContracts:
                - ServiceId: c8f88563-dc60-47f3-aca3-af150065d951
                  CompanyId: 896e9313-477d-4306-9d37-af150065f4d6
                  CommissionIncluded: true
                  Commission: 0.1
                  ChannelManagerAbsoluteAdjustment: 10
                  ChannelManagerRelativeAdjustment: 0.15
                  Options:
                    IncludeCancellationFeeInCommissionEstimate: false
                    SkipAutomaticSettlement: false
                  AccountingCode: P2DT23H
                  InvoiceDueInterval: P0M15DT0H0M0S
                  ChannelManagerBusinessSegmentId: 1289d3c8-3c83-4169-b756-af150066bb87
                  ContactPerson: Sample person
                  ContactEmail: sample-person@email.com
                  AdditionalContactInfo: 
                  Notes: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResult'
              example:
                TravelAgencyContracts:
                  - Id: 0078f370-3787-43dc-a615-af150066bb88
                    ServiceId: c8f88563-dc60-47f3-aca3-af150065d951
                    CompanyId: bfd5667b-533f-424f-860d-af150065f4d6
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    IsActive: true
                    CommissionIncluded: true
                    Commission: 0.1
                    ChannelManagerAbsoluteAdjustment: 10
                    ChannelManagerRelativeAdjustment: 0.15
                    Options:
                      IncludeCancellationFeeInCommissionEstimate: true
                      SkipAutomaticSettlement: true
                    AccountingCode: P2DT23H
                    InvoiceDueInterval: P0M15DT0H0M0S
                    ChannelManagerBusinessSegmentId: 1289d3c8-3c83-4169-b756-af150066bb87
                    ContactPerson: Sample person
                    ContactEmail: sample-person@email.com
                    AdditionalContactInfo: 
                    Notes: 
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/companyContracts/update:
    post:
      tags:
        - Company contracts
      summary: Update company contracts
      description: Updates one or more company contracts.
      operationId: companyContracts_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCompanyContractUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              TravelAgencyContractUpdates:
                - TravelAgencyContractId: 652d4a22-ac33-42b7-abe7-af1f00820023
                  CommissionIncluded:
                    Value: true
                  Commission:
                    Value: 0.1
                  ChannelManagerAbsoluteAdjustment:
                    Value: 10
                  ChannelManagerRelativeAdjustment:
                    Value: 0.15
                  Options:
                    IncludeCancellationFeeInCommissionEstimate:
                      Value: true
                    SkipAutomaticSettlement:
                      Value: true
                  AccountingCode:
                    Value: P2DT23H
                  InvoiceDueInterval:
                    Value: P0M15DT0H0M0S
                  ChannelManagerBusinessSegmentId:
                    Value: 1289D3C8-3C83-4169-B756-AF150066BB87
                  ContactPerson:
                    Value: Sample person
                  ContactEmail:
                    Value: sample-person@email.com
                  AdditionalContactInfo: 
                  Notes: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResult'
              example:
                TravelAgencyContracts:
                  - Id: 0078f370-3787-43dc-a615-af150066bb88
                    ServiceId: c8f88563-dc60-47f3-aca3-af150065d951
                    CompanyId: bfd5667b-533f-424f-860d-af150065f4d6
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    IsActive: true
                    CommissionIncluded: true
                    Commission: 0.1
                    ChannelManagerAbsoluteAdjustment: 10
                    ChannelManagerRelativeAdjustment: 0.15
                    Options:
                      IncludeCancellationFeeInCommissionEstimate: true
                      SkipAutomaticSettlement: true
                    AccountingCode: P2DT23H
                    InvoiceDueInterval: P0M15DT0H0M0S
                    ChannelManagerBusinessSegmentId: 1289d3c8-3c83-4169-b756-af150066bb87
                    ContactPerson: Sample person
                    ContactEmail: sample-person@email.com
                    AdditionalContactInfo: 
                    Notes: 
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/companyContracts/delete:
    post:
      tags:
        - Company contracts
      summary: Delete company contracts
      description: Deletes one or more company contracts.
      operationId: companyContracts_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCompanyContractDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              TravelAgencyContractIds:
                - 0078f370-3787-43dc-a615-af150066bb88
                - 652d4a22-ac33-42b7-abe7-af1f00820023
              ServiceIds:
                - a1d6dee8-355b-44c3-b6be-faef1a7eb6c0
                - d5a2aac3-5194-479b-ba05-6c073398e0fd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/configuration/get:
    post:
      tags:
        - Configuration
      summary: Get configuration
      description: 'Returns the enterprise configuration. For single-enterprise Access Tokens, this is the enterprise associated with the token. For [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), use the `EnterpriseId` parameter to specify which enterprise you want the configuration for. In the case of service scoped integrations, the operation returns the configuration associated with both the enterprise and the bookable service linked to the token.'
      operationId: configuration_get
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 851df8c8-90f2-4c4a-8e01-a4fc46b25178
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
              example: {"NowUtc":"2018-01-01T14:58:02Z","Enterprise":{"Currencies":[{"Currency":"GBP","IsDefault":true,"IsEnabled":true},{"Currency":"USD","IsDefault":false,"IsEnabled":true}],"AccountingConfiguration":{"AdditionalTaxIdentifier":null,"CompanyName":"Connector API Hotel","BankAccountNumber":"1234","BankName":"Random bank","Iban":"CZ7250517882393618329719","Bic":"GIBACZPY","SurchargeConfiguration":{"SurchargeFees":{"Amex":3.0,"DinersClub":4.0},"SurchargeServiceId":"2b9b0143-3135-485b-8064-76c90d1be69e","SurchargeTaxCode":"US-HI-KA"},"EnabledExternalPaymentTypes":["Invoice","Cash","GiftCard"]},"IsPortfolio":false,"Id":"851df8c8-90f2-4c4a-8e01-a4fc46b25178","ExternalIdentifier":null,"HoldingKey":"CA123","ChainId":"8ddea57b-6a5c-4eec-8c4c-24467dce118e","ChainName":"Connector API Chain","CreatedUtc":"2015-07-07T13:33:17Z","UpdatedUtc":"2015-07-07T13:33:17Z","Name":"Connector API Hotel","TimeZoneIdentifier":"Europe/Budapest","LegalEnvironmentCode":"UK","AccommodationEnvironmentCode":null,"AccountingEnvironmentCode":null,"TaxEnvironmentCode":null,"DefaultLanguageCode":"en-US","EditableHistoryInterval":"P0M7DT0H0M0S","AccountingEditableHistoryInterval":"P0M7DT0H0M0S","OperationalEditableHistoryInterval":"P0M5DT0H0M0S","WebsiteUrl":"https://en.wikipedia.org/wiki/St._Vitus_Cathedral","Email":"charging-api@mews.li","Phone":"00000 123 456 789","LogoImageId":null,"CoverImageId":null,"Pricing":"Gross","TaxPrecision":null,"AddressId":"c556f56e-713e-4102-9de5-0e853b5a8586","Address":{"Id":"8c2c4371-5d42-40a9-b551-ab0b00d75076","Line1":"I.P. Pavlova 5","Line2":null,"City":"Prague","PostalCode":"1200","CountryCode":"CZ","CountrySubdivisionCode":null,"Latitude":14.429645,"Longitude":50.075181},"GroupNames":["Connector API Group"],"Subscription":{"TaxIdentifier":"123456789 RC 0001"}},"Service":{"Id":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","IsActive":true,"Name":"Accommodation","Names":{"en-GB":"Accommodation"},"StartTime":"PT14H","EndTime":"PT12H","Options":{"BillAsPackage":false},"Promotions":{"BeforeCheckIn":false,"AfterCheckIn":false,"DuringStay":false,"BeforeCheckOut":false,"AfterCheckOut":false,"DuringCheckOut":false},"Type":"Reservable","Ordering":0,"Data":null,"ExternalIdentifier":null,"CreatedUtc":"2023-10-01T11:48:57Z","UpdatedUtc":"2023-10-28T11:48:57Z"},"PaymentCardStorage":null,"IsIdentityDocumentNumberRequired":true}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/counters/getAll:
    post:
      tags:
        - Counters
      summary: Get all counters
      description: "Returns all counters of an enterprise associated with the connector integration.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: counters_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              UpdatedUtc:
                StartUtc: '2023-10-01T00:00:00Z'
                EndUtc: '2023-10-31T00:00:00Z'
              Type: Counter
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterResult'
              example:
                Counters:
                  - Id: b7e4b68a-026e-41f3-ad2f-35325aa5dcbf
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    Name: Normal
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    IsDefault: false
                    Value: 67
                    Format: 'NORMAL{0:0000}'
                    Type: BillCounter
                  - Id: 403842df-635f-4b6e-8de5-42129201235e
                    EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                    Name: Events
                    IsDefault: true
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    Value: 1575
                    Format: 'E2018{0:0000}'
                    Type: BillCounter
                  - Id: 3362d7d5-a52f-4077-b2b4-4ec2476e6e19
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    Name: Default
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    IsDefault: true
                    Value: 171
                    Format: ''
                    Type: ProformaCounter
                  - Id: 1162d7d5-a52f-4077-b2b4-4ec2476e6e19
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    Name: Default
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    IsDefault: true
                    Value: 911
                    Format: ''
                    Type: BillPreviewCounter
                  - Id: a9fd7868-1ed0-4e96-8dd9-580708c200ea
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    Name: Default
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    IsDefault: true
                    Value: 25797
                    Format: 
                    Type: ServiceOrderCounter
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/countries/getAll:
    post:
      tags:
        - Countries
      summary: Get all countries
      description: Returns all countries supported by the API.
      operationId: countries_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResult'
              example:
                Countries:
                  - Code: GB
                    EnglishName: United Kingdom of Great Britain and Northern Ireland
                  - Code: US
                    EnglishName: United States of America
                CountrySubdivisions:
                  - Code: AU-NSW
                    CountryCode: AU
                    EnglishName: New South Wales
                  - Code: AU-QLD
                    CountryCode: AU
                    EnglishName: Queensland
                CountryAlliances:
                  - Code: SCHENGEN
                    EnglishName: Schengen Area
                    CountryCodes:
                      - AT
                      - BE
                      - CZ
                      - ...
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/creditCards/getAll:
    post:
      tags:
        - Credit cards
      summary: Get all credit cards
      description: "Returns all credit cards, possibly filtered by identifiers, [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or other filters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: creditCards_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              CreditCardIds:
                - f1d94a32-b4be-479b-9e47-a9fcb03d5196
              CustomerIds:
                - 5cbbd97d-5f19-4010-9abf-ab0400a3366a
              UpdatedUtc:
                StartUtc: '2023-10-01T00:00:00Z'
                EndUtc: '2023-10-31T00:00:00Z'
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResult'
              example:
                CreditCards:
                  - Id: f1d94a32-b4be-479b-9e47-a9fcb03d5196
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    CustomerId: a3c90426-43f2-4b53-8482-446dfc724bd2
                    Expiration: '2020-11'
                    Format: Physical
                    IsActive: true
                    Kind: Gateway
                    ObfuscatedNumber: '************1111'
                    State: Enabled
                    Type: Visa
                Cursor: f1d94a32-b4be-479b-9e47-a9fcb03d5196
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/creditCards/getAllByIds:
    post:
      tags:
        - Credit cards
      description: 'Use [Get all credit cards](https://mews-systems.gitbook.io/connector-api/operations/creditcards#get-all-credit-cards) instead.'
      operationId: creditCards_getAllByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCreditCardParameters'
            example:
              Client: string
              LanguageCode: string
              CultureCode: string
              AccessToken: string
              ClientToken: string
              CreditCardIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResult'
              example:
                CreditCards:
                  - Id: f1d94a32-b4be-479b-9e47-a9fcb03d5196
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    CustomerId: a3c90426-43f2-4b53-8482-446dfc724bd2
                    Expiration: '2020-11'
                    Format: Physical
                    IsActive: true
                    Kind: Gateway
                    ObfuscatedNumber: '************1111'
                    State: Enabled
                    Type: Visa
                Cursor: f1d94a32-b4be-479b-9e47-a9fcb03d5196
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      deprecated: true
      x-deprecatedMessage: 'Use [Get all credit cards](https://mews-systems.gitbook.io/connector-api/operations/creditcards#get-all-credit-cards) instead.'
  /api/connector/v1/creditCards/getAllByCustomers:
    post:
      tags:
        - Credit cards
      description: 'Use [Get all credit cards](https://mews-systems.gitbook.io/connector-api/operations/creditcards#get-all-credit-cards) instead.'
      operationId: creditCards_getAllByCustomers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCustomerParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              CustomerIds:
                - e98995b0-140a-4208-bbeb-b77f2c43d6ee
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResult'
              example:
                CreditCards:
                  - Id: f1d94a32-b4be-479b-9e47-a9fcb03d5196
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    CustomerId: a3c90426-43f2-4b53-8482-446dfc724bd2
                    Expiration: '2020-11'
                    Format: Physical
                    IsActive: true
                    Kind: Gateway
                    ObfuscatedNumber: '************1111'
                    State: Enabled
                    Type: Visa
                Cursor: f1d94a32-b4be-479b-9e47-a9fcb03d5196
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      deprecated: true
      x-deprecatedMessage: 'Use [Get all credit cards](https://mews-systems.gitbook.io/connector-api/operations/creditcards#get-all-credit-cards) instead.'
  /api/connector/v1/creditCards/addTokenized:
    post:
      tags:
        - Credit cards
      summary: Add tokenized credit card
      description: Adds a new tokenized credit card to the specified customer. To be able to use this operation special permission has to be granted during certification.
      operationId: creditCards_addTokenized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizedCreditCardParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              CustomerId: e98995b0-140a-4208-bbeb-b77f2c43d6ee
              CreditCardData:
                StorageData: '190510170631533875'
                Expiration: '2025-10'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCreditCardResult'
              example:
                CreditCardId: ee2209ce-71c6-4e3a-978f-aac700c82c7b
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/creditCards/charge:
    post:
      tags:
        - Credit cards
      summary: Charge credit card
      description: Creates payment for specified customer credit card and charges the credit card via a gateway. Note that the kind of the card has to be `Gateway`.
      operationId: creditCards_charge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeCreditCardParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              CreditCardId: 866d3f51-5b8b-4e8f-a3af-5b84768c522d
              Amount:
                GrossValue: 5
                Currency: EUR
              AccountingCategoryId: 
              Notes: 
              ReceiptIdentifier: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeCreditCardResult'
              example:
                PaymentId: 98753f51-5b8b-4e8f-a3af-5b8476865983
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/creditCards/disable:
    post:
      tags:
        - Credit cards
      summary: Disable gateway credit card
      description: 'Disable an existing credit card in the system. Only gateway credit cards can be disabled. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: creditCards_disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableCreditCardParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","CreditCardId":"f5c6b7a8-9d4f-4e2a-8a3b-2f3b8b9e6a1f","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
              example: {}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/currencies/getAll:
    post:
      tags:
        - Currencies
      summary: Get all currencies
      description: Returns all currencies supported by the API.
      operationId: currencies_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyResult'
              example:
                Currencies:
                  - Code: USD
                    Precision: 2
                  - Code: GBP
                    Precision: 2
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/customers/getAll:
    post:
      tags:
        - Customers
      summary: Get all customers
      description: "Returns all customers filtered by identifiers, emails, names and other filters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: customers_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ChainIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","5fcd1933-22f2-40b9-84da-7db04cbecec2"],"CreatedUtc":{"StartUtc":"2018-01-01T00:00:00Z","EndUtc":"2018-01-30T00:00:00Z"},"UpdatedUtc":{"StartUtc":"2018-01-02T00:00:00Z","EndUtc":"2018-01-30T00:00:00Z"},"Extent":{"Customers":true,"Documents":false,"Addresses":false},"ActivityStates":["Active"],"CustomerIds":["fadd5bb6-b428-45d5-94f8-fd0d89fece6d"],"CompanyIds":["c6f5c82d-621a-4c8a-903b-1b0a9a23b71f"],"Emails":["j.smith@example.com"],"FirstNames":["John","Jane"],"LastNames":["Doe","Smith"],"LoyaltyCodes":["LL810213"],"Limitation":{"Count":10}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResult'
              example: {"Customers":[{"Id":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","Number":"12345","Title":"Mister","Sex":"Male","FirstName":"John","LastName":"Smith","SecondLastName":"Williams","NationalityCode":"US","PreferredLanguageCode":"en-GB","LanguageCode":"en-US","BirthDate":"1983-12-31","BirthPlace":"New York City, NY","Occupation":"Carpenter","Email":"j.smith@example.com","HasOtaEmail":false,"Phone":"00420123456789","TaxIdentificationNumber":"123456789","LoyaltyCode":"LL810213","AccountingCode":"AC123","BillingCode":null,"Notes":"","CarRegistrationNumber":"1A2 3456","DietaryRequirements":null,"CreatedUtc":"2018-01-01T00:00:00Z","UpdatedUtc":"2018-01-02T00:00:00Z","Passport":null,"IdentityCard":null,"Visa":null,"DriversLicense":null,"Address":{"Id":"f8495413-bf49-45dd-843c-44be7f365569","Line1":"Somerford Road Hello House/135","Line2":null,"City":"Christchurch","PostalCode":"BH23 3PY","CountryCode":"GB","CountrySubdivisionCode":"GB-ENG","Latitude":null,"Longitude":null},"AddressId":"f8495413-bf49-45dd-843c-44be7f365569","Classifications":["Returning"],"Options":["SendMarketingEmails"],"ItalianDestinationCode":null,"ItalianFiscalCode":null,"CompanyId":"c6f5c82d-621a-4c8a-903b-1b0a9a23b71f","MergeTargetId":null,"ActivityState":"Active","IsActive":true,"PreferredSpaceFeatures":["OceanView"],"CreatorProfileId":"3cd637ef-4728-47f9-8fb1-afb900c9cdcf","UpdaterProfileId":"122fc063-ec6e-4198-b8db-6b168a59ffae"}],"Documents":null,"Cursor":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/customers/search:
    post:
      tags:
        - Customers
      summary: Search customers
      description: Searches for customers that are active at the moment in the enterprise (e.g. companions of checked-in reservations or paymasters).
      operationId: customers_search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSearchParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              Name: Smith
              ResourceId: 
              Extent:
                Customers: true
                Documents: false
                Addresses: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSearchResult'
              example: {"Customers":[{"Customer":{"Id":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","Number":"12345","Title":"Mister","Sex":"Male","FirstName":"John","LastName":"Smith","SecondLastName":"Williams","NationalityCode":"US","PreferredLanguageCode":"en-GB","LanguageCode":"en-US","BirthDate":"1983-12-31","BirthPlace":"New York City, NY","Occupation":"Carpenter","Email":"j.smith@example.com","HasOtaEmail":false,"Phone":"00420123456789","TaxIdentificationNumber":"123456789","LoyaltyCode":"LL810213","AccountingCode":"AC123","BillingCode":null,"Notes":"","CarRegistrationNumber":"1A2 3456","DietaryRequirements":null,"CreatedUtc":"2018-01-01T00:00:00Z","UpdatedUtc":"2018-01-02T00:00:00Z","Passport":null,"IdentityCard":null,"Visa":null,"DriversLicense":null,"Address":{"Id":"f8495413-bf49-45dd-843c-44be7f365569","Line1":"Somerford Road Hello House/135","Line2":null,"City":"Christchurch","PostalCode":"BH23 3PY","CountryCode":"GB","CountrySubdivisionCode":"GB-ENG","Latitude":null,"Longitude":null},"AddressId":"f8495413-bf49-45dd-843c-44be7f365569","Classifications":["Returning"],"Options":["SendMarketingEmails"],"ItalianDestinationCode":null,"ItalianFiscalCode":null,"CompanyId":"c6f5c82d-621a-4c8a-903b-1b0a9a23b71f","MergeTargetId":null,"ActivityState":"Active","IsActive":true,"PreferredSpaceFeatures":["OceanView"],"CreatorProfileId":"3cd637ef-4728-47f9-8fb1-afb900c9cdcf","UpdaterProfileId":"122fc063-ec6e-4198-b8db-6b168a59ffae"},"Reservation":null}],"Documents":null}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/customers/getOpenItems:
    post:
      tags:
        - Customers
      summary: Get customers open items
      description: 'Use [Get all payments](https://mews-systems.gitbook.io/connector-api/operations/payments#get-all-payments) and [Get all order items](https://mews-systems.gitbook.io/connector-api/operations/orderitems#get-all-order-items) instead.'
      operationId: customers_getOpenItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerItemParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              CustomerIds:
                - 2a1a4315-7e6f-4131-af21-402cec59b8b9
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerItemResult'
              example:
                Customers:
                  - CustomerId: 2a1a4315-7e6f-4131-af21-402cec59b8b9
                    OrderItems:
                      - Id: 35820535-b988-4d6f-80cf-ecb19cdc3e58
                        AccountId: 2a1a4315-7e6f-4131-af21-402cec59b8b9
                        OrderId: 6645113e-72cc-4f99-ab77-e4452911bf20
                        BillId: 
                        AccountingCategoryId: d250149e-a29d-4c70-b607-a1759faf7320
                        Amount:
                          Currency: GBP
                          NetValue: -5
                          GrossValue: -5
                          TaxValues:
                            - Code: UK-Z
                              Value: 0
                          Breakdown:
                            Items:
                              - TaxRateCode: UK-Z
                                NetValue: -5
                                TaxValue: 0
                        RevenueType: Additional
                        ConsumedUtc: '2017-04-04T15:13:39Z'
                        ClosedUtc: 
                        AccountingState: Open
                        Data:
                          Discriminator: Rebate
                          Value:
                            RebatedItemId: 
                    PaymentItems: [ ]
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      deprecated: true
      x-deprecatedMessage: 'Use [Get all payments](https://mews-systems.gitbook.io/connector-api/operations/payments#get-all-payments) and [Get all order items](https://mews-systems.gitbook.io/connector-api/operations/orderitems#get-all-order-items) instead.'
  /api/connector/v1/customers/add:
    post:
      tags:
        - Customers
      summary: Add customer
      description: 'Adds a new customer to the system and returns details of the added customer. If a customer with the specified email already exists, and `OverwriteExisting` is set to `true`, then the existing customer profile information is overwritten and the existing customer data returned. If `OverwriteExisting` is set to `false`, an error response is returned. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: customers_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","OverwriteExisting":false,"ItalianDestinationCode":"7654321","ItalianFiscalCode":"ZGNZLR17U72P554F","Title":"Miss","FirstName":"Thea","LastName":"Carbone","BirthDate":"1985-09-30","BirthPlace":"Pescara (BI)","Occupation":"Giornalista","Email":"thea@quotidiano.example","Phone":"+39 06 555 5555","Notes":"Check-in notturno.","CarRegistrationNumber":"AA 111AA","TaxIdentificationNumber":"ZGNZLR17U72P554F","Address":{"Line1":"Via Antimo 474 Piano 5","City":"Liborio laziale","PostalCode":"30228","CountryCode":"IT","CountrySubdivisionCode":"IT-65"},"Classifications":["Media","FriendOrFamily"],"Options":["SendMarketingEmails"]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
              example: {"Id":"99b4f0af-9558-463b-8452-07a9bc414708","ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","Number":"390881","Title":"Miss","Sex":null,"FirstName":"Thea","LastName":"Carbone","SecondLastName":null,"NationalityCode":null,"PreferredLanguageCode":null,"LanguageCode":null,"BirthDate":"1985-09-30","BirthPlace":"Pescara (BI)","Occupation":"Giornalista","Email":"thea@quotidiano.example","HasOtaEmail":false,"Phone":"+39 06 555 5555","TaxIdentificationNumber":"ZGNZLR17U72P554F","LoyaltyCode":null,"AccountingCode":null,"BillingCode":null,"Notes":"Check-in notturno.","CarRegistrationNumber":"AA 111AA","DietaryRequirements":null,"CreatedUtc":"2024-09-17T12:22:33Z","UpdatedUtc":"2024-10-12T09:45:00Z","Passport":null,"IdentityCard":null,"Visa":null,"DriversLicense":null,"Address":{"Id":"81f62f08-26d5-408f-9b0d-d030957dc799","Line1":"Via Antimo 474 Piano 5","Line2":null,"City":"Liborio laziale","PostalCode":"30228","CountryCode":"IT","CountrySubdivisionCode":"IT-65","Latitude":28.56333,"Longitude":-121.243143},"AddressId":"81f62f08-26d5-408f-9b0d-d030957dc799","Classifications":["Media","FriendOrFamily"],"Options":[],"ItalianDestinationCode":"7654321","ItalianFiscalCode":"ZGNZLR17U72P554F","CompanyId":"f3b4f0af-9558-463b-8452-07a9bc414708","MergeTargetId":null,"ActivityState":null,"IsActive":true,"PreferredSpaceFeatures":["LowerBed"],"CreatorProfileId":"3cd637ef-4728-47f9-8fb1-afb900c9cdcf","UpdaterProfileId":"122fc063-ec6e-4198-b8db-6b168a59ffae"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/customers/update:
    post:
      tags:
        - Customers
      summary: Update customer
      description: 'Updates personal information of a customer. Note that if any of the fields is left blank, it won''t clear the field in Mews. The field will be left intact. In case of email update, the email will change in Mews only if there is no other customer profile in the hotel with such email. Otherwise an error response is returned. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: customers_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdateParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","CustomerId":"99b4f0af-9558-463b-8452-07a9bc414708","Title":"Miss","FirstName":"Thea","LastName":"Carbone","BirthDate":"1985-09-30","BirthPlace":"Pescara (BI)","Occupation":"Giornalista","Email":"thea@quotidiano.example","Phone":"+39 06 555 5555","Notes":"Check-in notturno.","CarRegistrationNumber":"AA 111AA","TaxIdentificationNumber":"ZGNZLR17U72P554F","CompanyId":"f3b4f0af-9558-463b-8452-07a9bc414708","Address":{"Line1":"Via Antimo 474 Piano 5","City":"Liborio laziale","PostalCode":"30228","CountryCode":"IT","CountrySubdivisionCode":"IT-65"},"Classifications":["Media","FriendOrFamily"],"Options":["SendMarketingEmails"],"ItalianDestinationCode":{"Value":"7654321"},"ItalianFiscalCode":{"Value":"ZGNZLR17U72P554F"}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
              example: {"Id":"99b4f0af-9558-463b-8452-07a9bc414708","ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","Number":"390881","Title":"Miss","Sex":null,"FirstName":"Thea","LastName":"Carbone","SecondLastName":null,"NationalityCode":null,"PreferredLanguageCode":null,"LanguageCode":null,"BirthDate":"1985-09-30","BirthPlace":"Pescara (BI)","Occupation":"Giornalista","Email":"thea@quotidiano.example","HasOtaEmail":false,"Phone":"+39 06 555 5555","TaxIdentificationNumber":"ZGNZLR17U72P554F","LoyaltyCode":null,"AccountingCode":null,"BillingCode":null,"Notes":"Check-in notturno.","CarRegistrationNumber":"AA 111AA","DietaryRequirements":null,"CreatedUtc":"2024-09-17T12:22:33Z","UpdatedUtc":"2024-10-12T09:45:00Z","Passport":null,"IdentityCard":null,"Visa":null,"DriversLicense":null,"Address":{"Id":"81f62f08-26d5-408f-9b0d-d030957dc799","Line1":"Via Antimo 474 Piano 5","Line2":null,"City":"Liborio laziale","PostalCode":"30228","CountryCode":"IT","CountrySubdivisionCode":"IT-65","Latitude":28.56333,"Longitude":-121.243143},"AddressId":"81f62f08-26d5-408f-9b0d-d030957dc799","Classifications":["Media","FriendOrFamily"],"Options":[],"ItalianDestinationCode":"7654321","ItalianFiscalCode":"ZGNZLR17U72P554F","CompanyId":"f3b4f0af-9558-463b-8452-07a9bc414708","MergeTargetId":null,"ActivityState":null,"IsActive":true,"PreferredSpaceFeatures":["LowerBed"],"CreatorProfileId":"3cd637ef-4728-47f9-8fb1-afb900c9cdcf","UpdaterProfileId":"122fc063-ec6e-4198-b8db-6b168a59ffae"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/customers/merge:
    post:
      tags:
        - Customers
      summary: Merge customers
      description: 'Use [Merge accounts](https://mews-systems.gitbook.io/connector-api/operations/accounts#merge-accounts) instead.'
      operationId: customers_merge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerMergeParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              SourceCustomerId: e11801ff-4148-4010-87f3-0d111e2893e3
              TargetCustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      deprecated: true
      x-deprecatedMessage: 'Use [Merge accounts](https://mews-systems.gitbook.io/connector-api/operations/accounts#merge-accounts) instead.'
  /api/connector/v1/customers/addFile:
    post:
      tags:
        - Customers
      summary: Add customer file
      description: "Attaches the specified file to the customer profile. \r\n\r\nAllowed MIME types: `application/pdf`, `image/bmp`, `image/gif`, `image/jpeg`, `image/png`, `image/tiff`.\r\n\r\nNote this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property)."
      operationId: customers_addFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerFileParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","CustomerId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","Name":"document.pdf","Type":"application/pdf","Data":"JVBERi0xLjAKMSAwIG9iajw8L1BhZ2VzIDIgMCBSPj5lbmRvYmogMiAwIG9iajw8L0tpZHNbMyAwIFJdL0NvdW50IDE+PmVuZG9iaiAzIDAgb2JqPDwvTWVkaWFCb3hbMCAwIDMgM10+PmVuZG9iagp0cmFpbGVyPDwvUm9vdCAxIDAgUj4+Cg==","ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAddFileResult'
              example: {"FileId":"f039f5b4-ff18-4510-9086-92b14a68ed78"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/departments/getAll:
    post:
      tags:
        - Departments
      summary: Get all departments
      description: "Returns all departments of an enterprise associated with the connector integration.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: departments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              DepartmentIds:
                - 98776d06-60e4-495f-82f1-95ab2f644d63
                - 915fbb82-de35-48a0-9e9b-f4a7eac711bb
              UpdatedUtc:
                StartUtc: '2023-10-01T00:00:00Z'
                EndUtc: '2023-10-31T00:00:00Z'
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResult'
              example:
                Departments:
                  - Id: 98776d06-60e4-495f-82f1-95ab2f644d63
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    IsActive: true
                    Name: Sales
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                  - Id: 915fbb82-de35-48a0-9e9b-f4a7eac711bb
                    EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                    IsActive: true
                    Name: Housekeeping
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                Cursor: 915fbb82-de35-48a0-9e9b-f4a7eac711bb
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/devices/getAll:
    post:
      tags:
        - Devices
      summary: Get all devices
      description: Returns all devices in the enterprise.
      operationId: devices_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResult'
              example:
                Devices:
                  - Id: d14efcfd-75b9-4bd3-9f10-5657a01f860a
                    Name: Key cutter 1
                    Type: KeyCutter
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/enterprises/getAll:
    post:
      tags:
        - Enterprises
      summary: Get all enterprises
      description: 'Returns all enterprises within scope of the `Access Token`, optionally filtered by enterprise identifiers and external identifiers. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: enterprises_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterpriseFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"ExternalIdentifiers":["Enterprise2023"],"LinkedUtc":{"StartUtc":"2023-06-01T00:00:00Z","EndUtc":"2023-06-06T00:00:00Z"},"UpdatedUtc":{"StartUtc":"2023-10-01T00:00:00Z","EndUtc":"2023-10-31T00:00:00Z"},"Limitation":{"Count":100,"Cursor":"4d0201db-36f5-428b-8d11-4f0a65e960cc"}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseResult'
              example: {"Enterprises":[{"LinkedUtc":"2023-06-01T00:00:00Z","Id":"3fa85f64-5717-4562-b3fc-2c963f66afa6","ExternalIdentifier":"Enterprise2023","HoldingKey":"CA123","ChainId":"2f6be44e-9881-4b12-aefe-afce011a9d67","ChainName":"Connector API Chain","CreatedUtc":"2022-03-23T17:12:06Z","UpdatedUtc":"2022-03-23T17:12:06Z","Name":"Sample Portfolio Hotel","TimeZoneIdentifier":"Europe/Budapest","LegalEnvironmentCode":"DE-2020-1","AccommodationEnvironmentCode":"DE","AccountingEnvironmentCode":"DE","TaxEnvironmentCode":"DE-2020-1","DefaultLanguageCode":"en-US","EditableHistoryInterval":null,"AccountingEditableHistoryInterval":"P0M7DT0H0M0S","OperationalEditableHistoryInterval":"P0M5DT0H0M0S","WebsiteUrl":"https://www.sample-portfolio-hotel-10004.com/","Email":"email@sample-portfolio-hotel.com","Phone":"(555) 555-1234","LogoImageId":null,"CoverImageId":null,"Pricing":"Gross","TaxPrecision":2,"AddressId":"31c505e9-9858-4d2f-9eab-afce011c4f47","Address":{"Id":"8c2c4371-5d42-40a9-b551-ab0b00d75076","Line1":"I.P. Pavlova 5","Line2":null,"City":"Prague","PostalCode":"1200","CountryCode":"CZ","CountrySubdivisionCode":null,"Latitude":14.429645,"Longitude":50.075181},"GroupNames":["Sample Group Name"],"Subscription":{"TaxIdentifier":"123456789 RC 0001"}}],"Cursor":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/exchangeRates/getAll:
    post:
      tags:
        - Exchange rates
      summary: Get all exchange rates
      description: 'Returns all available exchange rates among currencies of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/configuration/#enterprise).'
      operationId: exchangeRates_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyAcceptanceFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRateResult'
              example:
                ExchangeRates:
                  - SourceCurrency: EUR
                    TargetCurrency: GBP
                    Value: 0.8505342
                  - SourceCurrency: GBP
                    TargetCurrency: EUR
                    Value: 1.1757317
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/exports/add:
    post:
      tags:
        - Exports
      summary: Add export
      description: "Create a pending export. Export all entities of the specified `EntityType` within the enterprise. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property) but doesn't have filtering by `EnterpriseIds` or `ChainIds`, so will return entities from all enterprises within the scope of the portfolio.\nIf there is already an export with status `Pending` or `Processing` for the specified entity type, the request for a new export will be rejected. Successful exports remain available for download until the expiration date specified in `ExpiresUtc`."
      operationId: exports_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EntityType: OrderItem
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportAddResult'
              example:
                Export:
                  Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  Status: Pending
                  EntityType: OrderItem
                  Files:
                    - Url: string
                      SizeInBytes: 0
                  ExpiresUtc: '2024-04-11T08:54:47.193Z'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/exports/getAll:
    post:
      tags:
        - Exports
      summary: Get all exports
      description: 'Get exports for the given `ExportIds`. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: exports_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ExportIds:
                - 3fa85f64-5717-4562-b3fd-2c963f66afa6
                - 09708665-0e31-4b23-b337-b0a000be0df0
                - 706dc6d5-9511-4751-825e-538ce99da2ce
                - f776f20a-6f1a-4ddf-93f4-9dae95261415
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResult'
              example:
                Exports:
                  - Id: 3fa85f64-5717-4562-b3fd-2c963f66afa6
                    Status: Success
                    EntityType: OrderItem
                    ExpiresUtc: '2023-10-26T11:42:28Z'
                    Files:
                      - Url: https://example.com/exports/3fa85f64-5717-4562-b3fd-2c963f66afa6-1.jsonl?example=signature
                        SizeInBytes: 1215279
                      - Url: https://example.com/exports/3fa85f64-5717-4562-b3fd-2c963f66afa6-2.jsonl?example=signature
                        SizeInBytes: 1398362
                  - Id: 09708665-0e31-4b23-b337-b0a000be0df0
                    Status: Pending
                    EntityType: OrderItem
                    Files: [ ]
                    ExpiresUtc: 
                  - Id: 706dc6d5-9511-4751-825e-538ce99da2ce
                    Status: Processing
                    EntityType: OrderItem
                    Files: [ ]
                    ExpiresUtc: 
                  - Id: f776f20a-6f1a-4ddf-93f4-9dae95261415
                    Status: Expired
                    EntityType: OrderItem
                    Files: [ ]
                    ExpiresUtc: '2023-10-24T14:12:30Z'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/identityDocuments/getAll:
    post:
      tags:
        - Identity documents
      summary: Get all identity documents
      description: 'Returns all identity documents for the specified customers, with additional filtering options available. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: identityDocuments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityDocumentFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","IdentityDocumentIds":["e8a72a69-c20b-4278-b699-ab0400a32ecc","24a3f051-49ed-411b-9384-78187f9daae6"],"CustomerIds":["fadd5bb6-b428-45d5-94f8-fd0d89fece6d","bccdafd1-3e44-439d-861f-341526b597a9"],"ChainIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","5fcd1933-22f2-40b9-84da-7db04cbecec2"]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDocumentResult'
              example: {"IdentityDocuments":[{"Id":"e8a72a69-c20b-4278-b699-ab0400a32ecc","CustomerId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","Type":"Passport","Number":"M1234567","ExpirationDate":"2040-10-24T00:00:00Z","IssuanceDate":"2024-10-24T00:00:00Z","IssuingCountryCode":"CZ","IssuingCity":"Prague","IdentityDocumentSupportNumber":"S-123456"},{"Id":"cbe8a32e-3eb7-4226-baf4-69455a0eeaf4","CustomerId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","Type":"IdentityCard","Number":"ID7654321","ExpirationDate":"2040-11-20T00:00:00Z","IssuanceDate":"2024-11-20T00:00:00Z","IssuingCountryCode":"CZ","IssuingCity":"Brno","IdentityDocumentSupportNumber":"B-321"}],"Cursor":"cbe8a32e-3eb7-4226-baf4-69455a0eeaf4"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/identityDocuments/delete:
    post:
      tags:
        - Identity documents
      summary: Delete identity documents
      description: 'Deletes specified identity documents. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: identityDocuments_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityDocumentDeleteParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","IdentityDocumentIds":["e8a72a69-c20b-4278-b699-ab0400a32ecc","2e1c6096-3a28-411d-a375-150a7350b278"],"ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/identityDocuments/clear:
    post:
      tags:
        - Identity documents
      summary: Clear identity documents
      description: 'Deletes all identity documents for the specified customers. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: identityDocuments_clear
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityDocumentClearParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","CustomerIds":["fadd5bb6-b428-45d5-94f8-fd0d89fece6d","bccdafd1-3e44-439d-861f-341526b597a9"],"ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/identityDocuments/update:
    post:
      tags:
        - Identity documents
      summary: Update identity documents
      description: 'Updates specified identity documents. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: identityDocuments_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleIdentityDocumentUpdateParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","IdentityDocuments":[{"Id":"e8a72a69-c20b-4278-b699-ab0400a32ecc","Type":{"Value":"Passport"},"Number":{"Value":"123456789"},"ExpirationDate":{"Value":"2040-11-20T00:00:00Z"},"IssuanceDate":{"Value":"2020-11-20T00:00:00Z"},"IssuingCountryCode":{"Value":"CZ"},"IssuingCity":{"Value":"Prague"},"IdentityDocumentSupportNumber":{"Value":"S-123456"}}],"ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDocumentWriteResult'
              example: {"IdentityDocuments":[{"Id":"e8a72a69-c20b-4278-b699-ab0400a32ecc","CustomerId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","Type":"Passport","Number":"M1234567","ExpirationDate":"2040-10-24T00:00:00Z","IssuanceDate":"2024-10-24T00:00:00Z","IssuingCountryCode":"CZ","IssuingCity":"Prague","IdentityDocumentSupportNumber":"S-123456"}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/identityDocuments/add:
    post:
      tags:
        - Identity documents
      summary: Add identity documents
      description: 'Adds identity documents. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: identityDocuments_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityDocumentsAddParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","IdentityDocuments":[{"CustomerId":"e8a72a69-c20b-4278-b699-ab0400a32ecc","Type":"Passport","Number":"123456789","ExpirationDate":"2040-11-20T00:00:00Z","IssuanceDate":"2020-11-20T00:00:00Z","IssuingCountryCode":"CZ","IssuingCity":"Prague","IdentityDocumentSupportNumber":"S-123456"}],"ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDocumentWriteResult'
              example: {"IdentityDocuments":[{"Id":"e8a72a69-c20b-4278-b699-ab0400a32ecc","CustomerId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","Type":"Passport","Number":"M1234567","ExpirationDate":"2040-10-24T00:00:00Z","IssuanceDate":"2024-10-24T00:00:00Z","IssuingCountryCode":"CZ","IssuingCity":"Prague","IdentityDocumentSupportNumber":"S-123456"}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/images/getUrls:
    post:
      tags:
        - Images
      summary: Get image URLs
      description: Returns URLs of the specified images.
      operationId: images_getUrls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageUrlParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              Images:
                - ImageId: 57a971a5-a335-48f4-8cd1-595245d1a876
                  Width: 200
                  Height: 150
                  ResizeMode: Fit
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUrlResult'
              example:
                ImageUrls:
                  - ImageId: 57a971a5-a335-48f4-8cd1-595245d1a876
                    Url: https://cdn.demo.mews.li/Media/Image/57a971a5-a335-48f4-8cd1-595245d1a876?Mode=Fit&Width=200&Height=150
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/languages/getAll:
    post:
      tags:
        - Languages
      summary: Get all languages
      description: Returns all languages supported by the API.
      operationId: languages_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageResult'
              example:
                Languages:
                  - Code: zh-CN
                    EnglishName: Chinese (Simplified)
                    FallbackLanguageCode: en-US
                    LocalName: 中文
                  - Code: cs-CZ
                    EnglishName: Czech
                    FallbackLanguageCode: en-US
                    LocalName: Čeština
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/languages/getTexts:
    post:
      tags:
        - Languages
      summary: Get language texts
      description: Returns translations of texts in the specified languages.
      operationId: languages_getTexts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageTextParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              LanguageCodes:
                - en-US
                - cs-CZ
              Scope: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageTextResult'
              example:
                LanguageTexts:
                  - LanguageCode: en-US
                    Texts:
                      Address: Address
                      AddressLine1: Address line 1
                      AddressLine2: Address line 2
                      AdultPlural: Adults
                      Apartment: Apartment
                      ApartmentPlural: Apartments
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/ledgerBalances/getAll:
    post:
      tags:
        - Ledger balances
      description: Returns opening & closing balances of all specified ledgers for each day in the specified interval.
      operationId: ledgerBalances_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LedgerBalanceParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerBalanceResult'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/loyaltyMemberships/getAll:
    post:
      tags:
        - Loyalty memberships
      summary: Get all loyalty memberships
      description: 'Returns all loyalty memberships of the enterprise, optionally filtered by specific loyalty membership identifiers, activity states, or other filter parameters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: loyaltyMemberships_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyMembershipFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ChainIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","5fcd1933-22f2-40b9-84da-7db04cbecec2"],"CreatedUtc":{"StartUtc":"2022-10-15T00:00:00Z","EndUtc":"2022-10-20T00:00:00Z"},"UpdatedUtc":{"StartUtc":"2022-10-15T00:00:00Z","EndUtc":"2022-10-20T00:00:00Z"},"LoyaltyMembershipIds":["905a4489-0960-4ac9-96ec-793f47365c92","ac48674e-58a2-43d6-a02b-9ead0b213b17"],"AccountIds":["fadd5bb6-b428-45d5-94f8-fd0d89fece6d","bccdafd1-3e44-439d-861f-341526b597a9"],"LoyaltyProgramIds":["f701dafb-5765-4cf4-b1dd-1f602a740ae5"],"MembershipStates":["Pending","Enrolled"],"ActivityStates":["Active"],"Codes":["MBR-2025-AX49ZT73"],"ProviderMembershipIds":["PRV-MBR-9842XKLT"],"Limitation":{"Count":100}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyMembershipResult'
              example: {"LoyaltyMemberships":[{"Id":"905a4489-0960-4ac9-96ec-793f47365c92","ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","AccountId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","LoyaltyProgramId":"f701dafb-5765-4cf4-b1dd-1f602a740ae5","State":"New","IsPrimary":true,"ProviderMembershipId":"PRV-MBR-9842XKLT","Code":"MBR-2025-AX49ZT73","Points":22,"ExpirationDate":"2029-11-04T13:00:00Z","Url":"https://rewards.example.com/member/PRV-MBR-9842XKLT","LoyaltyTierId":"69eedfd2-6f25-42fc-b3c8-39df70f85e37","CreatorProfile":null,"UpdaterProfile":null}],"Cursor":"905a4489-0960-4ac9-96ec-793f47365c92"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/loyaltyMemberships/add:
    post:
      tags:
        - Loyalty memberships
      summary: Add loyalty memberships
      description: 'Adds loyalty memberships to the enterprise. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: loyaltyMemberships_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyMembershipAddParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","LoyaltyMemberships":[{"AccountId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","LoyaltyProgramId":"f701dafb-5765-4cf4-b1dd-1f602a740ae5","IsPrimary":true,"State":"Enrolled","Code":"MBR-2025-AX49ZT73","Points":22,"ExpirationDate":"2029-12-24T00:00:00Z","Url":"https://rewards.example.com/member/PRV-MBR-9842XKLT","LoyaltyTierId":"69eedfd2-6f25-42fc-b3c8-39df70f85e37"}],"ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyMembershipResult'
              example: {"LoyaltyMemberships":[{"Id":"905a4489-0960-4ac9-96ec-793f47365c92","ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","AccountId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","LoyaltyProgramId":"f701dafb-5765-4cf4-b1dd-1f602a740ae5","State":"New","IsPrimary":true,"ProviderMembershipId":"PRV-MBR-9842XKLT","Code":"MBR-2025-AX49ZT73","Points":22,"ExpirationDate":"2029-11-04T13:00:00Z","Url":"https://rewards.example.com/member/PRV-MBR-9842XKLT","LoyaltyTierId":"69eedfd2-6f25-42fc-b3c8-39df70f85e37","CreatorProfile":null,"UpdaterProfile":null}],"Cursor":"905a4489-0960-4ac9-96ec-793f47365c92"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/loyaltyMemberships/update:
    post:
      tags:
        - Loyalty memberships
      summary: Update loyalty memberships
      description: 'Updates information about the specified loyalty memberships. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: loyaltyMemberships_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyMembershipUpdateParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","LoyaltyMembershipUpdates":[{"LoyaltyMembershipId":"905a4489-0960-4ac9-96ec-793f47365c92","LoyaltyProgramId":{"Value":"f701dafb-5765-4cf4-b1dd-1f602a740ae5"},"State":{"Value":"Canceled"},"IsPrimary":{"Value":true},"Code":{"Value":"MBR-2025-AX49ZT73"},"Points":{"Value":42},"ExpirationDate":{"Value":"2038-01-19T03:14:07Z"},"Url":{"Value":"https://final-rewards.example.com/member/PRV-MBR-9842XKLT"},"LoyaltyTierId":{"Value":"69eedfd2-6f25-42fc-b3c8-39df70f85e37"}}],"ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyMembershipResult'
              example: {"LoyaltyMemberships":[{"Id":"905a4489-0960-4ac9-96ec-793f47365c92","ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","AccountId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","LoyaltyProgramId":"f701dafb-5765-4cf4-b1dd-1f602a740ae5","State":"New","IsPrimary":true,"ProviderMembershipId":"PRV-MBR-9842XKLT","Code":"MBR-2025-AX49ZT73","Points":22,"ExpirationDate":"2029-11-04T13:00:00Z","Url":"https://rewards.example.com/member/PRV-MBR-9842XKLT","LoyaltyTierId":"69eedfd2-6f25-42fc-b3c8-39df70f85e37","CreatorProfile":null,"UpdaterProfile":null}],"Cursor":"905a4489-0960-4ac9-96ec-793f47365c92"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/loyaltyMemberships/delete:
    post:
      tags:
        - Loyalty memberships
      summary: Delete loyalty memberships
      description: Deletes loyalty memberships.
      operationId: loyaltyMemberships_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyMembershipDeleteParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","LoyaltyMembershipIds":["905a4489-0960-4ac9-96ec-793f47365c92","ac48674e-58a2-43d6-a02b-9ead0b213b17"]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/loyaltyPrograms/getAll:
    post:
      tags:
        - Loyalty programs
      summary: Get all loyalty programs
      description: "Returns all loyalty programs of the enterprise (in the given activity state), optionally filtered by specific loyalty program identifiers or other filter parameters.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: loyaltyPrograms_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyProgramFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ChainIds:
                - 1df21f06-0cfc-4960-9c58-a3bf1261663e
                - 5fcd1933-22f2-40b9-84da-7db04cbecec2
              LoyaltyProgramIds:
                - 3ed9e2f3-4bba-4df6-8d41-ab1b009b6425
                - 8a98965a-7c03-48a1-a28c-ab1b009b53c8
              CreatedUtc:
                StartUtc: '2022-10-05T00:00:00Z'
                EndUtc: '2022-10-10T00:00:00Z'
              UpdatedUtc:
                StartUtc: '2022-10-10T00:00:00Z'
                EndUtc: '2022-10-17T00:00:00Z'
              ActivityStates:
                - Active
              Limitation:
                Count: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyProgramResult'
              example:
                LoyaltyPrograms:
                  - Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                    Name: Platinum Club Extra
                    Code: PC01
                    Type: Hotel
                    Subscription: Free
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/loyaltyPrograms/add:
    post:
      tags:
        - Loyalty programs
      summary: Add loyalty programs
      description: 'Adds loyalty programs to the enterprise. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: loyaltyPrograms_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyProgramAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              LoyaltyPrograms:
                - DataClusterId: 8ddea57b-6a5c-4eec-8c4c-24467dce118e
                  Name: Platinum Club
                  Code: PC01
                  Type: Hotel
                  Subscription: Free
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyProgramResult'
              example:
                LoyaltyPrograms:
                  - Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                    Name: Platinum Club Extra
                    Code: PC01
                    Type: Hotel
                    Subscription: Free
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/loyaltyPrograms/update:
    post:
      tags:
        - Loyalty programs
      summary: Update loyalty programs
      description: 'Updates information about the specified loyalty programs. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: loyaltyPrograms_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyProgramUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ChainId: 1df21f06-0cfc-4960-9c58-a3bf1261663e
              LoyaltyProgramUpdates:
                - LoyaltyProgramId: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                  Name:
                    Value: Platinum Club Extra
                  Type:
                    Value: Hotel
                  Subscription:
                    Value: Free
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyProgramResult'
              example:
                LoyaltyPrograms:
                  - Id: a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                    Name: Platinum Club Extra
                    Code: PC01
                    Type: Hotel
                    Subscription: Free
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/loyaltyPrograms/delete:
    post:
      tags:
        - Loyalty programs
      summary: Delete loyalty programs
      description: Deletes loyalty programs. Note that a loyalty program containing active memberships cannot be deleted.
      operationId: loyaltyPrograms_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyProgramDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              LoyaltyProgramIds:
                - a58ff7cb-77e3-495a-bd61-aecf00a3f19d
                - da34b396-41f7-47f6-8847-aecf00a3f19e
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/loyaltyTiers/getAll:
    post:
      tags:
        - Loyalty tiers
      summary: Get all loyalty tiers
      description: 'Returns all loyalty tiers of the chain or chains, filtered by loyalty program identifiers and optionally filtered by specific loyalty tier identifiers, activity states, or other filter parameters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: loyaltyTiers_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyTierFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ChainIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","5fcd1933-22f2-40b9-84da-7db04cbecec2"],"LoyaltyProgramIds":["f701dafb-5765-4cf4-b1dd-1f602a740ae5"],"LoyaltyTierIds":["69eedfd2-6f25-42fc-b3c8-39df70f85e37","3cad97ef-5257-4ced-8599-8e6bbd33331f"],"ActivityStates":["Active"],"UpdatedUtc":{"StartUtc":"2022-10-10T00:00:00Z","EndUtc":"2022-10-17T00:00:00Z"},"Limitation":{"Count":100}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyTierResult'
              example: {"LoyaltyTiers":[{"Id":"69eedfd2-6f25-42fc-b3c8-39df70f85e37","LoyaltyProgramId":"f701dafb-5765-4cf4-b1dd-1f602a740ae5","Name":"Platinum","Code":"P1","Ordering":1},{"Id":"3cad97ef-5257-4ced-8599-8e6bbd33331f","LoyaltyProgramId":"f701dafb-5765-4cf4-b1dd-1f602a740ae5","Name":"Silver","Code":"S1","Ordering":2}],"Cursor":"3cad97ef-5257-4ced-8599-8e6bbd33331f"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/loyaltyTiers/add:
    post:
      tags:
        - Loyalty tiers
      summary: Add loyalty tiers
      description: 'Adds loyalty tiers to a loyalty program of the enterprise chain. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: loyaltyTiers_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyTierAddParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","LoyaltyTiers":[{"LoyaltyProgramId":"f701dafb-5765-4cf4-b1dd-1f602a740ae5","Name":"Platinum","Code":"P1","Ordering":1}],"ChainId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyTierWriteResult'
              example: {"LoyaltyTiers":[{"Id":"69eedfd2-6f25-42fc-b3c8-39df70f85e37","LoyaltyProgramId":"f701dafb-5765-4cf4-b1dd-1f602a740ae5","Name":"Platinum","Code":"P1","Ordering":1}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/loyaltyTiers/update:
    post:
      tags:
        - Loyalty tiers
      summary: Update loyalty tiers
      description: Updates information about the specified loyalty tiers.
      operationId: loyaltyTiers_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyTierUpdateParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","LoyaltyTierUpdates":[{"LoyaltyTierId":"69eedfd2-6f25-42fc-b3c8-39df70f85e37","Name":{"Value":"Platinum"},"Code":{"Value":"P1"},"Ordering":{"Value":1}}]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyTierWriteResult'
              example: {"LoyaltyTiers":[{"Id":"69eedfd2-6f25-42fc-b3c8-39df70f85e37","LoyaltyProgramId":"f701dafb-5765-4cf4-b1dd-1f602a740ae5","Name":"Platinum","Code":"P1","Ordering":1}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/loyaltyTiers/delete:
    post:
      tags:
        - Loyalty tiers
      summary: Delete loyalty tiers
      description: Deletes loyalty tiers.
      operationId: loyaltyTiers_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyTierDeleteParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","LoyaltyTierIds":["69eedfd2-6f25-42fc-b3c8-39df70f85e37","3cad97ef-5257-4ced-8599-8e6bbd33331f"]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/messageThreads/getAll:
    post:
      tags:
        - Message threads
      summary: Get all message threads
      description: 'Get all message threads that you have created, filtered by time interval and/or specific message thread IDs. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: messageThreads_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageThreadFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              CreatedUtc:
                StartUtc: '2022-03-03T00:00:00Z'
                EndUtc: '2022-03-14T00:00:00Z'
              Limitation:
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageThreadResult'
              example:
                MessageThreads:
                  - Id: 7f9325f6-ef44-4911-89a8-ae51010a5aa4
                    OriginalSender: John Doe
                    Subject: Example subject
                    CreatedUtc: '2022-03-07T16:09:45Z'
                    UpdatedUtc: '2022-03-07T16:09:45Z'
                Cursor: 7f9325f6-ef44-4911-89a8-ae51010a5aa4
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/messageThreads/add:
    post:
      tags:
        - Message threads
      summary: Add message thread
      description: 'Creates a new [Message thread](https://mews-systems.gitbook.io/connector-api/operations/#message-thread) on behalf of the specified customer, i.e. the sender of the original message in the message thread.'
      operationId: messageThreads_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageThreadAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              OriginalSender: John Doe
              Subject: Example subject
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageThreadResult'
              example:
                MessageThreads:
                  - Id: 7f9325f6-ef44-4911-89a8-ae51010a5aa4
                    OriginalSender: John Doe
                    Subject: Example subject
                    CreatedUtc: '2022-03-07T16:09:45Z'
                    UpdatedUtc: '2022-03-07T16:09:45Z'
                Cursor: 7f9325f6-ef44-4911-89a8-ae51010a5aa4
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/messages/getAll:
    post:
      tags:
        - Messages
      summary: Get all messages
      description: 'Get all messages belonging to the specified [Message threads](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread). Messages can only be returned for message threads you have created. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: messages_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              MessageThreadIds:
                - c1478ff9-80b7-4ea2-94fc-ae4e009e1463
              CreatedUtc:
                StartUtc: '2022-03-03T00:00:00Z'
                EndUtc: '2022-03-14T00:00:00Z'
              Limitation:
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResult'
              example:
                Messages:
                  - Id: 4bfe4675-98a9-4428-9ea9-ae5300dbaa93
                    MessageThreadId: 8d02142f-31cf-4115-90bf-ae5200c7a1ba
                    Text: Text of the message
                    Sender:
                      Discriminator: Application
                    CreatedUtc: '2022-03-09T13:19:46Z'
                Cursor: 8d02142f-31cf-4115-90bf-ae5200c7a1ba
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/messages/add:
    post:
      tags:
        - Messages
      summary: Add messages
      description: 'Add the specified messages to the specified [Message threads](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread). You can only add messages to message threads that you have created.'
      operationId: messages_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleMessageAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              Messages:
                - Text: Text of the message
                  MessageThreadId: 8d02142f-31cf-4115-90bf-ae5200c7a1ba
                  Identifier: Message 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddedMessageResult'
              example:
                Messages:
                  - Identifier: string
                    Message:
                      Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      MessageThreadId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      Text: string
                      Sender: Application
                      CreatedUtc: '2024-04-11T08:54:47.193Z'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/orderItems/cancel:
    post:
      tags:
        - Order items
      summary: Cancel order items
      description: 'Cancels all order items with specified identifiers. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: orderItems_cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOrderItemParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","OrderItemIds":["f5c6b7a8-9d4f-4e2a-8a3b-2f3b8b9e6a1f","a6b7c8d9-0e1f-4d2a-9b3c-5d6e7f8a9b0c"],"EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/orderItems/getAll:
    post:
      tags:
        - Order items
      summary: Get all order items
      description: 'Returns all order items. At least one of the `OrderItemIds`, `ServiceOrderIds`, `ServiceIds`, `BillIds`, `CreatedUtc`, `UpdatedUtc`, `ClosedUtc` filters must be specified in the request. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: orderItems_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              OrderItemIds:
                - 3e982ab5-6245-4c39-80af-1118d40e7494
                - bd11dc4a-8f9e-442b-bb1e-f5361b31dfa2
              ServiceOrderIds:
                - ac5ef5eb-c5b2-4083-879f-83f04a5ebda5
                - 5d603823-b40a-43a4-8244-d5d2b515deb5
              ServiceIds:
                - 294c7859-63ba-46ad-a8bf-34fad2019383
                - 05089c0c-5d55-4756-827b-c4bcee1edf00
              BillIds:
                - d27ffe99-ff92-4afb-ac03-9268f24f0556
                - 297de6f8-bd67-4ebd-98b6-ecc1cd8f920c
              CreatedUtc:
                StartUtc: '2023-03-01T00:00:00Z'
                EndUtc: '2023-03-31T00:00:00Z'
              UpdatedUtc:
                StartUtc: '2023-03-01T00:00:00Z'
                EndUtc: '2023-03-31T00:00:00Z'
              ConsumedUtc:
                StartUtc: '2023-03-01T00:00:00Z'
                EndUtc: '2023-03-31T00:00:00Z'
              CanceledUtc:
                StartUtc: '2023-03-01T00:00:00Z'
                EndUtc: '2023-03-31T00:00:00Z'
              ClosedUtc:
                StartUtc: '2023-03-01T00:00:00Z'
                EndUtc: '2023-03-31T00:00:00Z'
              AccountingStates:
                - Open
                - Closed
              Types:
                - CityTax
                - SpaceOrder
              Currency: EUR
              Limitation:
                Count: 10
                Cursor: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItemResult'
              example:
                OrderItems:
                  - Id: 53896156-f25b-4949-b55b-afd3007b1146
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    AccountId: c173bb22-6ff8-4ffd-875f-afb900c92865
                    AccountType: Customer
                    Notes: Additional note
                    ServiceId: 294c7859-63ba-46ad-a8bf-34fad2019383
                    ServiceOrderId: ac5ef5eb-c5b2-4083-879f-83f04a5ebda5
                    BillId: d27ffe99-ff92-4afb-ac03-9268f24f0556
                    AccountingCategoryId: c0610937-0165-4091-a79c-44eb34173daf
                    UnitCount: 1
                    UnitAmount:
                      Currency: EUR
                      NetValue: 5
                      GrossValue: 5
                      TaxValues:
                        - Code: DE-2020-1-Z
                          Value: 0
                      Breakdown:
                        Items:
                          - TaxRateCode: DE-2020-1-Z
                            NetValue: 5
                            TaxValue: 0
                    Amount:
                      Currency: EUR
                      NetValue: 5
                      GrossValue: 5
                      TaxValues:
                        - Code: DE-2020-1-Z
                          Value: 0
                      Breakdown:
                        Items:
                          - TaxRateCode: DE-2020-1-Z
                            NetValue: 5
                            TaxValue: 0
                    OriginalAmount:
                      Currency: EUR
                      NetValue: 5
                      GrossValue: 5
                      TaxValues:
                        - Code: DE-2020-1-Z
                          Value: 0
                      Breakdown:
                        Items:
                          - TaxRateCode: DE-2020-1-Z
                            NetValue: 5
                            TaxValue: 0
                    RevenueType: Additional
                    CreatorProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                    UpdaterProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                    CreatedUtc: '2023-03-28T07:28:04Z'
                    UpdatedUtc: '2023-03-28T07:28:04Z'
                    ConsumedUtc: '2023-03-31T00:00:00Z'
                    CanceledUtc: 
                    ClosedUtc: 
                    StartUtc: '2023-03-30T22:00:00Z'
                    AccountingState: Open
                    Type: CityTax
                    Options:
                      CanceledWithReservation: false
                    Data: 
                  - Id: bd11dc4a-8f9e-442b-bb1e-f5361b31dfa2
                    EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                    AccountId: c173bb22-6ff8-4ffd-875f-afb900c92865
                    AccountType: Company
                    Notes: Additional note
                    ServiceId: 05089c0c-5d55-4756-827b-c4bcee1edf00
                    ServiceOrderId: dd01a673-ee6e-4f10-9c93-afcd00759ddd
                    BillId: 297de6f8-bd67-4ebd-98b6-ecc1cd8f920c
                    AccountingCategoryId: c5819fe7-d67c-4c24-b02e-6ce84a1d3b1d
                    UnitCount: 1
                    UnitAmount:
                      Currency: EUR
                      NetValue: 93.46
                      GrossValue: 100
                      TaxValues:
                        - Code: DE-2020-1-L
                          Value: 6.54
                      Breakdown:
                        Items:
                          - TaxRateCode: DE-2020-1-L
                            NetValue: 93.46
                            TaxValue: 6.54
                    Amount:
                      Currency: EUR
                      NetValue: 93.46
                      GrossValue: 100
                      TaxValues:
                        - Code: DE-2020-1-L
                          Value: 6.54
                      Breakdown:
                        Items:
                          - TaxRateCode: DE-2020-1-L
                            NetValue: 93.46
                            TaxValue: 6.54
                    OriginalAmount:
                      Currency: EUR
                      NetValue: 93.46
                      GrossValue: 100
                      TaxValues:
                        - Code: DE-2020-1-L
                          Value: 6.54
                      Breakdown:
                        Items:
                          - TaxRateCode: DE-2020-1-L
                            NetValue: 93.46
                            TaxValue: 6.54
                    RevenueType: Service
                    CreatorProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                    UpdaterProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                    CreatedUtc: '2023-03-28T07:28:01Z'
                    UpdatedUtc: '2023-03-28T07:28:04Z'
                    ConsumedUtc: '2023-03-31T00:00:00Z'
                    CanceledUtc: 
                    ClosedUtc: 
                    StartUtc: '2023-03-30T22:00:00Z'
                    AccountingState: Open
                    Type: SpaceOrder
                    Options:
                      CanceledWithReservation: false
                    Data:
                      Discriminator: Product
                      Rebate: 
                      Product:
                        ProductId: 8c8dbd02-f2e2-4845-b964-afb900c8f919
                        AgeCategoryId: 
                Cursor: d98c9611-0006-4691-a835-af2e00b170c4
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/orders/add:
    post:
      tags:
        - Orders
      summary: Add order
      description: 'Creates a new order, with the specified products and items. If the time of consumption is specified, it must be either in the future or within the Editable History Interval for the enterprise. Compared to a stay service order (i.e. a reservation), which is consumed over certain span of time, a product service order is consumed at a single point in time. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: orders_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAdditionParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: 7059D2C25BF64EA681ACAB3A00B859CC-D91BFF2B1E3047A3E0DEC1D57BE1382
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              AccountId: 407a26f8-dcfc-4e29-b978-ab440117a153
              ServiceId: d2129910-1da9-4d39-be14-ab3a00c9e70c
              BillId: 22b68915-05fe-4a31-b1cb-bd5efa35d305
              ConsumptionUtc: '2020-02-04T00:00:00Z'
              ProductOrders:
                - ProductId: 2eb7ad8b-8dfb-4381-aba5-ab58009f2993
                  Count: 2
              Items:
                - Name: Beer
                  UnitCount: 3
                  UnitAmount:
                    Currency: USD
                    NetValue: 7
                    TaxCodes:
                      - US-DC-G
                  AccountingCategoryId: 90eff5aa-36b4-4689-80c0-ab3a00bb412e
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAdditionResult'
              example:
                OrderId: cdfd5caa-2868-411b-ba95-322e70035f1a
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/outletBills/add:
    post:
      tags:
        - Outlet bills
      summary: Add outlet bills
      description: Adds new outlet bills with their items.
      operationId: outletBills_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOutletBillsParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              Bills:
                - OutletId: 7700469f-7667-4ebd-a1c0-10380afc9bd0
                  Number: '1257'
                  ClosedUtc: '2017-01-01T00:00:00Z'
                  Items:
                    - Type: Payment
                      Name: Cash payment
                      UnitCount: 1
                      UnitAmount:
                        Currency: GBP
                        GrossValue: -25
                        TaxCodes:
                          - UK-S
                      ConsumedUtc: '2017-01-01T00:00:00Z'
                      ExternalIdentifier: PaymentReference123
                    - Type: Revenue
                      Name: Beer
                      UnitCount: 10
                      UnitAmount:
                        Currency: GBP
                        GrossValue: 2.5
                        TaxCodes:
                          - UK-S
                      ConsumedUtc: '2017-01-01T00:00:00Z'
                      AccountingCategoryId: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOutletBillsResult'
              example:
                OutletBillIds:
                  - f2ee1bd2-dd55-4cd3-bab1-ab6800bf0301
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/outletItems/getAll:
    post:
      tags:
        - Outlet items
      summary: Get all outlet items
      description: "Returns all outlet items of the enterprise that were consumed (posted) or will be consumed within the specified interval. If the `Currency` is specified, costs of the items are converted to that currency.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: outletItems_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutletItemsFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ConsumedUtc:
                StartUtc: '2020-01-05T00:00:00Z'
                EndUtc: '2020-01-10T00:00:00Z'
              ClosedUtc:
                StartUtc: '2020-01-05T00:00:00Z'
                EndUtc: '2020-01-10T00:00:00Z'
              UpdatedUtc:
                StartUtc: '2020-01-05T00:00:00Z'
                EndUtc: '2020-01-10T00:00:00Z'
              Currency: EUR
              Limitation:
                Count: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutletItemResult'
              example:
                OutletItems:
                  - Id: f29821b7-1659-4c96-a8c7-3725d0f1509b
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    BillId: 5c82a9bd-729c-4f80-af48-a56ab3aebbf6
                    AccountingCategoryId: 1131ddd1-fa2b-4150-bbf6-7fce94941f65
                    Type: Revenue
                    Name: sample revenue item
                    UnitCount: 4
                    UnitAmount:
                      Currency: EUR
                      GrossValue: 11
                      NetValue: 11
                      TaxValues: [ ]
                    CreatedUtc: '2018-07-25T12:47:11Z'
                    ConsumedUtc: '2018-07-26T12:19:07Z'
                    UpdatedUtc: '2018-07-26T12:19:07Z'
                    ExternalIdentifier: 
                    Notes: 
                  - Id: dfec07c6-e278-4ed0-932f-41bbd1f38039
                    EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                    BillId: 7bdd3b53-7bb3-419d-8ff2-c9bde65d0c7e
                    AccountingCategoryId: 7EDAB816-BF4E-40CC-8936-7BC0B222908D
                    Type: Payment
                    Name: sample payment item
                    UnitCount: 77
                    UnitAmount:
                      Currency: EUR
                      GrossValue: 2
                      NetValue: 2
                      TaxValues: [ ]
                    CreatedUtc: '2018-07-25T16:25:28Z'
                    ConsumedUtc: '2018-07-26T10:11:08Z'
                    UpdatedUtc: '2018-07-26T10:11:08Z'
                    ExternalIdentifier: PaymentReference123
                    Notes: 
                OutletBills:
                  - Id: 5c82a9bd-729c-4f80-af48-a56ab3aebbf6
                    OutletId: c9f09414-2fdf-41d6-bdb1-12158b01048e
                    Number: '1305'
                    ClosedUtc: '2018-07-26T12:19:07Z'
                    UpdatedUtc: '2018-07-26T12:19:07Z'
                    Notes: 
                  - Id: 7bdd3b53-7bb3-419d-8ff2-c9bde65d0c7e
                    OutletId: E0A29D6D-411E-4302-AA6D-9289935C5F14
                    Number: '1306'
                    ClosedUtc: '2018-07-26T10:19:02Z'
                    UpdatedUtc: '2018-07-26T10:19:02Z'
                    Notes: 
                Cursor: 8d02142f-31cf-4115-90bf-ae5200c7a1ba
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/outlets/getAll:
    post:
      tags:
        - Outlets
      summary: Get all outlets
      description: Returns all outlets of an enterprise associated with the connector integration.
      operationId: outlets_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutletFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              OutletIds:
                - 7700469f-7667-4ebd-a1c0-10380afc9bd0
                - 2accff7b-feea-436a-9670-afa9bdb8c8d2
              UpdatedUtc:
                StartUtc: '2023-10-01T00:00:00Z'
                EndUtc: '2023-10-31T00:00:00Z'
              Limitation:
                Count: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutletResult'
              example:
                Outlets:
                  - Id: 7700469f-7667-4ebd-a1c0-10380afc9bd0
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    IsActive: true
                    Name: Spa
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                  - Id: 2accff7b-feea-436a-9670-afa9bdb8c8d2
                    EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                    IsActive: true
                    Name: Restaurant
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                Cursor: 2accff7b-feea-436a-9670-afa9bdb8c8d2
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/paymentPlans/add:
    post:
      tags:
        - Payment plans
      summary: Create a payment plan
      description: Adds a payment plan with `Name` connected to a `Reservation` and returns the payment request URL associated with the created payment plan. The fulfillment of the payment request will initiate the payment plan.
      operationId: paymentPlans_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentPlanAddParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ReservationId":"0f515589-99b4-423d-b83a-b237009f0509","Name":"Payment Plan Name","PaymentRequest":{"PaymentMethods":["PaymentCard","SepaDirectDebit"],"Message":"Payment request message","Note":"Internal Note","PaymentRequestType":"Payment","PaymentRequestExpirationOffsetDays":30,"SendEmail":false},"StartMonth":"2023-10"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPlanAddResult'
              example: {"PaymentRequestUrl":"https://example.com/payment-request-url"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/paymentRequests/getAll:
    post:
      tags:
        - Payment requests
      summary: Get all payment requests
      description: "Get all payment requests belonging to the specified customer accounts. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: paymentRequests_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequestFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              PaymentRequestIds:
                - bcc76295-4e47-4cf1-a7cb-afae00bd1c35
              AccountIds:
                - 8466DFDD-0964-4002-8719-AFA900D0F1BA
              UpdatedUtc:
                StartUtc: '2020-01-05T00:00:00Z'
                EndUtc: '2020-01-10T00:00:00Z'
              States:
                - Pending
                - Expired
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequestResult'
              example:
                PaymentRequests:
                  - Id: bcc76295-4e47-4cf1-a7cb-afae00bd1c35
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    AccountId: 8466dfdd-0964-4002-8719-afa900d0f1ba
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    ReservationGroupId: 
                    State: Pending
                    Amount:
                      Currency: EUR
                      NetValue: 10
                      GrossValue: 10
                      TaxValues: [ ]
                      Breakdown:
                        Items:
                          - TaxRateCode: 
                            NetValue: 10
                            TaxValue: 0
                    Type: Payment
                    Reason: PaymentCardDeclined
                    ExpirationUtc: '2023-02-23T23:00:00Z'
                    Description: Payment required.
                    Notes: 
                Cursor: bcc76295-4e47-4cf1-a7cb-afae00bd1c35
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/paymentRequests/add:
    post:
      tags:
        - Payment requests
      summary: Add payment requests
      description: 'Creates a payment request to the specified [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: paymentRequests_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiplePaymentRequestAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              PaymentRequests:
                - AccountId: 8466dfdd-0964-4002-8719-afa900d0f1ba
                  Amount:
                    Currency: EUR
                    Value: 10
                  Type: Payment
                  Reason: PaymentCardMissing
                  ExpirationUtc: '2023-02-20T12:00:00.000Z'
                  Description: Payment required
                  Notes: Internal notes.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequestResult'
              example:
                PaymentRequests:
                  - Id: bcc76295-4e47-4cf1-a7cb-afae00bd1c35
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    AccountId: 8466dfdd-0964-4002-8719-afa900d0f1ba
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    ReservationGroupId: 
                    State: Pending
                    Amount:
                      Currency: EUR
                      NetValue: 10
                      GrossValue: 10
                      TaxValues: [ ]
                      Breakdown:
                        Items:
                          - TaxRateCode: 
                            NetValue: 10
                            TaxValue: 0
                    Type: Payment
                    Reason: PaymentCardDeclined
                    ExpirationUtc: '2023-02-23T23:00:00Z'
                    Description: Payment required.
                    Notes: 
                Cursor: bcc76295-4e47-4cf1-a7cb-afae00bd1c35
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/paymentRequests/cancel:
    post:
      tags:
        - Payment requests
      summary: Cancel payment requests
      description: Cancels specified payment requests. Only payment requests which are in `Pending` state can be canceled.
      operationId: paymentRequests_cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiplePaymentRequestCancelParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              PaymentRequestIds:
                - 6282d17b-a068-4a9f-83d3-afae00c39bfb
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequestResult'
              example:
                PaymentRequests:
                  - Id: bcc76295-4e47-4cf1-a7cb-afae00bd1c35
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    AccountId: 8466dfdd-0964-4002-8719-afa900d0f1ba
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    ReservationGroupId: 
                    State: Pending
                    Amount:
                      Currency: EUR
                      NetValue: 10
                      GrossValue: 10
                      TaxValues: [ ]
                      Breakdown:
                        Items:
                          - TaxRateCode: 
                            NetValue: 10
                            TaxValue: 0
                    Type: Payment
                    Reason: PaymentCardDeclined
                    ExpirationUtc: '2023-02-23T23:00:00Z'
                    Description: Payment required.
                    Notes: 
                Cursor: bcc76295-4e47-4cf1-a7cb-afae00bd1c35
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/payments/getAll:
    post:
      tags:
        - Payments
      summary: Get all payments
      description: 'Returns all payments in the system, filtered by various parameters. At least one filter parameter must be specified. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: payments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","PaymentIds":["f6313945-94c1-4e27-b402-031c2a8c989f","be922eb7-bc5f-4877-b847-1120c0c2acd2"],"AccountIds":["fadd5bb6-b428-45d5-94f8-fd0d89fece6d"],"BillIds":["ea087d64-3901-4eee-b0b7-9fce4c58a005","d23ac52f-9b86-4a03-a6fe-5822dfcfc5c4"],"ReservationIds":["0f515589-99b4-423d-b83a-b237009f0509","b7a3f5cb-1e69-4a5f-a069-10f461996d7f"],"CreatedUtc":{"StartUtc":"2023-03-01T00:00:00Z","EndUtc":"2023-03-31T00:00:00Z"},"UpdatedUtc":{"StartUtc":"2023-03-01T00:00:00Z","EndUtc":"2023-03-31T00:00:00Z"},"ChargedUtc":{"StartUtc":"2023-03-01T00:00:00Z","EndUtc":"2023-03-31T00:00:00Z"},"ClosedUtc":{"StartUtc":"2023-03-01T00:00:00Z","EndUtc":"2023-03-31T00:00:00Z"},"SettlementUtc":{"StartUtc":"2023-03-01T00:00:00Z","EndUtc":"2023-03-31T00:00:00Z"},"Currency":"EUR","AccountingStates":["Closed","Open"],"States":["Charged","Pending"],"Type":"Payment","EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":10}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResult'
              example: {"Payments":[{"Id":"f6313945-94c1-4e27-b402-031c2a8c989f","EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","AccountId":"c6f5c82d-621a-4c8a-903b-1b0a9a23b71f","AccountType":"Company","BillId":"ea087d64-3901-4eee-b0b7-9fce4c58a005","ReservationId":"0f515589-99b4-423d-b83a-b237009f0509","AccountingCategoryId":null,"Amount":{"Currency":"EUR","NetValue":-3700.00,"GrossValue":-3700.00,"TaxValues":[],"Breakdown":{"Items":[{"TaxRateCode":null,"NetValue":-3700.00,"TaxValue":0.0}]}},"OriginalAmount":{"Currency":"GBP","NetValue":-3700.0,"GrossValue":-3700.0,"TaxValues":[],"Breakdown":{"Items":[{"TaxRateCode":null,"NetValue":-3700.0,"TaxValue":0.0}]}},"Notes":null,"SettlementId":null,"ConsumedUtc":"2023-03-02T12:12:35Z","ClosedUtc":null,"ChargedUtc":"2023-03-06T07:31:52Z","CreatedUtc":"2023-03-06T07:31:51Z","UpdatedUtc":"2023-03-06T07:31:53Z","SettlementUtc":null,"AccountingState":"Open","State":"Charged","Identifier":"ch_764309db-4bcd-4f2c-ad6a-1c178089deec","Type":"CreditCardPayment","Kind":"Payment","Data":{"Discriminator":"CreditCard","CreditCard":{"CreditCardId":"c922266b-291d-4e25-9df7-afbd007c1991","Transaction":null},"Invoice":null,"External":null,"Ghost":null}},{"Id":"be922eb7-bc5f-4877-b847-1120c0c2acd2","EnterpriseId":"4d0201db-36f5-428b-8d11-4f0a65e960cc","AccountId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","AccountType":"Customer","BillId":"d23ac52f-9b86-4a03-a6fe-5822dfcfc5c4","ReservationId":"b7a3f5cb-1e69-4a5f-a069-10f461996d7f","AccountingCategoryId":null,"Amount":{"Currency":"EUR","NetValue":-300.00,"GrossValue":-300.00,"TaxValues":[],"Breakdown":{"Items":[{"TaxRateCode":null,"NetValue":-300.00,"TaxValue":0.0}]}},"OriginalAmount":{"Currency":"EUR","NetValue":-300.00,"GrossValue":-300.00,"TaxValues":[],"Breakdown":{"Items":[{"TaxRateCode":null,"NetValue":-300.00,"TaxValue":0.0}]}},"Notes":null,"SettlementId":null,"ConsumedUtc":"2023-03-02T12:12:35Z","ClosedUtc":"2023-03-02T12:12:35Z","ChargedUtc":"2023-03-02T12:12:32Z","CreatedUtc":"2023-03-02T12:12:32Z","UpdatedUtc":"2023-03-02T12:12:37Z","SettlementUtc":null,"AccountingState":"Closed","State":"Charged","Identifier":"","Type":"CashPayment","Kind":"Payment","Data":null}],"Cursor":"be922eb7-bc5f-4877-b847-1120c0c2acd2"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/payments/refund:
    post:
      tags:
        - Payments
      summary: Refund payment
      description: "Refunds a specified payment on a specified account. A reason must be provided. Optionally, specify an amount for a partial refund. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).\r\n                                                   \r\n* **Payment types**: Only `CreditCardPayment` and `AlternativePayment` can be refunded. Other payment types will fail.\r\n* **Refund information**: The refund is a payment itself. To get more information, use [Get all payments](https://mews-systems.gitbook.io/connector-api/operations/payments#get-all-payments) with the `RefundId` as the `PaymentId`.\r\n* **Potential failures**: This operation initiates the refund process, but refunds can fail if the payment is in a `Pending` state and fails processing. To check the status of a pending payment, including refunds, use [Get all payments](https://mews-systems.gitbook.io/connector-api/operations/payments#get-all-payments)."
      operationId: payments_refund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRefundParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","PaymentId":"f6313945-94c1-4e27-b402-031c2a8c989f","AccountId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","Reason":"Sample reason","ValueToRefund":110.5,"EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRefundResult'
              example: {"PaymentId":"f6313945-94c1-4e27-b402-031c2a8c989f","RefundId":"1d65c488-111a-4719-b3ea-e1a9969c6069","Type":"CreditCardPayment","Amount":{"Currency":"GBP","Value":100.0},"State":"Pending"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/payments/addCreditCard:
    post:
      tags:
        - Payments
      summary: Add credit card payment
      description: "Adds a new credit card payment to a bill of the specified customer. Note that the payment is added to open bill of the customer, either to the specified one or the default one. This operation only serves to record a credit card payment that has already been taken outside of Mews or Mews' payment terminal, and does not actually charge the customer's credit card. \nThe bill can then be closed manually by a Mews user, or automatically via API with the [Close bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#close-bill) operation."
      operationId: payments_addCreditCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardPaymentParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
              Amount:
                Currency: GBP
                GrossValue: 100
              CreditCard:
                Type: Visa
                Number: 411111******1111
                Expiration: '12/2016'
                Name: John Smith
              AccountingCategoryId: 
              ReceiptIdentifier: '123456'
              Notes: Terminal A
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCreditCardResult'
              example:
                CreditCardId: ee2209ce-71c6-4e3a-978f-aac700c82c7b
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/payments/addExternal:
    post:
      tags:
        - Payments
      summary: Add external payment
      description: "Adds a new external payment to a bill of the specified customer. An external payment represents a payment that is tracked outside of the system. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).\r\n\r\n**Prerequisites:** The external payment type must be enabled by the property in order to accept such payments in their Mews environment. Use [Get configuration](https://mews-systems.gitbook.io/connector-api/operations/configuration#get-configuration) to check which external payment types are supported."
      operationId: payments_addExternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalPaymentParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              AccountId: 35d4b117-4e60-44a3-9580-c582117eff98
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              Amount:
                Currency: GBP
                GrossValue: 100
              ExternalIdentifier: b06de5e4-7137-47ec-8a49-3303131b02c0
              Type: Cash
              AccountingCategoryId: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddExternalPaymentResult'
              example:
                ExternalPaymentId: 4ee05b77-ae21-46e8-8418-ac1c009dfb2b
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/payments/addAlternative:
    post:
      tags:
        - Payments
      summary: Add alternative payment
      description: "Adds a new alternative payment to a specified customer.\n**Pre-requisites:** The property must have the relevant type of alternative payment method enabled in their Mews subscriptions in order to accept such payments in their Mews environment. Please ask the property to confirm."
      operationId: payments_addAlternative
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlternativePaymentParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
              Method: Ideal
              RedirectUrl: https://mews.com
              Amount:
                Currency: GBP
                GrossValue: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlternativePaymentResult'
              example:
                PaymentId: 3ae3976f-8f22-4936-a4e8-abf800bd7278
                NextAction:
                  Discriminator: RedirectToUrl
                  Value: https://sample-payment-gateway.com/redirect/authenticate/unFR1tjshd9OGDaSSyCeVEbO
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/preauthorizations/getAllByCustomers:
    post:
      tags:
        - Preauthorizations
      summary: Get all preauthorizations by customers
      description: Returns all preauthorizations of specified customers.
      operationId: preauthorizations_getAllByCustomers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCustomerParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              CustomerIds:
                - e98995b0-140a-4208-bbeb-b77f2c43d6ee
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreauthorizationResult'
              example:
                Preauthorizations:
                  - Amount:
                      Currency: EUR
                      NetValue: 
                      GrossValue: 10
                      TaxValues: [ ]
                    Code: 
                    CreditCardId: e417dfe8-c813-4938-837b-36081199ce88
                    CustomerId: 20725048-b6ec-40f0-9d0a-7e5273d8b861
                    Id: 2d93962f-067f-45a6-b7c4-bc4b9d899456
                    IsActive: false
                    State: Cancelled
                  - Amount:
                      Currency: EUR
                      NetValue: 
                      GrossValue: 22
                      TaxValues: [ ]
                    Code: 
                    CreditCardId: 41fa39ab-4b12-4816-95a3-d06cdbbdcb69
                    CustomerId: 20725048-b6ec-40f0-9d0a-7e5273d8b861
                    Id: ad44411a-1efc-46b6-b903-ec5fa7842000
                    IsActive: true
                    ReceiptIdentifier: 
                    SequenceCode: 
                    State: Charged
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/productCategories/getAll:
    post:
      tags:
        - Product categories
      summary: Get all product categories
      description: 'Returns all categories of products. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: productCategories_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ProductCategoryIds:
                - 5228623e-b2cf-4f9f-8bd6-71cbe3ec5e6f
                - 63bc87d3-edf5-4d06-a601-6052a2ad709d
              ServiceIds:
                - 9b3a6c54-63aa-4383-b50e-b0030078184b
                - c0f71466-6c0b-4993-88ac-1794f6b7e958
              UpdatedUtc:
                StartUtc: '2023-05-05T00:00:00Z'
                EndUtc: '2023-05-10T00:00:00Z'
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryResult'
              example:
                ProductCategories:
                  - Id: 5c0804f9-d03a-4b13-a57d-b00300781a41
                    ServiceId: 9b3a6c54-63aa-4383-b50e-b0030078184b
                    Names:
                      en-US: Alcohol 1
                    ShortNames:
                      en-US: Alcohol 1
                    Descriptions: { }
                    ParentProductCategory:
                      - Id: 0b82f6d8-e5eb-4711-9069-40db2b8d968f
                      - Names:
                          en-US: Alcoholic beverages
                    CreatedUtc: '2023-06-09T13:32:32Z'
                    UpdatedUtc: '2023-06-09T13:32:32Z'
                    Ordering: 1
                  - Id: f0709b02-f1a4-46b2-9c1e-744b5ecd6980
                    ServiceId: 9b3a6c54-63aa-4383-b50e-b0030078184b
                    Names:
                      en-US: Lemonade 1
                    ShortNames:
                      en-US: Lemonade 1
                    Descriptions: { }
                    ParentProductCategory:
                      - Id: aa4f3930-3f9d-4df7-9c6b-5aba5b2f6f7e
                      - Names:
                          en-US: Lemonades
                    CreatedUtc: '2023-06-09T13:32:32Z'
                    UpdatedUtc: '2023-06-09T13:32:32Z'
                    Ordering: 1
                Cursor: f0709b02-f1a4-46b2-9c1e-744b5ecd6980
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/productServiceOrders/getAll:
    post:
      tags:
        - Product service orders
      summary: Get all product service orders
      description: 'Returns all product service orders orders associated with the given enterprise. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)..'
      operationId: productServiceOrders_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductServiceOrderFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ProductServiceOrderIds:
                - 9b59b50d-bd32-4ce5-add8-09ea0e1300e7
              ServiceIds:
                - ae8da28c-e8a4-4141-9df0-8c998976c691
                - 6b02d015-47ac-4c41-8e9f-5b4db61d4284
              UpdatedUtc:
                StartUtc: '2023-04-01T00:00:00Z'
                EndUtc: '2023-05-05T00:00:00Z'
              Limitation:
                Cursor: 819e3435-7d5e-441f-bc68-76d89c69b8f5
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductServiceOrderResult'
              example:
                ProductServiceOrders:
                  - Id: 9b59b50d-bd32-4ce5-add8-09ea0e1300e7
                    ServiceId: ae8da28c-e8a4-4141-9df0-8c998976c691
                    AccountId: 94843f6f-3be3-481b-a1c7-06458774c3df
                    AccountType: Customer
                    CreatorProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                    UpdaterProfileId: 3cd637ef-4728-47f9-8fb1-afb900c9cdcf
                    BookerId: ebd507c5-6bfd-4ca9-96aa-ffed6fa94f72
                    Number: '52'
                    State: Confirmed
                    Origin: Connector
                    CommanderOrigin: 
                    OriginDetails: 
                    CreatedUtc: '2023-04-23T14:58:02Z'
                    UpdatedUtc: '2023-04-23T14:58:02Z'
                    CancelledUtc: 
                    VoucherId: 
                    BusinessSegmentId: 
                    Options:
                      OwnerCheckedIn: true
                      AllCompanionsCheckedIn: true
                      AnyCompanionCheckedIn: true
                      ConnectorCheckIn: true
                Cursor: 9b59b50d-bd32-4ce5-add8-09ea0e1300e7
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/products/getPricing:
    post:
      tags:
        - Products
      summary: Get product pricing
      description: 'Returns prices for a given product for a specified time interval. UTC timestamps must correspond to the start boundary of a time unit, e.g. 00:00 converted to UTC for a time unit of "Day". Other timestamps are not permitted. The __maximum size of time interval__ depends on the service''s time unit: 100 hours if hours, 100 days if days, or 24 months if months. For more information about time units, see [Time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units). This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: products_getPricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPricingFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ProductId":"6b97a38b-0043-41e0-afbd-3f083bdbc0d2","FirstTimeUnitStartUtc":"2024-03-01T23:00:00.000Z","LastTimeUnitStartUtc":"2024-03-03T23:00:00.000Z","EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPricingResult'
              example: {"ProductId":"6b97a38b-0043-41e0-afbd-3f083bdbc0d2","TimeUnitStartsUtc":["2024-03-01T23:00:00Z","2024-03-02T23:00:00Z","2024-03-03T23:00:00Z"],"BaseAmountPrices":[{"Currency":"EUR","NetValue":93.46,"GrossValue":100.00,"TaxValues":[{"Code":"DE-2020-1-L","Value":6.54}],"Breakdown":{"Items":[{"TaxRateCode":"DE-2020-1-L","NetValue":93.46,"TaxValue":6.54}]}},{"Currency":"EUR","NetValue":93.46,"GrossValue":100.00,"TaxValues":[{"Code":"DE-2020-1-L","Value":6.54}],"Breakdown":{"Items":[{"TaxRateCode":"DE-2020-1-L","NetValue":93.46,"TaxValue":6.54}]}}],"AgeCategoryPrices":[{"AgeCategoryId":"7d9d9b11-2c96-4862-9ead-501c6a8ed114","Prices":[{"Currency":"EUR","NetValue":93.46,"GrossValue":100.00,"TaxValues":[{"Code":"DE-2020-1-L","Value":6.54}],"Breakdown":{"Items":[{"TaxRateCode":"DE-2020-1-L","NetValue":93.46,"TaxValue":6.54}]}},{"Currency":"EUR","NetValue":93.46,"GrossValue":100.00,"TaxValues":[{"Code":"DE-2020-1-L","Value":6.54}],"Breakdown":{"Items":[{"TaxRateCode":"DE-2020-1-L","NetValue":93.46,"TaxValue":6.54}]}}]}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/products/updatePrice:
    post:
      tags:
        - Products
      summary: Update product pricing
      description: 'Updates the prices for a given product. You can make multiple price updates with one API call, and for each one specify the price amount per [Time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units) and the time interval for which it applies. The price will be updated for all service time units that the specified time interval intersects. It is not permitted to update historical prices older than specified by `EditableHistoryInterval`. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: products_updatePrice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPriceUpdateParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ProductId":"6b97a38b-0043-41e0-afbd-3f083bdbc0d2","PriceUpdates":[{"Value":100.0,"FirstTimeUnitStartUtc":"2024-03-01T23:00:00.000Z","LastTimeUnitStartUtc":"2024-03-03T23:00:00.000Z"},{"Value":200.0,"FirstTimeUnitStartUtc":"2024-03-06T23:00:00.000Z","LastTimeUnitStartUtc":"2024-03-08T23:00:00.000Z"}],"EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/products/getAll:
    post:
      tags:
        - Products
      summary: Get all products
      description: 'Returns all products offered together with the specified services. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: products_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ServiceIds:
                - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              UpdatedUtc:
                StartUtc: '2023-10-01T00:00:00Z'
                EndUtc: '2023-10-31T00:00:00Z'
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResult'
              example:
                Products:
                  - Id: 198bc308-c1f2-4a1c-a827-c41d99d52f3d
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    CategoryId: 
                    AccountingCategoryId: 6535e19e-1077-49d9-a338-67bf4ffecb14
                    IsActive: true
                    Names:
                      en-US: Breakfast
                    ExternalNames:
                      en-US: Breakfast
                    ShortNames:
                      en-US: BFST
                    Descriptions:
                      en-US: Nice continental breakfast.
                    ChargingMode: PerPersonPerTimeUnit
                    PostingMode: Once
                    Options:
                      BillAsPackage: false
                    Promotions:
                      BeforeCheckIn: false
                      AfterCheckIn: false
                      DuringStay: false
                      BeforeCheckOut: false
                      AfterCheckOut: false
                      DuringCheckOut: false
                    Classifications:
                      Food: false
                      Beverage: false
                      Wellness: false
                      CityTax: false
                    Price:
                      GrossValue: 25
                      Currency: EUR
                      TaxValues:
                        - Code: FR-T
                    ExternalIdentifier: PROD-BFST-009
                CustomerProducts:
                  - Id: 198bc308-c1f2-4a1c-a827-c41d99d52f3d
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    CategoryId: 
                    AccountingCategoryId: 6535e19e-1077-49d9-a338-67bf4ffecb14
                    IsActive: true
                    Names:
                      en-US: Breakfast
                    ExternalNames:
                      en-US: Breakfast
                    ShortNames:
                      en-US: BFST
                    Descriptions:
                      en-US: Nice continental breakfast.
                    ChargingMode: PerPersonPerTimeUnit
                    PostingMode: Once
                    Options:
                      BillAsPackage: false
                    Promotions:
                      BeforeCheckIn: false
                      AfterCheckIn: false
                      DuringStay: false
                      BeforeCheckOut: false
                      AfterCheckOut: false
                      DuringCheckOut: false
                    Classifications:
                      Food: false
                      Beverage: false
                      Wellness: false
                      CityTax: false
                    Price:
                      GrossValue: 25
                      Currency: EUR
                      TaxValues:
                        - Code: FR-T
                    ExternalIdentifier: PROD-BFST-009
                Cursor: 198bc308-c1f2-4a1c-a827-c41d99d52f3d
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/products/delete:
    post:
      tags:
        - Products
      summary: Delete products
      description: 'Deletes specified products. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: products_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: aff75fbb-5cce-4fae-8039-b07000d16650
              ProductIds:
                - 1f60b9de-c042-4841-bcab-b07000d2201f
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/rateGroups/getAll:
    post:
      tags:
        - Rate groups
      summary: Get all rate groups
      description: 'Returns all rate groups, filtered by unique identifiers and other filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: rateGroups_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateGroupFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","RateGroupIds":["6b3f718a-b537-45b0-a8ee-d30897723834"],"ServiceIds":["bd26d8db-86da-4f96-9efc-e5a4654a4a94"],"ExternalIdentifiers":["RG-001"],"UpdatedUtc":{"StartUtc":"2024-01-27T11:48:57Z","EndUtc":"2024-02-27T11:48:57Z"},"ActivityStates":["Active"],"EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":1000,"Cursor":"e7f26210-10e7-462e-9da8-ae8300be8ab7"}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateGroupResult'
              example: {"RateGroups":[{"Id":"6b3f718a-b537-45b0-a8ee-d30897723834","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","IsActive":true,"CreatedUtc":"2023-01-11T13:32:32Z","UpdatedUtc":"2023-01-13T15:27:28Z","Ordering":0,"Names":{"en-US":"Default group"},"ShortNames":{"en-US":"Default group"},"Descriptions":{"en-US":"Default group"},"ExternalIdentifier":"RG-001"}],"Cursor":"6b3f718a-b537-45b0-a8ee-d30897723834"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/rates/updateCapacityOffset:
    post:
      tags:
        - Rates
      summary: Update rate capacity offset pricing
      description: 'Updates capacity offset based pricing for specified rates. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: rates_updateCapacityOffset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleRateCapacityOffsetUpdateParameters'
            example: {"CapacityOffsetUpdates":[{"RateId":"ed4b660b-19d0-434b-9360-a4de2ea42eda","NegativeOccupancyAdjustment":{"Value":10.0},"ExtraOccupancyAdjustment":{"Value":20.0}},{"RateId":"b7e6a1c2-4f3a-4e2b-9c1d-2a5e7b8c9d0f","ExtraOccupancyAdjustment":{"Value":15.0}}]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/rates/getAll:
    post:
      tags:
        - Rates
      summary: Get all rates
      description: 'Returns all rates (pricing setups) of the default service provided by the enterprise. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: rates_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ServiceIds:
                - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              RateIds:
                - ed4b660b-19d0-434b-9360-a4de2ea42eda
              UpdatedUtc:
                StartUtc: '2022-10-15T00:00:00Z'
                EndUtc: '2022-10-20T00:00:00Z'
              ExternalIdentifiers:
                - Rate-001
                - Rate-002
              ActivityStates:
                - Active
              Extent:
                Rates: true
                RateGroups: true
                AvailabilityBlockAssignments: true
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateResult'
              example:
                Rates:
                  - BaseRateId: 
                    BusinessSegmentId: 
                    GroupId: c8b866b3-be2e-4a47-9486-034318e9f393
                    Id: ed4b660b-19d0-434b-9360-a4de2ea42eda
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    IsActive: true
                    IsEnabled: true
                    IsPublic: true
                    Name: Fully Flexible
                    ShortName: FF
                    ExternalNames:
                      en-US: Long Stay Flexible Rate
                    ExternalIdentifier: D001
                RateGroups:
                  - Id: c8b866b3-be2e-4a47-9486-034318e9f393
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    IsActive: true
                    Name: Default
                    ExternalIdentifier: RG001
                AvailabilityBlockAssignments:
                  - RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                    AvailabilityBlockId: 12806ae8-9c15-44c7-9a44-afae01289928
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/rates/add:
    post:
      tags:
        - Rates
      summary: Add rates
      description: 'Adds rates to the enterprise. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property). Rate type of `AvailabilityBlock` cannot be created via this operation.'
      operationId: rates_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              Rates:
                - ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  RateGroupId: b9f25a45-9b9a-4b33-99bd-b06f008eb6f5
                  IsEnabled: true
                  Type: Public
                  AccountingCategoryId: 3620c660-a4ec-4e0f-a0bc-b06f008eb8bf
                  Names:
                    EN: My rate
                  ExternalIdentifier: D001
                  PricingType: DependentRatePricing
                  Pricing:
                    DependentRatePricing:
                      BaseRateId: 1a1ddd3b-e106-4a70-aef1-54a75b483943
                      RelativeAdjustment: 0.15
                      AbsoluteAdjustment: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateAddResult'
              example:
                Rates:
                  - Id: ed4b660b-19d0-434b-9360-a4de2ea42eda
                    GroupId: b9f25a45-9b9a-4b33-99bd-b06f008eb6f5
                    BaseRateId: 1a1ddd3b-e106-4a70-aef1-54a75b483943
                    BusinessSegmentId: 
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    IsActive: true
                    IsEnabled: true
                    IsPublic: true
                    Type: Public
                    Name: My rate
                    ShortName: FF
                    ExternalNames:
                      en-US: Long Stay Flexible Rate
                    ExternalIdentifier: D001
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/rates/set:
    post:
      tags:
        - Rates
      summary: Set rates
      description: 'Adds new Rates or updates existing ones if they are matched by `Id` or `ExternalIdentifier` property. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: rates_set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateSetParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","Rates":[{"Id":"e1b0bf46-32a3-4f7c-99c1-1ff78447d55d","ServiceId":"956176af-e10b-4f3c-beb7-274801bce328","RateGroupId":"d7adfddc-c2dc-4798-ace2-28de7b25408f","IsEnabled":true,"Type":"Public","Names":{"en-US":"Base rate"},"Descriptions":{"en-US":"Base rate with all fields specified using GUID identifiers."},"PricingType":"BaseRatePricing","Pricing":{"BaseRatePricing":{"Amount":{"Currency":"EUR","NetValue":100.0}}}},{"ExternalIdentifier":"55698","ServiceId":"eid:Stay","RateGroupId":"eid:RG10","IsEnabled":false,"Type":"Private","Names":{"en-US":"Dependent rate"},"Descriptions":{"en-US":"Dependent rate with all field specified using eid identifiers."},"PricingType":"DependentRatePricing","Pricing":{"DependentRatePricing":{"BaseRateId":"00392166-3869-4174-b491-cf0162524a38","RelativeAdjustment":0.0,"AbsoluteAdjustment":0.0}}}],"EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateSetResult'
              example: {"Rates":[{"Id":"e1b0bf46-32a3-4f7c-99c1-1ff78447d55d","GroupId":"d7adfddc-c2dc-4798-ace2-28de7b25408f","ServiceId":"956176af-e10b-4f3c-beb7-274801bce328","BaseRateId":null,"IsBaseRate":true,"BusinessSegmentId":"dc9188f6-fb61-412c-b3fd-af32dab082ed","IsActive":true,"IsEnabled":true,"IsPublic":true,"IsDefault":false,"Type":"Public","Name":null,"Names":{"en-US":"Base rate"},"ShortName":"BR","UpdatedUtc":"2024-11-20T00:00:00Z","ExternalNames":{"en-US":"External base rate"},"Description":{"en-US":"Base rate description."},"ExternalIdentifier":null,"TaxExemptionReason":null,"TaxExemptionLegalReference":null},{"Id":"8eb1f163-bce7-49ca-a62c-c9261951c85f","GroupId":"d7adfddc-c2dc-4798-ace2-28de7b25408f","ServiceId":"956176af-e10b-4f3c-beb7-274801bce328","BaseRateId":"00392166-3869-4174-b491-cf0162524a38","IsBaseRate":false,"BusinessSegmentId":"dc9188f6-fb61-412c-b3fd-af32dab082ed","IsActive":true,"IsEnabled":false,"IsPublic":false,"IsDefault":false,"Type":"Private","Name":null,"Names":{"en-US":"Dependent rate"},"ShortName":"DR","UpdatedUtc":"2024-11-20T00:00:00Z","ExternalNames":{"en-US":"External dependent rate"},"Description":{"en-US":"Dependent rate description."},"ExternalIdentifier":"55698","TaxExemptionReason":null,"TaxExemptionLegalReference":null}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/rates/delete:
    post:
      tags:
        - Rates
      summary: Delete rates
      description: 'Deletes specified rates. This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: rates_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateDeleteParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","RateIds":["7e89ee8e-11a0-4d9d-8880-f8d8494824b5","eid:BasicRate"],"EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/rates/getPricing:
    post:
      tags:
        - Rates
      summary: Get rate pricing
      description: 'Returns prices for a given rate for a specified time interval. Prices will be returned for all service time units that the specified time interval intersects. So, for example, an interval `1st Jan 23:00 UTC - 1st Jan 23:00 UTC` will result in one price for `2nd Jan`, while Interval `1st Jan 23:00 UTC - 2nd Jan 23:00 UTC` will result in two prices for `2nd Jan` and `3rd Jan` (assuming a time unit period of "Day"). UTC timestamps must correspond to the start boundary of a time unit, e.g. 00:00 converted to UTC for a time unit of "Day". Other timestamps are not permitted. The __maximum size of time interval__ depends on the service''s time unit: 367 hours if hours, 367 days if days, or 60 months if months. For more information about time units, see [Time units](https://mews-systems.gitbook.io/connector-api/concepts/time-units).'
      operationId: rates_getPricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatePricingFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
              FirstTimeUnitStartUtc: '2022-01-01T23:00:00.000Z'
              LastTimeUnitStartUtc: '2022-01-03T23:00:00.000Z'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatePricing'
              example:
                Currency: EUR
                BaseAmountPrices:
                  - Currency: EUR
                    NetValue: 93.46
                    GrossValue: 100
                    TaxValues:
                      - Code: DE-2020-1-L
                        Value: 6.54
                    Breakdown:
                      Items:
                        - TaxRateCode: DE-2020-1-L
                          NetValue: 93.46
                          TaxValue: 6.54
                  - Currency: EUR
                    NetValue: 93.46
                    GrossValue: 100
                    TaxValues:
                      - Code: DE-2020-1-L
                        Value: 6.54
                    Breakdown:
                      Items:
                        - TaxRateCode: DE-2020-1-L
                          NetValue: 93.46
                          TaxValue: 6.54
                CategoryAdjustments:
                  - AbsoluteValue: 0
                    CategoryId: 34c29e73-c8db-4e93-b51b-981e42655e03
                    ParentCategoryId: 
                    RelativeValue: 0.2
                  - AbsoluteValue: 50
                    CategoryId: a0a7a5c5-c4ef-494a-8b34-6cca97629076
                    ParentCategoryId: 34c29e73-c8db-4e93-b51b-981e42655e03
                    RelativeValue: 0
                CategoryPrices:
                  - CategoryId: e3aa3117-dff0-46b7-b49a-2c0391e70ff9
                    AmountPrices:
                      - Currency: EUR
                        NetValue: 93.46
                        GrossValue: 100
                        TaxValues:
                          - Code: DE-2020-1-L
                            Value: 6.54
                        Breakdown:
                          Items:
                            - TaxRateCode: DE-2020-1-L
                              NetValue: 93.46
                              TaxValue: 6.54
                      - Currency: EUR
                        NetValue: 93.46
                        GrossValue: 100
                        TaxValues:
                          - Code: DE-2020-1-L
                            Value: 6.54
                        Breakdown:
                          Items:
                            - TaxRateCode: DE-2020-1-L
                              NetValue: 93.46
                              TaxValue: 6.54
                TimeUnitStartsUtc:
                  - '2022-01-01T23:00:00Z'
                  - '2022-01-02T23:00:00Z'
                  - '2022-01-03T23:00:00Z'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/rates/updatePrice:
    post:
      tags:
        - Rates
      summary: Update rate price
      description: "Updates the prices for a given rate. You can make multiple price updates with one API call, and for each one specify the time interval for which the update applies, the price value and the applicable [resource category](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category). The price will be updated for all service [time units](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit) that the specified time interval intersects. The price is per time unit, e.g. per day or per month. If the resource category `CategoryId` is not specified, the updated price will apply to the base price for all resource categories.\nNote that prices are defined daily, so when the server receives the UTC interval, it first converts it to the enterprise timezone and updates the price on all dates that the interval intersects. Only root rates can be updated (the rates that have no base rate, that have `BaseRateId` set to `null`). It is not permitted to update historical prices older than specified by `EditableHistoryInterval`. Future prices may be updated up to 5 years in the future. The __maximum size of time interval__ is 100 time units or 2 years, whichever is the shorter amount of time."
      operationId: rates_updatePrice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatePriceUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
              PriceUpdates:
                - FirstTimeUnitStartUtc: '2022-01-01T23:00:00.000Z'
                  LastTimeUnitStartUtc: '2022-01-03T23:00:00.000Z'
                  Value: 111
                - CategoryId: e3aa3117-dff0-46b7-b49a-2c0391e70ff9
                  FirstTimeUnitStartUtc: '2022-01-04T23:00:00.000Z'
                  LastTimeUnitStartUtc: '2022-01-05T23:00:00.000Z'
                  Value: 222
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservationGroups/getAll:
    post:
      tags:
        - Reservation groups
      summary: Get all reservation groups
      description: 'Returns all reservation groups, filtered by unique identifiers and other filters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: reservationGroups_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationGroupFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ReservationGroupIds:
                - fe795f96-0b64-445b-89ed-c032563f2bac
              UpdatedUtc:
                StartUtc: '2023-04-27T11:48:57Z'
                EndUtc: '2023-04-27T11:48:57Z'
              Limitation:
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
                Count: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationGroupResult'
              example:
                ReservationGroups:
                  - Id: 769fc613-838f-41a7-ac2a-aff100c3189f
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    Name: Mr and Mrs smith wedding
                    ChannelManager: '2023-04-27T11:48:57Z'
                    ChannelManagerGroupNumber: 152fg645-834f-63a7-he6a-vsy845c4753a
                Cursor: 723jd664-235f-36a4-tg6d-gfy850c645f
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/getChannelManagerDetails:
    post:
      tags:
        - Reservations
      summary: Get reservation channel manager details
      description: 'Returns channel manager-related details for the specified reservations. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: reservations_getChannelManagerDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationsChannelManagerDetailsFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ReservationIds":["9b59b50d-bd32-4ce5-add8-09ea0e1300e7"]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationsChannelManagerDetailsResult'
              example: {"ChannelManagerDetails":[{"ReservationId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","RequestedRateCode":"XyZ123AbC789","ChannelManagerName":"HotelConnect","ChannelNumber":"HC1234","ChannelManagerGroupNumber":"9E5F7BC3B6F0102","ChannelManagerNumber":"1","CreatedUtc":"2025-03-10T15:30:00Z"},{"ReservationId":"9b59b50d-bd32-4ce5-add8-09ea0e1300e7","RequestedRateCode":"LmN456OpQ012","ChannelManagerName":"GlobalRes","ChannelNumber":"GR5678","ChannelManagerGroupNumber":"461190401CD25FE","ChannelManagerNumber":"1","CreatedUtc":"2025-03-11T09:45:00Z"}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/reservations/getAll/2023-06-06:
    post:
      tags:
        - Reservations
      summary: Get all reservations (ver 2023-06-06)
      description: "Returns all reservations within scope of the Access Token, filtered according to the specified parameters. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).\n"
      operationId: reservations_getAll_2023-06-06
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationServiceOrderFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ReservationIds":["0f515589-99b4-423d-b83a-b237009f0509","9b59b50d-bd32-4ce5-add8-09ea0e1300e7"],"ServiceIds":["bd26d8db-86da-4f96-9efc-e5a4654a4a94","8c1bd738-a505-4b29-aa71-9ecc2982b843"],"ReservationGroupIds":["94843f6f-3be3-481b-a1c7-06458774c3df"],"AccountIds":["fadd5bb6-b428-45d5-94f8-fd0d89fece6d"],"PartnerCompanyIds":["c021013e-4930-4592-8e32-91b0b1fc9663"],"TravelAgencyIds":["a793d381-65a2-4fa6-9514-00c4c5bfe607"],"Numbers":["50","51","52","53"],"AssignedResourceIds":["5ee074b1-6c86-48e8-915f-c7aa4702086f","c32386aa-1cd2-414a-a823-489325842fbe"],"AvailabilityBlockIds":["5ee074b1-6c86-48e8-915f-c7aa4702086f","c32386aa-1cd2-414a-a823-489325842fbe"],"CreatedUtc":{"StartUtc":"2023-04-01T00:00:00Z","EndUtc":"2023-05-05T00:00:00Z"},"UpdatedUtc":{"StartUtc":"2023-04-01T00:00:00Z","EndUtc":"2023-05-05T00:00:00Z"},"CollidingUtc":{"StartUtc":"2023-04-01T00:00:00Z","EndUtc":"2023-05-05T00:00:00Z"},"ScheduledStartUtc":{"StartUtc":"2023-04-01T00:00:00Z","EndUtc":"2023-05-05T00:00:00Z"},"ScheduledEndUtc":{"StartUtc":"2023-04-01T00:00:00Z","EndUtc":"2023-05-05T00:00:00Z"},"States":["Inquired","Confirmed"],"EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":10}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationServiceOrderResult'
              example: {"Reservations":[{"Id":"0f515589-99b4-423d-b83a-b237009f0509","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","AccountId":"fadd5bb6-b428-45d5-94f8-fd0d89fece6d","AccountType":"Customer","CreatorProfileId":"3cd637ef-4728-47f9-8fb1-afb900c9cdcf","UpdaterProfileId":"3cd637ef-4728-47f9-8fb1-afb900c9cdcf","BookerId":"ebd507c5-6bfd-4ca9-96aa-ffed6fa94f72","Number":"52","State":"Confirmed","Origin":"Connector","CommanderOrigin":null,"OriginDetails":null,"CreatedUtc":"2023-03-23T16:00:00Z","UpdatedUtc":"2023-04-22T17:00:00Z","CancelledUtc":null,"VoucherId":null,"BusinessSegmentId":null,"Options":{"OwnerCheckedIn":true,"AllCompanionsCheckedIn":true,"AnyCompanionCheckedIn":true,"ConnectorCheckIn":true},"RateId":"ed4b660b-19d0-434b-9360-a4de2ea42eda","CreditCardId":null,"GroupId":"94843f6f-3be3-481b-a1c7-06458774c3df","RequestedResourceCategoryId":"773d5e42-de1e-43a0-9ce6-f940faf2303f","AssignedResourceId":"20e00c32-d561-4008-8609-82d8aa525714","AvailabilityBlockId":"5ee074b1-6c86-48e8-915f-c7aa4702086f","PartnerCompanyId":"c021013e-4930-4592-8e32-91b0b1fc9663","TravelAgencyId":"a793d381-65a2-4fa6-9514-00c4c5bfe607","AssignedResourceLocked":false,"ChannelNumber":"TW48ZP","ChannelManagerNumber":"","CancellationReason":null,"ReleasedUtc":null,"StartUtc":"2023-04-23T14:00:00Z","EndUtc":"2023-04-25T12:00:00Z","ScheduledStartUtc":"2023-04-23T14:00:00Z","ActualStartUtc":null,"ScheduledEndUtc":"2023-04-25T12:00:00Z","ActualEndUtc":null,"Purpose":"Leisure","QrCodeData":null,"PersonCounts":[{"AgeCategoryId":"1f67644f-052d-4863-acdf-ae1600c60ca0","Count":2},{"AgeCategoryId":"ab58c939-be30-4a60-8f75-ae1600c60c9f","Count":2}]}],"Cursor":"9b59b50d-bd32-4ce5-add8-09ea0e1300e7"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/getAll:
    post:
      tags:
        - Reservations
      summary: Get all reservations (ver 2017-04-12)
      description: 'Use [Get all reservations (ver 2023-06-06)](https://mews-systems.gitbook.io/connector-api/operations/reservations#get-all-reservations-ver-2023-06-06).'
      operationId: reservations_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              StartUtc: '2016-01-01T00:00:00Z'
              EndUtc: '2016-01-07T00:00:00Z'
              ServiceIds:
                - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              ReservationIds:
                - db6cad34-9a91-448b-bea1-abbe01240d9c
              CustomerIds:
                - 8e1d0ca6-1dde-4be0-8566-aafc01866110
              RateIds:
                - ed4b660b-19d0-434b-9360-a4de2ea42eda
              ChannelNumbers:
                - TW48ZP
              States:
                - Started
              Extent:
                Reservations: true
                ReservationGroups: true
                Customers: true
              Limitation:
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResult'
              example:
                BusinessSegments: 
                Customers:
                  - Address: 
                    BirthDate: 
                    BirthPlace: 
                    CategoryId: 
                    Classifications: [ ]
                    CreatedUtc: '2016-01-01T00:00:00Z'
                    Email: 
                    FirstName: John
                    Sex: 
                    Id: 35d4b117-4e60-44a3-9580-c582117eff98
                    IdentityCard: 
                    LanguageCode: 
                    LastName: Smith
                    LoyaltyCode: 
                    NationalityCode: US
                    Notes: ''
                    Number: '1'
                    Passport: 
                    Phone: '00420123456789'
                    SecondLastName: 
                    TaxIdentificationNumber: 
                    Title: 
                    UpdatedUtc: '2016-01-01T00:00:00Z'
                    Visa: 
                OrderItems: 
                Products: 
                RateGroups: 
                Rates: 
                ReservationGroups:
                  - Id: c704dff3-7811-4af7-a3a0-7b2b0635ac59
                    Name: 13-12-Smith-F712
                Reservations:
                  - Id: bfee2c44-1f84-4326-a862-5289598f6e2d
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    GroupId: 94843f6f-3be3-481b-a1c7-06458774c3df
                    Number: '52'
                    ChannelNumber: TW48ZP
                    ChannelManager: ''
                    ChannelManagerGroupNumber: 
                    ChannelManagerNumber: 
                    State: Processed
                    Origin: Connector
                    OriginDetail: 
                    Purpose: Student
                    CreatedUtc: '2016-02-20T14:58:02Z'
                    UpdatedUtc: '2016-02-20T14:58:02Z'
                    CancelledUtc: 
                    StartUtc: '2016-02-20T13:00:00Z'
                    EndUtc: '2016-02-22T11:00:00Z'
                    ReleasedUtc: 
                    RequestedCategoryId: 773d5e42-de1e-43a0-9ce6-f940faf2303f
                    AssignedResourceId: 20e00c32-d561-4008-8609-82d8aa525714
                    AssignedResourceLocked: false
                    BusinessSegmentId: 
                    CompanyId: 
                    TravelAgencyId: 
                    AvailabilityBlockId: 
                    RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                    VoucherId: 
                    CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
                    PersonCounts:
                      - AgeCategoryId: 1f67644f-052d-4863-acdf-ae1600c60ca0
                        Count: 2
                      - AgeCategoryId: ab58c939-be30-4a60-8f75-ae1600c60c9f
                        Count: 2
                Services: 
                Resources: 
                ResourceCategories: 
                ResourceCategoryAssignments: 
                Notes: 
                Cursor: 8d02142f-31cf-4115-90bf-ae5200c7a1ba
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      deprecated: true
      x-deprecatedMessage: 'Use [Get all reservations (ver 2023-06-06)](https://mews-systems.gitbook.io/connector-api/operations/reservations#get-all-reservations-ver-2023-06-06).'
  /api/connector/v1/reservations/price:
    post:
      tags:
        - Reservations
      summary: Price reservations
      description: "Returns prices of reservations with the specified parameters.\r\nNote that the operation doesn't check the maximum capacity of requested resource category. Requesting person counts above the capacity will return prices for the maximum available capacity.\r\n\r\nThis operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/)."
      operationId: reservations_price
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationDataParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
              Reservations:
                - Identifier: '1234'
                  StartUtc: '2018-01-01T14:00:00Z'
                  EndUtc: '2018-01-02T10:00:00Z'
                  RequestedCategoryId: 0a5da171-3663-4496-a61e-35ecbd78b9b1
                  RateId: 33667cab-f17f-4089-ad07-c2cd50fa0df1
                  Notes: Test reservation
                  ProductOrders:
                    - ProductId: 3dc5d79b-67ce-48ed-9238-47fcf5d1a59f
                  PersonCounts:
                    - AgeCategoryId: 1f67644f-052d-4863-acdf-ae1600c60ca0
                      Count: 2
                    - AgeCategoryId: ab58c939-be30-4a60-8f75-ae1600c60c9f
                      Count: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationPricingResult'
              example:
                ReservationPrices:
                  - Identifier: '1234'
                    Total:
                      Currency: GBP
                      NetValue: 20
                      GrossValue: 23
                      TaxValues:
                        - Code: UK-S
                          Value: 3
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/add:
    post:
      tags:
        - Reservations
      summary: Add reservations
      description: 'Adds the specified reservations as a single group. If `GroupId` is specified, adds the reservations to an already existing group. Note that all reservations linked to an availability block must belong to the same reservation group.'
      operationId: reservations_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationAdditionParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
              GroupId: 
              GroupName: 
              SendConfirmationEmail: true
              Reservations:
                - Identifier: '1234'
                  State: Confirmed
                  StartUtc: '2021-01-01T14:00:00Z'
                  EndUtc: '2021-01-03T10:00:00Z'
                  ReleasedUtc: 
                  CustomerId: e465c031-fd99-4546-8c70-abcf0029c249
                  BookerId: e465c031-fd99-4546-8c70-abcf0029c249
                  RequestedCategoryId: 0a5da171-3663-4496-a61e-35ecbd78b9b1
                  RateId: a39a59fa-3a08-4822-bdd4-ab0b00e3d21f
                  TravelAgencyId: 
                  CompanyId: 
                  Notes: Test reservation
                  TimeUnitAmount: 
                  PersonCounts:
                    - AgeCategoryId: 1f67644f-052d-4863-acdf-ae1600c60ca0
                      Count: 2
                    - AgeCategoryId: ab58c939-be30-4a60-8f75-ae1600c60c9f
                      Count: 2
                  TimeUnitPrices:
                    - Index: 0
                      Amount:
                        Currency: GBP
                        GrossValue: 20
                        TaxCodes:
                          - UK-S
                    - Index: 1
                      Amount:
                        Currency: GBP
                        GrossValue: 30
                        TaxCodes:
                          - UK-S
                  ProductOrders:
                    - ProductId: 2e9eb3fc-8a77-466a-9cd9-abcf002a2a01
                      StartUtc: '2021-01-02T00:00:00Z'
                      EndUtc: '2021-01-03T00:00:00Z'
                  AvailabilityBlockId: 
                  VoucherCode: SpringSale2021
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationAdditionResult'
              example:
                Reservations:
                  - Identifier: '1234'
                    Reservation:
                      Id: bfee2c44-1f84-4326-a862-5289598f6e2d
                      ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                      GroupId: 94843f6f-3be3-481b-a1c7-06458774c3df
                      Number: '52'
                      ChannelManager: ''
                      ChannelManagerGroupNumber: 
                      ChannelManagerNumber: 
                      ChannelNumber: 
                      State: Processed
                      Origin: Connector
                      CreatedUtc: '2016-02-20T14:58:02Z'
                      UpdatedUtc: '2016-02-20T14:58:02Z'
                      CancelledUtc: 
                      StartUtc: '2016-02-20T13:00:00Z'
                      EndUtc: '2016-02-22T11:00:00Z'
                      ReleasedUtc: 
                      RequestedCategoryId: 773d5e42-de1e-43a0-9ce6-f940faf2303f
                      AssignedResourceId: 20e00c32-d561-4008-8609-82d8aa525714
                      AssignedResourceLocked: false
                      BusinessSegmentId: 
                      CompanyId: 
                      TravelAgencyId: 
                      AvailabilityBlockId: 
                      RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                      VoucherId: 
                      CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
                      CompanionIds:
                        - b22bf671-ccdf-40aa-a7e6-b20a4f91d79a
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/update:
    post:
      tags:
        - Reservations
      summary: Update reservations
      description: 'Updates information about the specified reservations. Note that if any of the fields are sent as `null`, it won''t clear the field in Mews. If the `Value` within the object is sent as `null`, the field will be cleared in Mews. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: reservations_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleReservationUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              Client: Sample Client 1.0.0
              Reason: Testing
              CheckOverbooking: true
              CheckRateApplicability: true
              Reprice: true
              ApplyCancellationFee: true
              ReservationUpdates:
                - ReservationId: 622605a9-2969-441f-9610-aa720099ae1c
                  StartUtc:
                    Value: '2019-10-01T14:00:00Z'
                  EndUtc:
                    Value: '2019-10-03T10:00:00Z'
                  AssignedResourceId:
                    Value: 16ce4335-2198-408b-8949-9722894a42fb
                  AssignedResourceLocked:
                    Value: 'false'
                  ChannelNumber: 
                  RequestedCategoryId: 
                  TravelAgencyId:
                    Value: 
                  CompanyId:
                    Value: 73ba34d1-f375-460c-bf2d-8a63e71677a6
                  BusinessSegmentId: 
                  Purpose:
                    Value: Business
                  RateId: 
                  BookerId:
                    Value: 92923102-bf91-4a4a-8ee8-9dcb79c9d6de
                  TimeUnitPrices:
                    Value:
                      - Index: 0
                        Amount:
                          Currency: GBP
                          GrossValue: 20
                          TaxCodes:
                            - UK-S
                      - Index: 1
                        Amount:
                          Currency: GBP
                          GrossValue: 30
                          TaxCodes:
                            - UK-S
                  PersonCounts:
                    Value:
                      - AgeCategoryId: ab58c939-be30-4a60-8f75-ae1600c60c9f
                        Count: 2
                      - AgeCategoryId: 1f67644f-052d-4863-acdf-ae1600c60ca0
                        Count: 2
                  CreditCardId:
                    Value: 5d802a8f-3238-42b2-94be-ab0300ab2b6c
                  AvailabilityBlockId:
                    Value: aaaa654a4a94-4f96-9efc-86da-bd26d8db
                  Options:
                    OwnerCheckedIn:
                      Value: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResult'
              example:
                BusinessSegments: 
                Customers:
                  - Address: 
                    BirthDate: 
                    BirthPlace: 
                    CategoryId: 
                    Classifications: [ ]
                    CreatedUtc: '2016-01-01T00:00:00Z'
                    Email: 
                    FirstName: John
                    Sex: 
                    Id: 35d4b117-4e60-44a3-9580-c582117eff98
                    IdentityCard: 
                    LanguageCode: 
                    LastName: Smith
                    LoyaltyCode: 
                    NationalityCode: US
                    Notes: ''
                    Number: '1'
                    Passport: 
                    Phone: '00420123456789'
                    SecondLastName: 
                    TaxIdentificationNumber: 
                    Title: 
                    UpdatedUtc: '2016-01-01T00:00:00Z'
                    Visa: 
                OrderItems: 
                Products: 
                RateGroups: 
                Rates: 
                ReservationGroups:
                  - Id: c704dff3-7811-4af7-a3a0-7b2b0635ac59
                    Name: 13-12-Smith-F712
                Reservations:
                  - Id: bfee2c44-1f84-4326-a862-5289598f6e2d
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    GroupId: 94843f6f-3be3-481b-a1c7-06458774c3df
                    Number: '52'
                    ChannelNumber: TW48ZP
                    ChannelManager: ''
                    ChannelManagerGroupNumber: 
                    ChannelManagerNumber: 
                    State: Processed
                    Origin: Connector
                    OriginDetail: 
                    Purpose: Student
                    CreatedUtc: '2016-02-20T14:58:02Z'
                    UpdatedUtc: '2016-02-20T14:58:02Z'
                    CancelledUtc: 
                    StartUtc: '2016-02-20T13:00:00Z'
                    EndUtc: '2016-02-22T11:00:00Z'
                    ReleasedUtc: 
                    RequestedCategoryId: 773d5e42-de1e-43a0-9ce6-f940faf2303f
                    AssignedResourceId: 20e00c32-d561-4008-8609-82d8aa525714
                    AssignedResourceLocked: false
                    BusinessSegmentId: 
                    CompanyId: 
                    TravelAgencyId: 
                    AvailabilityBlockId: 
                    RateId: ed4b660b-19d0-434b-9360-a4de2ea42eda
                    VoucherId: 
                    CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
                    PersonCounts:
                      - AgeCategoryId: 1f67644f-052d-4863-acdf-ae1600c60ca0
                        Count: 2
                      - AgeCategoryId: ab58c939-be30-4a60-8f75-ae1600c60c9f
                        Count: 2
                Services: 
                Resources: 
                ResourceCategories: 
                ResourceCategoryAssignments: 
                Notes: 
                Cursor: 8d02142f-31cf-4115-90bf-ae5200c7a1ba
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/confirm:
    post:
      tags:
        - Reservations
      summary: Confirm reservation
      description: 'Marks all specified reservations as `Confirmed`. Succeeds only if all confirmation conditions are met (the reservations have the `Optional` state). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: reservations_confirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmReservationParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ReservationIds:
                - 9af9d8b0-43ae-414d-80a8-abc1012a2a59
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleReservationResult'
              example:
                ReservationIds:
                  - 5ca70705-cbb7-48c4-8cc4-abb900aa278c
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/start:
    post:
      tags:
        - Reservations
      summary: Start reservation
      description: 'Marks a reservation as `Started` (= checked in). Succeeds only if all starting conditions are met (the reservation has the `Confirmed` state, does not have start set to future, has an inspected room assigned etc). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: reservations_start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationStartParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              ReservationId: e6ea708c-2a2a-412f-a152-b6c76ffad49b
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/process:
    post:
      tags:
        - Reservations
      summary: Process reservation
      description: "Marks a reservation as `Processed` (= checked out). Succeeds only if all processing conditions are met (the reservation has the `Started` state, balance of all reservation members is zero etc). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).\n### Conditions\n- Reservation has already been checked in.\n- Reservation isn't alredy in `Processed` state.\n- Reservation can't be checked out sooner than last day of planned stay.\n- The companion profiles of reservation are complete (details can be found in error message).\n- If `AllowOpenBalance` set to `false`, all bills have to be closable (items on bills are either paid by current customer, or set to be paid by other customer). With `CloseBills` option set to `true` they can be automatically closed, when set to `false` they must be closed manually.\n- If `AllowOpenBalance` set to `true`, `Notes` must be filled in."
      operationId: reservations_process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationProcessingParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              ReservationId: e6ea708c-2a2a-412f-a152-b6c76ffad49b
              CloseBills: false
              AllowOpenBalance: false
              Notes: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/cancel:
    post:
      tags:
        - Reservations
      summary: Cancel reservation
      description: 'Cancels all reservation with specified identifiers. Succeeds only if the reservations are cancellable. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: reservations_cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationCancellationParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              ReservationIds:
                - 5ca70705-cbb7-48c4-8cc4-abb900aa278c
              PostCancellationFee: true
              Notes: Cancellation through Connector API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleReservationResult'
              example:
                ReservationIds:
                  - 5ca70705-cbb7-48c4-8cc4-abb900aa278c
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/updateCustomer:
    post:
      tags:
        - Reservations
      summary: Update reservation customer
      description: 'Updates customer of a reservation. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: reservations_updateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationsUpdateCustomerParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              ReservationId: 209d984d-4985-4efb-96ec-f6591fc597bf
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/updateInterval:
    post:
      tags:
        - Reservations
      summary: Update reservation interval
      description: 'Updates reservation interval (start, end or both). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: reservations_updateInterval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationUpdateIntervalParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              ReservationId: 209d984d-4985-4efb-96ec-f6591fc597bf
              StartUtc: '2017-08-12T15:00:00Z'
              EndUtc: '2017-08-15T12:00:00Z'
              ChargeCancellationFee: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/addCompanion:
    post:
      tags:
        - Reservations
      summary: Add reservation companion
      description: 'Adds a customer as a companion to the reservation. Succeeds only if there is space for the new companion (count of current companions is less than `AdultCount + ChildCount`). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: reservations_addCompanion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanionshipAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ReservationId: e6ea708c-2a2a-412f-a152-b6c76ffad49b
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanionshipAddResult'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/deleteCompanion:
    post:
      tags:
        - Reservations
      summary: Delete reservation companion
      description: 'Removes customer companionship from the reservation. Note that the customer profile stays untouched, only the relation between the customer and reservation is deleted. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: reservations_deleteCompanion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanionshipDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ReservationId: e6ea708c-2a2a-412f-a152-b6c76ffad49b
              CustomerId: 35d4b117-4e60-44a3-9580-c582117eff98
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/addProduct:
    post:
      tags:
        - Reservations
      summary: Add reservation product
      description: Adds a new product order of the specified product to the reservation.
      operationId: reservations_addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationProductParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ReservationId: 4d2aa234-5d30-472c-899f-ab45008c3479
              ProductId: 47312820-2268-4f5c-864d-aa4100ed82bc
              Count: 1
              StartUtc: '2021-01-02T00:00:00Z'
              EndUtc: '2021-01-03T00:00:00Z'
              UnitAmount:
                Currency: GBP
                GrossValue: 10
                TaxCodes:
                  - UK-S
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddProductItemsResult'
              example:
                ItemIds:
                  - ff81fd7a-29ba-4160-8e22-ab4300f67b23
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/reservations/getAllItems:
    post:
      tags:
        - Reservations
      summary: Get all reservation items
      description: Use orderItems/getAll.
      operationId: reservations_getAllItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationItemParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ReservationIds:
                - e6ea708c-2a2a-412f-a152-b6c76ffad49b
              Currency: EUR
              AccountingStates:
                - Closed
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationItemResult'
              example:
                Reservations:
                  - ReservationId: e6ea708c-2a2a-412f-a152-b6c76ffad49b
                    OrderItems:
                      - Id: 784a29df-6196-4402-96a0-58695a881239
                        AccountId: d73a087a-00c7-40cf-9372-314d0296334d
                        OrderId: e6ea708c-2a2a-412f-a152-b6c76ffad49b
                        BillId: 7fdc2957-bc08-44d3-ba2a-1c1760a84894
                        AccountingCategoryId: 0cf7aa90-736f-43e9-a7dc-787704548d86
                        Amount:
                          Currency: EUR
                          NetValue: 19.38
                          GrossValue: 23.26
                          TaxValues:
                            - Code: UK-S
                              Value: 3.88
                          Breakdown:
                            Items:
                              - TaxRateCode: UK-S
                                NetValue: 19.38
                                TaxValue: 3.88
                        RevenueType: Service
                        ConsumedUtc: '2016-03-10T13:00:00Z'
                        ClosedUtc: '2016-04-06T06:41:44Z'
                        AccountingState: Closed
                        Data:
                          Discriminator: ProductOrder
                          Value:
                            ProductId: a3f4e006-b3e4-4485-8a00-ad11015ac494
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      deprecated: true
      x-deprecatedMessage: Use orderItems/getAll.
  /api/connector/v1/resourceAccessTokens/getAll:
    post:
      tags:
        - Resource access tokens
      summary: Get all resource access tokens
      description: "Returns all resource access tokens based on resource access token identifiers, reservations or interval. One of them must be specified in the request. \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: resourceAccessTokens_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAccessTokenFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ResourceAccessTokenIds:
                - 90eff5aa-36b4-4689-80c0-ab3a00bb412e
              ServiceOrderIds:
                - 65eff5aa-36b4-4689-80c0-ab3a00bb412e
              CollidingUtc:
                StartUtc: '2020-02-15T00:00:00Z'
                EndUtc: '2020-02-20T00:00:00Z'
              UpdatedUtc:
                StartUtc: '2020-01-05T00:00:00Z'
                EndUtc: '2020-01-10T00:00:00Z'
              ActivityStates:
                - Active
              Limitation:
                Cursor: e7f26210-10e7-462e-9da8-ae8300be8ab7
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAccessTokenResult'
              example:
                ResourceAccessTokens:
                  - Id: 72d4b117-1f84-44a3-1f84-8b2c0635ac60
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    ServiceOrderId: 35d4b117-4e60-44a3-9580-c582117eff98
                    CompanionshipId: 25d4b117-4e60-44a3-9580-c582117eff98
                    ResourceId: 65d4b117-4e60-44a3-9580-c582117eff98
                    Type: PinCode
                    Value: 1234#
                    SerialNumber: 
                    ValidityStartUtc: '2020-10-09T22:00:00Z'
                    ValidityEndUtc: '2020-10-10T22:00:00Z'
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    IsActive: true
                    Permissions:
                      Bed: true
                      Room: false
                      Floor: false
                      Building: false
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resourceAccessTokens/add:
    post:
      tags:
        - Resource access tokens
      summary: Add resource access tokens
      description: Adds new resource access tokens with the specified data.
      operationId: resourceAccessTokens_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleResourceAccessTokenParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ResourceAccessTokenParameters:
                - ServiceOrderId: 35d4b117-4e60-44a3-9580-c582117eff98
                  CompanionshipId: 25d4b117-4e60-44a3-9580-c582117eff98
                  ResourceId: 65d4b117-4e60-44a3-9580-c582117eff98
                  Type: PinCode
                  Value: 1234#
                  SerialNumber: 
                  ValidityStartUtc: '2020-10-09T22:00:00Z'
                  ValidityEndUtc: '2020-10-10T22:00:00Z'
                  Permissions:
                    Bed:
                      Value: true
                    Room:
                      Value: false
                    Floor:
                      Value: false
                    Building:
                      Value: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAccessTokenResult'
              example:
                ResourceAccessTokens:
                  - Id: 72d4b117-1f84-44a3-1f84-8b2c0635ac60
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    ServiceOrderId: 35d4b117-4e60-44a3-9580-c582117eff98
                    CompanionshipId: 25d4b117-4e60-44a3-9580-c582117eff98
                    ResourceId: 65d4b117-4e60-44a3-9580-c582117eff98
                    Type: PinCode
                    Value: 1234#
                    SerialNumber: 
                    ValidityStartUtc: '2020-10-09T22:00:00Z'
                    ValidityEndUtc: '2020-10-10T22:00:00Z'
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    IsActive: true
                    Permissions:
                      Bed: true
                      Room: false
                      Floor: false
                      Building: false
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resourceAccessTokens/update:
    post:
      tags:
        - Resource access tokens
      summary: Update resource access tokens
      description: 'Updates the [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token) validity interval and [permissions](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token-permission-parameter) that it grants.'
      operationId: resourceAccessTokens_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleResourceAccessTokenUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ResourceAccessTokenUpdates:
                - ResourceAccessTokenId: 35d4b117-4e60-44a3-9580-c582117eff98
                  ValidityStartUtc:
                    Value: '2020-10-09T22:00:00Z'
                  ValidityEndUtc:
                    Value: '2020-10-10T22:00:00Z'
                  Permissions:
                    Bed:
                      Value: true
                    Room:
                      Value: false
                    Floor:
                      Value: false
                    Building:
                      Value: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAccessTokenResult'
              example:
                ResourceAccessTokens:
                  - Id: 72d4b117-1f84-44a3-1f84-8b2c0635ac60
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    ServiceOrderId: 35d4b117-4e60-44a3-9580-c582117eff98
                    CompanionshipId: 25d4b117-4e60-44a3-9580-c582117eff98
                    ResourceId: 65d4b117-4e60-44a3-9580-c582117eff98
                    Type: PinCode
                    Value: 1234#
                    SerialNumber: 
                    ValidityStartUtc: '2020-10-09T22:00:00Z'
                    ValidityEndUtc: '2020-10-10T22:00:00Z'
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    IsActive: true
                    Permissions:
                      Bed: true
                      Room: false
                      Floor: false
                      Building: false
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resourceAccessTokens/delete:
    post:
      tags:
        - Resource access tokens
      summary: Delete resource access tokens
      description: Delete specified resource access tokens.
      operationId: resourceAccessTokens_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAccessTokenDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              Ids:
                - 35d4b117-4e60-44a3-9580-c582117eff98
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resourceBlocks/getAll:
    post:
      tags:
        - Resource blocks
      summary: Get all resource blocks
      description: "Returns all resource blocks (out of order blocks or internal use blocks). \nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: resourceBlocks_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBlockParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ResourceBlockIds:
                - c478f1b3-7edb-4ccc-8f07-dd32fae1ca70
              AssignedResourceIds:
                - b64f088d-49b5-4d5f-9766-2e27c4b75e27
              CollidingUtc:
                StartUtc: '2020-01-25T00:00:00Z'
                EndUtc: '2020-01-30T00:00:00Z'
              CreatedUtc:
                StartUtc: '2020-01-05T00:00:00Z'
                EndUtc: '2020-01-10T00:00:00Z'
              UpdatedUtc:
                StartUtc: '2020-01-15T00:00:00Z'
                EndUtc: '2020-01-20T00:00:00Z'
              Extent:
                Inactive: true
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBlockResult'
              example:
                ResourceBlocks:
                  - Id: 0913bd1d-69fc-4bcb-82d3-5a40520c8fb0
                    AssignedResourceId: 0d71d44e-3d85-4506-9b6f-aab500b69c52
                    Name: Resource block 1
                    StartUtc: '2019-10-15T10:00:00Z'
                    EndUtc: '2019-10-20T10:00:00Z'
                    Type: OutOfOrder
                    CreatedUtc: '2016-06-01T15:14:06Z'
                    UpdatedUtc: '2016-06-01T15:14:06Z'
                  - Id: 4d98ad40-a726-409e-8bf3-2c12ff3c0331
                    AssignedResourceId: f7c4b4f5-ac83-4977-a41a-63d27cc6e3e9
                    Name: Resource block 2
                    StartUtc: '2019-10-15T10:00:00Z'
                    EndUtc: '2019-10-20T10:00:00Z'
                    Type: InternalUse
                    CreatedUtc: '2016-06-01T15:14:06Z'
                    UpdatedUtc: '2016-06-01T15:14:06Z'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resourceBlocks/add:
    post:
      tags:
        - Resource blocks
      summary: Add resource block
      description: Adds a new resource block to the specified resource for a defined period of time.
      operationId: resourceBlocks_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleResourceBlockAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ResourceBlocks:
                - ResourceId: 0d71d44e-3d85-4506-9b6f-aab500b69c52
                  Name: Resource block 1
                  StartUtc: '2019-10-15T10:00:00Z'
                  EndUtc: '2019-10-20T10:00:00Z'
                  Type: OutOfOrder
                  Notes: Note
                - ResourceId: f7c4b4f5-ac83-4977-a41a-63d27cc6e3e9
                  Name: Resource block 2
                  StartUtc: '2019-10-15T10:00:00Z'
                  EndUtc: '2019-10-20T10:00:00Z'
                  Type: InternalUse
                  Notes: Note
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBlockResult'
              example:
                ResourceBlocks:
                  - Id: 0913bd1d-69fc-4bcb-82d3-5a40520c8fb0
                    AssignedResourceId: 0d71d44e-3d85-4506-9b6f-aab500b69c52
                    Name: Resource block 1
                    StartUtc: '2019-10-15T10:00:00Z'
                    EndUtc: '2019-10-20T10:00:00Z'
                    Type: OutOfOrder
                    CreatedUtc: '2016-06-01T15:14:06Z'
                    UpdatedUtc: '2016-06-01T15:14:06Z'
                  - Id: 4d98ad40-a726-409e-8bf3-2c12ff3c0331
                    AssignedResourceId: f7c4b4f5-ac83-4977-a41a-63d27cc6e3e9
                    Name: Resource block 2
                    StartUtc: '2019-10-15T10:00:00Z'
                    EndUtc: '2019-10-20T10:00:00Z'
                    Type: InternalUse
                    CreatedUtc: '2016-06-01T15:14:06Z'
                    UpdatedUtc: '2016-06-01T15:14:06Z'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resourceBlocks/delete:
    post:
      tags:
        - Resource blocks
      summary: Delete resource blocks
      description: Removes specified resource blocks from the resources.
      operationId: resourceBlocks_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBlockDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ResourceBlockIds:
                - bf1e10b7-8a03-4675-9e27-05fc84312a58
                - e8fb6bfb-d64a-4e7c-acfe-ab0400d01183
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resourceCategories/getAll:
    post:
      tags:
        - Resource categories
      summary: Get all resource categories
      description: 'Returns all categories of resources. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).'
      operationId: resourceCategories_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCategoryFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ResourceCategoryIds:
                - 5c0804f9-d03a-4b13-a57d-b00300781a41
                - 47d6b462-35ec-467e-a565-b00300781a41
              ServiceIds:
                - 9b3a6c54-63aa-4383-b50e-b0030078184b
                - c0f71466-6c0b-4993-88ac-1794f6b7e958
              UpdatedUtc:
                StartUtc: '2023-05-05T00:00:00Z'
                EndUtc: '2023-05-10T00:00:00Z'
              ActivityStates:
                - Active
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCategoryResult'
              example:
                ResourceCategories:
                  - Id: 5c0804f9-d03a-4b13-a57d-b00300781a41
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    ServiceId: 9b3a6c54-63aa-4383-b50e-b0030078184b
                    IsActive: true
                    Type: Bed
                    Names:
                      en-US: Bed 1
                    ShortNames:
                      en-US: Bed 1
                    Descriptions: { }
                    Ordering: 2
                    Capacity: 1
                    ExtraCapacity: 0
                    ExternalIdentifier: 
                  - Id: 47d6b462-35ec-467e-a565-b00300781a41
                    EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                    ServiceId: c0f71466-6c0b-4993-88ac-1794f6b7e958
                    IsActive: true
                    Type: Dorm
                    Names:
                      en-US: Dorm 1
                    ShortNames:
                      en-US: Dorm 1
                    Descriptions: { }
                    Ordering: 1
                    Capacity: 4
                    ExtraCapacity: 0
                    ExternalIdentifier: 
                Cursor: 47d6b462-35ec-467e-a565-b00300781a41
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resourceCategoryAssignments/getAll:
    post:
      tags:
        - Resource categories
      summary: Get all resource category assignments
      description: 'Returns all resource category assignments. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).'
      operationId: resourceCategoryAssignments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCategoryAssignmentFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ResourceCategoryAssignmentIds":["fb69fc51-c4e9-4ef6-874a-24bcfe74a894","28704948-77df-4bb4-8f39-f8380dc8a914"],"ResourceCategoryIds":["5c0804f9-d03a-4b13-a57d-b00300781a41","47d6b462-35ec-467e-a565-b00300781a41"],"UpdatedUtc":{"StartUtc":"2023-11-01T00:00:00Z","EndUtc":"2023-11-30T00:00:00Z"},"ActivityStates":["Active"],"ResourceIds":["5ee074b1-6c86-48e8-915f-c7aa4702086f","c32386aa-1cd2-414a-a823-489325842fbe"],"EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":10,"Cursor":"e7f26210-10e7-462e-9da8-ae8300be8ab7"}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCategoryAssignmentResult'
              example:
                ResourceCategoryAssignments:
                  - Id: fb69fc51-c4e9-4ef6-874a-24bcfe74a894
                    ResourceId: e5a34a69-d35e-4e85-a645-a9bc4ee3a80f
                    CategoryId: 5c0804f9-d03a-4b13-a57d-b00300781a41
                    IsActive: true
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                  - Id: 28704948-77df-4bb4-8f39-f8380dc8a914
                    ResourceId: 90908a65-35fc-4856-b659-106f60b591e5
                    CategoryId: 47d6b462-35ec-467e-a565-b00300781a41
                    IsActive: true
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                Cursor: 28704948-77df-4bb4-8f39-f8380dc8a914
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resourceCategoryImageAssignments/getAll:
    post:
      tags:
        - Resource categories
      summary: Get all resource category image assignments
      description: 'Returns all resource category image assignments. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).'
      operationId: resourceCategoryImageAssignments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCategoryImageAssignmentFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ResourceCategoryIds:
                - 5c0804f9-d03a-4b13-a57d-b00300781a41
                - 47d6b462-35ec-467e-a565-b00300781a41
              ResourceCategoryImageAssignmentIds:
                - edb5f556-7afb-4650-8d4e-8c0a6fff784d
                - 9d18f5fb-cce5-4e70-9561-f7804262344b
              UpdatedUtc:
                StartUtc: '2023-11-01T00:00:00Z'
                EndUtc: '2023-11-30T00:00:00Z'
              ActivityStates:
                - Active
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCategoryImageAssignmentResult'
              example:
                ResourceCategoryImageAssignments:
                  - Id: edb5f556-7afb-4650-8d4e-8c0a6fff784d
                    CategoryId: 5c0804f9-d03a-4b13-a57d-b00300781a41
                    ImageId: e910d008-fded-4af5-a84f-c00f92e3947d
                    IsActive: true
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                  - Id: 9d18f5fb-cce5-4e70-9561-f7804262344b
                    CategoryId: 47d6b462-35ec-467e-a565-b00300781a41
                    ImageId: 11056cdb-2045-49e0-821f-2b93905ff522
                    IsActive: true
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                Cursor: 28704948-77df-4bb4-8f39-f8380dc8a914
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resourceFeatureAssignments/getAll:
    post:
      tags:
        - Resource features
      summary: Get all resource feature assignments
      description: 'Returns all resource feature assignments. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).'
      operationId: resourceFeatureAssignments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceFeatureAssignmentFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ResourceFeatureIds:
                - a693dd8c-21fe-4dae-b450-ea3bd9ab3bb0
              ResourceFeatureAssignmentIds:
                - ca2b5bf9-24f5-4faa-95ef-b65d38598b08
              UpdatedUtc:
                StartUtc: '2023-11-01T00:00:00Z'
                EndUtc: '2023-11-30T00:00:00Z'
              ActivityStates:
                - Active
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceFeatureAssignmentResult'
              example:
                ResourceFeatureAssignments:
                  - Id: ca2b5bf9-24f5-4faa-95ef-b65d38598b08
                    IsActive: true
                    ResourceId: 18019693-c66f-4be8-a893-c3d89fd291cc
                    FeatureId: a693dd8c-21fe-4dae-b450-ea3bd9ab3bb0
                    CreatedUtc: '2023-11-03T00:00:00Z'
                    UpdatedUtc: '2023-11-21T00:00:00Z'
                Cursor: 3d5201ad-4a7b-4cbe-9c22-03dd79c28443
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resourceFeatures/getAll:
    post:
      tags:
        - Resource features
      summary: Get all resource features
      description: 'Returns all resource features. This operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).'
      operationId: resourceFeatures_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceFeatureFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ServiceIds:
                - 24e2ead5-65a8-4ed9-8286-abdb00f08a1f
              ResourceFeatureIds:
                - 3d5201ad-4a7b-4cbe-9c22-03dd79c28443
              UpdatedUtc:
                StartUtc: '2023-11-01T00:00:00Z'
                EndUtc: '2023-11-30T00:00:00Z'
              ActivityStates:
                - Active
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceFeatureResult'
              example:
                ResourceFeatures:
                  - Id: 3d5201ad-4a7b-4cbe-9c22-03dd79c28443
                    ServiceId: 24e2ead5-65a8-4ed9-8286-abdb00f08a1f
                    IsActive: true
                    Classification: AccessibleBathroom
                    Names:
                      en-US: Accessible Bathroom
                    ShortNames:
                      en-US: AccessBath
                    Descriptions: { }
                Cursor: 3d5201ad-4a7b-4cbe-9c22-03dd79c28443
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resources/getAll:
    post:
      tags:
        - Resources
      summary: Get all resources
      description: "Returns all resources of an enterprise associated with the connector integration. Note that when any of the extents is set to `true`, the response contains the entities that are associated to a resource. If the extent is not associated to a resource (e.g. resource category not assigned to any resource), this information is not returned.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: resources_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ResourceIds:
                - 5ee074b1-6c86-48e8-915f-c7aa4702086f
                - c32386aa-1cd2-414a-a823-489325842fbe
              CreatedUtc:
                StartUtc: '2022-10-15T00:00:00Z'
                EndUtc: '2022-10-20T00:00:00Z'
              UpdatedUtc:
                StartUtc: '2022-10-15T00:00:00Z'
                EndUtc: '2022-10-20T00:00:00Z'
              Extent:
                Resources: true
                ResourceCategories: false
                ResourceCategoryAssignments: false
                ResourceCategoryImageAssignments: false
                ResourceFeatures: false
                ResourceFeatureAssignments: false
                Inactive: false
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResult'
              example:
                Resources:
                  - Id: 5ee074b1-6c86-48e8-915f-c7aa4702086f
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    IsActive: true
                    Name: '101'
                    ParentResourceId: 
                    State: Dirty
                    Descriptions: { }
                    Data:
                      Discriminator: Space
                      Value:
                        FloorNumber: '3'
                        LocationNotes: A1
                    CreatedUtc: '2016-03-29T15:14:06Z'
                    UpdatedUtc: '2016-03-29T15:14:06Z'
                  - Id: c32386aa-1cd2-414a-a823-489325842fbe
                    EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                    IsActive: true
                    Name: '102'
                    ParentResourceId: 
                    State: Inspected
                    Descriptions:
                      en-US: Resource description
                    Data:
                      Discriminator: Space
                      Value:
                        FloorNumber: '3'
                        LocationNotes: B2
                    CreatedUtc: '2016-03-29T15:14:06Z'
                    UpdatedUtc: '2016-03-29T15:14:06Z'
                ResourceCategories:
                  - Id: aaed6e21-1c1f-4644-9872-e53f96a21bf9
                  - ServiceId: 24e2ead5-65a8-4ed9-8286-abdb00f08a1f
                  - IsActive: true
                  - Names:
                      en-US: Best Room
                  - ShortNames:
                      en-US: BR
                  - Descriptions: { }
                  - Ordering: 0
                  - Capacity: 2
                  - ExtraCapacity: 0
                  - ExternalIdentifier: RT001-BestRoom
                ResourceCategoryAssignments:
                  - Id: 032298ad-b1b8-4936-9420-415a2152304a
                    IsActive: true
                    ResourceId: 5ee074b1-6c86-48e8-915f-c7aa4702086f
                    CategoryId: aaed6e21-1c1f-4644-9872-e53f96a21bf9
                    CreatedUtc: '2016-03-29T15:14:06Z'
                    UpdatedUtc: '2016-03-29T15:14:06Z'
                ResourceCategoryImageAssignments:
                  - Id: f3475243-5962-4fb5-bdfd-958f9c65520e
                    IsActive: true
                    CategoryId: aaed6e21-1c1f-4644-9872-e53f96a21bf9
                    ImageId: 8cd435e0-f024-44a0-84fd-abe300b8ae1c
                    CreatedUtc: '2016-03-29T15:14:06Z'
                    UpdatedUtc: '2016-03-29T15:14:06Z'
                ResourceFeatures:
                  - Id: a693dd8c-21fe-4dae-b450-ea3bd9ab3bb0
                    ServiceId: 24e2ead5-65a8-4ed9-8286-abdb00f08a1f
                    IsActive: true
                    Classification: AccessibleBathroom
                    Names:
                      en-US: Accessible Bathroom
                    ShortNames:
                      en-US: AccessBath
                    Descriptions: { }
                ResourceFeatureAssignments:
                  - Id: ca2b5bf9-24f5-4faa-95ef-b65d38598b08
                    IsActive: true
                    ResourceId: 18019693-c66f-4be8-a893-c3d89fd291cc
                    FeatureId: a693dd8c-21fe-4dae-b450-ea3bd9ab3bb0
                    CreatedUtc: '2016-03-29T15:14:06Z'
                    UpdatedUtc: '2016-03-29T15:14:06Z'
                Cursor: c32386aa-1cd2-414a-a823-489325842fbe
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resources/update:
    post:
      tags:
        - Resources
      summary: Update resources
      description: Updates details of the resources.
      operationId: resources_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleResourceUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ResourceUpdates:
                - ResourceId: 5ee074b1-6c86-48e8-915f-c7aa4702086f
                  Name:
                    Value: '0101'
                  ParentResourceId: 
                  Data:
                    Discriminator: Space
                    Value:
                      FloorNumber:
                        Value: '1'
                      LocationNotes:
                        Value: A1
                  State:
                    Value: Clean
                  StateReason:
                    Value: Sample reason
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/resources/getOccupancyState:
    post:
      tags:
        - Resources
      summary: Get resources' occupancy state
      description: 'Returns the occupancy state of the specified resources. This operation returns the occupancy state for the current day. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: resources_getOccupancyState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourcesOccupancyStateFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ResourceCategoryIds":["773d5e42-de1e-43a0-9ce6-f940faf2303f"],"ResourceStates":["Clean","Inspected"],"OccupancyStates":["Vacant","Reserved"]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcesOccupancyStateResult'
              example: {"ResourceCategoryOccupancyStates":[{"ResourceCategoryId":"773d5e42-de1e-43a0-9ce6-f940faf2303f","ResourceOccupancyStates":[{"ResourceId":"f3b3b3b3-3b3b-3b3b-3b3b-3b3b3b3b3b3b","ResourceState":"Inspected","OccupancyState":"Reserved"},{"ResourceId":"c32386aa-1cd2-414a-a823-489325842fbe","ResourceState":"Inspected","OccupancyState":"Vacant"}]}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/restrictions/add:
    post:
      tags:
        - Restrictions
      summary: Add restrictions
      description: "Adds new restrictions with the specified conditions. Care is needed to specify `StartUtc` and `EndUtc` in the correct format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization#datetimes).\r\n**Important:** If consecutive restrictions are sent with the exact same conditions and exceptions, no attempt at merging them into a single restriction is made. This means that there can be a large number of restrictions per service, leading to sub-optimal performance. A quota limit of 150,000 has been introduced for this reason. To mitigate the issue, the preferred way to add restrictions is operation [Set restriction](https://mews-systems.gitbook.io/connector-api/operations/restrictions#set-restrictions)."
      operationId: restrictions_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRestrictionParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
              Restrictions:
                - Identifier: '1234'
                  ExternalIdentifier: '5678'
                  Conditions:
                    Type: Start
                    ExactRateId: 7c7e89d6-69c0-4cce-9d42-35443f2193f3
                    ResourceCategoryId: 86336EAC-4168-46B1-A544-2A47251BF864
                    Days:
                      - Friday
                      - Saturday
                      - Sunday
                  Exceptions:
                    MinLength: P0M2DT0H0M0S
                    MaxLength: P0M7DT0H0M0S
                - Identifier: '1235'
                  ExternalIdentifier: '5678'
                  Conditions:
                    Type: Start
                    BaseRateId: e5b538b1-36e6-43a0-9f5c-103204c7f68e
                    Days:
                      - Friday
                      - Saturday
                      - Sunday
                  Exceptions:
                    MinAdvance: P0Y0M1DT0H0M0S
                    MaxAdvance: P0Y0M3DT0H0M0S
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionAdditionResult'
              example:
                Restrictions:
                  - Identifier: '1234'
                    Restriction:
                      Id: 40c24757-c16e-4094-91d3-4ca952e488a1
                      ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                      ExternalIdentifier: '5678'
                      Conditions:
                        Type: Stay
                        ExactRateId: 7c7e89d6-69c0-4cce-9d42-35443f2193f3
                        BaseRateId: 
                        RateGroupId: 
                        ResourceCategoryId: 86336EAC-4168-46B1-A544-2A47251BF864
                        ResourceCategoryType: 
                        StartUtc: '2018-10-09T00:00:00Z'
                        EndUtc: '2018-10-31T00:00:00Z'
                        Days:
                          - Saturday
                          - Sunday
                      Exceptions:
                        MinAdvance: 
                        MaxAdvance: 
                        MinLength: P0M2DT0H0M0S
                        MaxLength: P0M7DT0H0M0S
                        MinPrice: 
                        MaxPrice: 
                  - Identifier: '1235'
                    Restriction:
                      Id: b40ac4a8-f5da-457d-88fe-7a895e1580ab
                      ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                      ExternalIdentifier: '5678'
                      Conditions:
                        Type: Start
                        ExactRateId: 
                        BaseRateId: e5b538b1-36e6-43a0-9f5c-103204c7f68e
                        RateGroupId: 
                        ResourceCategoryId: 
                        ResourceCategoryType: Room
                        StartUtc: '2018-10-01T00:00:00Z'
                        EndUtc: '2018-10-31T00:00:00Z'
                        Days:
                          - Monday
                          - Tuesday
                          - Wednesday
                          - Thursday
                          - Friday
                      Exceptions:
                        MinAdvance: P0M1DT0H0M0S
                        MaxAdvance: P0M3DT0H0M0S
                        MinLength: 
                        MaxLength: 
                        MinPrice: 
                        MaxPrice: 
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      deprecated: true
      x-deprecatedMessage: 'Use [Set restrictions](https://mews-systems.gitbook.io/connector-api/operations/restrictions#set-restrictions) instead.'
  /api/connector/v1/restrictions/delete:
    post:
      tags:
        - Restrictions
      summary: Delete restrictions
      description: 'Removes restrictions from the service. This operation is intended to be used alongside [Add restrictions](https://mews-systems.gitbook.io/connector-api/operations/restrictions#set-restrictions).'
      operationId: restrictions_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRestrictionParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              RestrictionIds:
                - af4949ce-c061-4f27-89f9-5a6a9ef725a7
                - e2f8aa29-0c09-4097-801c-7888c9fb57ae
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      deprecated: true
      x-deprecatedMessage: 'Use [Clear restrictions](https://mews-systems.gitbook.io/connector-api/operations/restrictions#clear-restrictions) instead.'
  /api/connector/v1/restrictions/set:
    post:
      tags:
        - Restrictions
      summary: Set restrictions
      description: "Adds new restrictions with the specified conditions. For improved efficiency, multiple similar restrictions will be merged into a single restriction. A quota of 150,000 restrictions per service applies, although it is unlikely to be exceeded because of the merging algorithm. For more information about the merging algorithm, see [Concepts > Restrictions](https://mews-systems.gitbook.io/connector-api/concepts/restrictions).\r\n\r\nCare is needed to specify `StartUtc` and `EndUtc` in the correct format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization#datetimes). If migrating from deprecated operation [Add restrictions](https://mews-systems.gitbook.io/connector-api/operations/restrictions#add-restrictions), note that the validation of these properties is stronger in this operation.\r\n\r\nOnly restrictions created through the API are affected by this operation, *not* restrictions created by the user within **Mews Operations**. Similarly, if a user creates a restriction in **Mews Operations**, this will *not* affect restrictions created through the API."
      operationId: restrictions_set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetRestrictionParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","Data":[{"Type":"Start","ExactRateId":"ed4b660b-19d0-434b-9360-a4de2ea42eda","ResourceCategoryId":"773d5e42-de1e-43a0-9ce6-f940faf2303f","StartUtc":"2023-02-15T00:00:00Z","EndUtc":"2023-02-22T00:00:00Z","Days":{"Monday":false,"Tuesday":false,"Wednesday":false,"Thursday":false,"Friday":true,"Saturday":true,"Sunday":true},"MinLength":"P0M2DT0H0M0S","MaxLength":"P0M7DT0H0M0S"},{"Type":"Start","BaseRateId":"e5b538b1-36e6-43a0-9f5c-103204c7f68e","StartUtc":"2023-02-23T00:00:00Z","EndUtc":"2023-03-03T00:00:00Z","Days":{"Monday":true,"Tuesday":true,"Wednesday":true,"Thursday":true,"Friday":true,"Saturday":false,"Sunday":false},"MinAdvance":"P0Y0M1DT0H0M0S","MaxAdvance":"P0Y0M3DT0H0M0S"}]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
              example: {}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '409':
          description: 'The request cannot be completed because the data has changed, causing conflict between the state on the client and the server. To get around this error, try refreshing the data on the client and resubmitting the request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/restrictions/clear:
    post:
      tags:
        - Restrictions
      summary: Clear restrictions
      description: "Deletes restrictions that exactly match the specified conditions, using a splicing algorithm. This operation is intended to be used alongside [Set restrictions](https://mews-systems.gitbook.io/connector-api/operations/restrictions#set-restrictions). The specified conditions must be met exactly. The time interval, however, does not need to correspond to an existing restriction in the system, instead the API uses a splicing algorithm to work out how to divide up any existing restrictions to meet the specified time interval. For details about matching conditions and the splicing algorithm, see [Concepts > Restrictions](https://mews-systems.gitbook.io/connector-api/concepts/restrictions).\r\n\r\nOnly restrictions created through the API are affected by this operation, *not* restrictions created by the user within **Mews Operations**. Similarly, if a user creates a restriction in **Mews Operations**, this will *not* affect restrictions created through the API."
      operationId: restrictions_clear
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearRestrictionParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","Data":[{"Type":"Start","ExactRateId":"ed4b660b-19d0-434b-9360-a4de2ea42eda","ResourceCategoryId":"773d5e42-de1e-43a0-9ce6-f940faf2303f","StartUtc":"2023-02-15T00:00:00Z","EndUtc":"2023-02-22T00:00:00Z","Days":{"Monday":false,"Tuesday":false,"Wednesday":false,"Thursday":false,"Friday":true,"Saturday":true,"Sunday":true}},{"Type":"Start","BaseRateId":"e5b538b1-36e6-43a0-9f5c-103204c7f68e","StartUtc":"2023-02-23T00:00:00Z","EndUtc":"2023-03-03T00:00:00Z","Days":{"Monday":true,"Tuesday":true,"Wednesday":true,"Thursday":true,"Friday":true,"Saturday":false,"Sunday":false}}]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
              example: {}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '409':
          description: 'The request cannot be completed because the data has changed, causing conflict between the state on the client and the server. To get around this error, try refreshing the data on the client and resubmitting the request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/restrictions/getAll:
    post:
      tags:
        - Restrictions
      summary: Get all restrictions
      description: "Returns all restrictions of the default service provided by the enterprise.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: restrictions_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestrictionFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ServiceIds:
                - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              ResourceCategoryIds:
                - 34c29e73-c8db-4e93-b51b-981e42655e03
              RateIds:
                - ed4b660b-19d0-434b-9360-a4de2ea42eda
              Origin: Integration
              CollidingUtc:
                StartUtc: '2020-02-15T00:00:00Z'
                EndUtc: '2020-02-20T00:00:00Z'
              CreatedUtc:
                StartUtc: '2020-02-05T00:00:00Z'
                EndUtc: '2020-02-15T00:00:00Z'
              UpdatedUtc:
                StartUtc: '2020-02-05T00:00:00Z'
                EndUtc: '2020-02-15T00:00:00Z'
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionResult'
              example:
                Restrictions:
                  - Id: 40c24757-c16e-4094-91d3-4ca952e488a1
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    ExternalIdentifier: '5678'
                    Origin: Integration
                    Conditions:
                      Type: Stay
                      ExactRateId: 7c7e89d6-69c0-4cce-9d42-35443f2193f3
                      BaseRateId: 
                      RateGroupId: 
                      ResourceCategoryId: 86336EAC-4168-46B1-A544-2A47251BF864
                      ResourceCategoryType: 
                      StartUtc: '2018-10-09T00:00:00Z'
                      EndUtc: '2018-10-31T00:00:00Z'
                      Days:
                        - Saturday
                        - Sunday
                    Exceptions:
                      MinAdvance: 
                      MaxAdvance: 
                      MinLength: P0M2DT0H0M0S
                      MaxLength: P0M7DT0H0M0S
                      MinPrice:
                        Value: 50
                        Currency: EUR
                      MaxPrice:
                        Value: 150
                        Currency: EUR
                  - Id: b40ac4a8-f5da-457d-88fe-7a895e1580ab
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    ExternalIdentifier: '5678'
                    Origin: Integration
                    Conditions:
                      Type: Start
                      ExactRateId: 
                      BaseRateId: e5b538b1-36e6-43a0-9f5c-103204c7f68e
                      RateGroupId: 
                      ResourceCategoryId: 
                      ResourceCategoryType: Room
                      StartUtc: '2018-10-01T00:00:00Z'
                      EndUtc: '2018-10-31T00:00:00Z'
                      Days:
                        - Monday
                        - Tuesday
                        - Wednesday
                        - Thursday
                        - Friday
                    Exceptions:
                      MinAdvance: P0M1DT0H0M0S
                      MaxAdvance: P0M3DT0H0M0S
                      MinLength: 
                      MaxLength: 
                      MinPrice: 
                      MaxPrice: 
                Cursor: b40ac4a8-f5da-457d-88fe-7a895e1580ab
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/routingRules/getAll:
    post:
      tags:
        - Routing rules
      summary: Get all routing rules
      description: "Returns all routing rules.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: routingRules_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRuleFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              RoutingRuleIds:
                - ff785b22-5422-4d1d-87f4-af2e00b3dfda
                - d98c9611-0006-4691-a835-af2e00b170c4
              CompanyIds:
                - cd441e1a-6f19-4960-887a-af2a00d5d5f8
                - ddc23f8d-131d-44d6-b150-af2a00d5d5f8
              UpdatedUtc:
                StartUtc: '2023-10-01T00:00:00Z'
                EndUtc: '2023-10-31T00:00:00Z'
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRuleResult'
              example:
                RoutingRules:
                  - Id: ff785b22-5422-4d1d-87f4-af2e00b3dfda
                    CompanyId: 35f493d1-6cf7-4132-982a-a5540549c322
                    CompanyRelation: PartnerCompany
                    ServiceId: 708b3509-69ad-4a92-841b-d81f103edcee
                    Applicability: Always
                    RouteType: AllStayItems
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                  - Id: d98c9611-0006-4691-a835-af2e00b170c4
                    CompanyId: 73a1fc8e-11c5-4019-b296-9234b651fc68
                    CompanyRelation: TravelAgency
                    ServiceId: 708b3509-69ad-4a92-841b-d81f103edcee
                    Applicability: Always
                    RouteType: SelectedStayItems
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    SelectedStayItems:
                      Nights: false
                      CityTax: true
                      ProductCategoryIds:
                        - 004fa262-7b08-4853-b544-af2a00d5cf1f
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/routingRules/add:
    post:
      tags:
        - Routing rules
      summary: Add routing rules
      description: Adds a new routing rules.
      operationId: routingRules_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleRoutingRuleAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              RoutingRules:
                - CompanyId: cd441e1a-6f19-4960-887a-af2a00d5d5f8
                  CompanyRelation: PartnerCompany
                  ServiceId: 0907a1b4-ef7a-4aa8-b8a1-af2a00d5ca22
                  Applicability: PrepaidOnly
                  RouteType: AllStayItems
                - CompanyId: ddc23f8d-131d-44d6-b150-af2a00d5d5f8
                  CompanyRelation: TravelAgency
                  ServiceId: 0907a1b4-ef7a-4aa8-b8a1-af2a00d5ca22
                  Applicability: Always
                  RouteType: SelectedStayItems
                  SelectedStayItems:
                    Nights: true
                    CityTax: true
                    ProductCategoryIds:
                      - 004fa262-7b08-4853-b544-af2a00d5cf1f
                      - 8f0dc6ef-1fd4-44e4-b353-af2c00b24caf
                      - d4c1b435-0ed1-4d98-9833-af2c00b28518
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRuleResult'
              example:
                RoutingRules:
                  - Id: ff785b22-5422-4d1d-87f4-af2e00b3dfda
                    CompanyId: 35f493d1-6cf7-4132-982a-a5540549c322
                    CompanyRelation: PartnerCompany
                    ServiceId: 708b3509-69ad-4a92-841b-d81f103edcee
                    Applicability: Always
                    RouteType: AllStayItems
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                  - Id: d98c9611-0006-4691-a835-af2e00b170c4
                    CompanyId: 73a1fc8e-11c5-4019-b296-9234b651fc68
                    CompanyRelation: TravelAgency
                    ServiceId: 708b3509-69ad-4a92-841b-d81f103edcee
                    Applicability: Always
                    RouteType: SelectedStayItems
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    SelectedStayItems:
                      Nights: false
                      CityTax: true
                      ProductCategoryIds:
                        - 004fa262-7b08-4853-b544-af2a00d5cf1f
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/routingRules/update:
    post:
      tags:
        - Routing rules
      summary: Update routing rules
      description: Updates routing rules.
      operationId: routingRules_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleRoutingRuleUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              RoutingRuleUpdates:
                - RoutingRuleId: ff785b22-5422-4d1d-87f4-af2e00b3dfda
                  CompanyId:
                    Value: 35f493d1-6cf7-4132-982a-a5540549c322
                  CompanyRelation:
                    Value: PartnerCompany
                  ServiceId:
                    Value: 708b3509-69ad-4a92-841b-d81f103edcee
                  Applicability:
                    Value: Always
                  RouteType:
                    Value: AllStayItems
                - RoutingRuleId: d98c9611-0006-4691-a835-af2e00b170c4
                  CompanyId:
                    Value: 73a1fc8e-11c5-4019-b296-9234b651fc68
                  CompanyRelation:
                    Value: TravelAgency
                  ServiceId:
                    Value: 708b3509-69ad-4a92-841b-d81f103edcee
                  Applicability:
                    Value: Always
                  RouteType:
                    Value: SelectedStayItems
                  SelectedStayItems:
                    Nights:
                      Value: false
                    CityTax:
                      Value: true
                    ProductCategoryIds:
                      Value:
                        - 004fa262-7b08-4853-b544-af2a00d5cf1f
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRuleResult'
              example:
                RoutingRules:
                  - Id: ff785b22-5422-4d1d-87f4-af2e00b3dfda
                    CompanyId: 35f493d1-6cf7-4132-982a-a5540549c322
                    CompanyRelation: PartnerCompany
                    ServiceId: 708b3509-69ad-4a92-841b-d81f103edcee
                    Applicability: Always
                    RouteType: AllStayItems
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                  - Id: d98c9611-0006-4691-a835-af2e00b170c4
                    CompanyId: 73a1fc8e-11c5-4019-b296-9234b651fc68
                    CompanyRelation: TravelAgency
                    ServiceId: 708b3509-69ad-4a92-841b-d81f103edcee
                    Applicability: Always
                    RouteType: SelectedStayItems
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    SelectedStayItems:
                      Nights: false
                      CityTax: true
                      ProductCategoryIds:
                        - 004fa262-7b08-4853-b544-af2a00d5cf1f
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/routingRules/delete:
    post:
      tags:
        - Routing rules
      summary: Delete routing rules
      description: Deletes routing rules.
      operationId: routingRules_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRuleDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              RoutingRuleIds:
                - ff785b22-5422-4d1d-87f4-af2e00b3dfda
                - d98c9611-0006-4691-a835-af2e00b170c4
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/rules/getAll:
    post:
      tags:
        - Rules
      summary: Get all rules
      description: "Returns all rules applied with the reservations.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: rules_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ServiceIds:
                - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              UpdatedUtc:
                StartUtc: '2023-10-01T00:00:00Z'
                EndUtc: '2023-10-31T00:00:00Z'
              Extent:
                RuleActions: true
                Rates: true
                RateGroups: true
                ResourceCategories: true
                BusinessSegments: true
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleResult'
              example:
                Rules:
                  - Id: 13638b12-53f1-4b35-baab-ac1e006ed8cb
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    Conditions:
                      RateId:
                        Value: 8a13f4e8-0274-4bcc-b2d4-ac1c00d1cd3f
                        ConditionType: Equals
                      RateGroupId: 
                      BusinessSegmentId: 
                      ResourceCategoryId: 
                      ResourceCategoryType: 
                      Origin:
                        Value: Connector
                        ConditionType: NotEquals
                      TravelAgencyId: 
                      MinimumTimeUnitCount: 
                      MaximumTimeUnitCount: 
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                RuleActions:
                  - Id: 307e75a6-2cc8-4226-a600-ac1e006fbdb9
                    RuleId: 13638b12-53f1-4b35-baab-ac1e006ed8cb
                    Data:
                      Discriminator: Product
                      Value:
                        ProductId: 122fd92d-c561-4995-8ebc-ac1c00d1eaa8
                        ActionType: Add
                Rates:
                  - Id: 8a13f4e8-0274-4bcc-b2d4-ac1c00d1cd3f
                    GroupId: e4a9d8d1-5793-4d35-954e-ac1c00d1eaa8
                    ServiceId: ea80bbca-372f-4550-8e48-ac1c00d1cd20
                    BaseRateId: 
                    IsActive: true
                    IsEnabled: true
                    IsPublic: true
                    Name: Fully Flexible
                    ShortName: FF
                    ExternalNames: { }
                RateGroups: [ ]
                ResourceCategories: [ ]
                BusinessSegments: [ ]
                Cursor: 13638b12-53f1-4b35-baab-ac1e006ed8cb
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/serviceOrderNotes/add:
    post:
      tags:
        - Service order notes
      summary: Add service order notes
      description: Adds one or more notes with a provided text to a specific service order. Service orders can be reservations or product orders.
      operationId: serviceOrderNotes_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleServiceOrderNoteAddParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ServiceOrderNotes":[{"ServiceOrderId":"1dc0c6bf-2ce6-4a9f-af97-af5c01676720","Text":"Shaken, not stirred."}]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOrderNoteAdditionResult'
              example: {"ServiceOrderNotes":[{"Id":"a06a225b-00f7-48c8-a463-af5c016768e9","OrderId":"1dc0c6bf-2ce6-4a9f-af97-af5c01676720","Text":"Shaken, not stirred.","Type":"General","CreatedUtc":"2022-11-29T21:48:32Z","UpdatedUtc":"2022-11-30T12:36:37Z"}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/serviceOrderNotes/update:
    post:
      tags:
        - Service order notes
      summary: Update service order notes
      description: Updates one or more given service order notes with new text.
      operationId: serviceOrderNotes_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleServiceOrderNoteUpdateParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ServiceOrderNoteUpdates":[{"ServiceOrderNoteId":"a06a225b-00f7-48c8-a463-af5c016768e9","Text":{"Value":"Shaken, not stirred."}}]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOrderNoteUpdateResult'
              example: {"ServiceOrderNotes":[{"Id":"a06a225b-00f7-48c8-a463-af5c016768e9","OrderId":"1dc0c6bf-2ce6-4a9f-af97-af5c01676720","Text":"Shaken, not stirred.","Type":"General","CreatedUtc":"2022-11-29T21:48:32Z","UpdatedUtc":"2022-11-30T12:36:37Z"}]}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/serviceOrderNotes/getAll:
    post:
      tags:
        - Service order notes
      summary: Get all service order notes
      description: "Returns all notes associated with the given service orders. Service orders can be reservations or product orders. Note this operation uses [Pagination](../guidelines/pagination.md) and supports [Portfolio Access Tokens](../guidelines/multi-property.md).\r\n> **Service order:** This is the general name for an order made against a service, which includes both 'stay' service orders, called [Reservations](reservations.md#reservation), and 'product' service orders, which we simply call [Orders](orders.md). Operations such as [Get all service order notes](#get-all-service-order-notes) will accept Reservation IDs or Order IDs as service order identifiers."
      operationId: serviceOrderNotes_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrderNoteFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ServiceOrderIds":["1dc0c6bf-2ce6-4a9f-af97-af5c01676720"],"ServiceOrderNoteIds":["a06a225b-00f7-48c8-a463-af5c016768e9"],"EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":100}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOrderNoteResult'
              example: {"ServiceOrderNotes":[{"Id":"a06a225b-00f7-48c8-a463-af5c016768e9","OrderId":"1dc0c6bf-2ce6-4a9f-af97-af5c01676720","Text":"Shaken, not stirred.","Type":"General","CreatedUtc":"2022-11-29T21:48:32Z","UpdatedUtc":"2022-11-30T12:36:37Z"}],"Cursor":"a06a225b-00f7-48c8-a463-af5c016768e9"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/serviceOrderNotes/delete:
    post:
      tags:
        - Service order notes
      summary: Delete service order notes
      description: Deletes service order notes.
      operationId: serviceOrderNotes_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrderNoteDeleteParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ServiceOrderNoteIds":["a06a225b-00f7-48c8-a463-af5c016768e9"]}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/serviceOverbookingLimits/getAll:
    post:
      tags:
        - Service overbooking limits
      summary: Get all service overbooking limits
      description: 'Returns all service overbooking limits. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: serviceOverbookingLimits_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOverbookingLimitFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ServiceIds":["bd26d8db-86da-4f96-9efc-e5a4654a4a94","8c1bd738-a505-4b29-aa71-9ecc2982b843"],"ServiceOverbookingLimitIds":["e654f217-d1b5-46be-a820-e93ba568dfac"],"CollidingUtc":{"StartUtc":"2024-11-01T00:00:00Z","EndUtc":"2024-11-30T00:00:00Z"},"UpdatedUtc":{"StartUtc":"2024-11-01T00:00:00Z","EndUtc":"2024-11-30T00:00:00Z"},"ActivityStates":["Active"],"EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":100,"Cursor":"e7f26210-10e7-462e-9da8-ae8300be8ab7"}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOverbookingLimitResult'
              example: {"ServiceOverbookingLimits":[{"Id":"e654f217-d1b5-46be-a820-e93ba568dfac","ServiceId":"3fa85f64-5717-4562-b3fc-2c963f66afa6","FirstTimeUnitStartUtc":"2024-11-01T00:00:00Z","LastTimeUnitStartUtc":"2024-11-30T00:00:00Z","Limit":10,"CreatedUtc":"2024-01-31T10:48:06Z","UpdatedUtc":"2024-01-31T10:58:06Z","IsActive":true}],"Cursor":"e654f217-d1b5-46be-a820-e93ba568dfac"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/serviceOverbookingLimits/set:
    post:
      tags:
        - Service overbooking limits
      summary: Set service overbooking limits
      description: 'Adds new service overbooking limits with the specified conditions. Past overbooking limits cannot be updated outside of `OperationalEditableHistoryInterval`. Care is needed to specify `FirstTimeUnitStartUtc` and `LastTimeUnitStartUtc` in the correct format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization#datetimes). This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: serviceOverbookingLimits_set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOverbookingLimitSetParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","SetServiceOverbookingLimits":[{"FirstTimeUnitStartUtc":"2024-11-01T00:00:00Z","LastTimeUnitStartUtc":"2024-11-30T00:00:00Z","Limit":10}],"EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/serviceOverbookingLimits/clear:
    post:
      tags:
        - Service overbooking limits
      summary: Clear service overbooking limits
      description: 'Deletes service overbooking limits that exactly match the specified conditions. This operation is intended to be used alongside `serviceOverbookingLimits/set`. The specified conditions must be met exactly. The time interval, however, does not need to correspond to an existing service overbooking limit in the system, instead the API uses a splicing algorithm to work out how to divide up any existing service overbooking limit to meet the specified time interval. Past overbooking limits cannot be cleared outside of `OperationalEditableHistoryInterval`. Care is needed to specify `FirstTimeUnitStartUtc` and `LastTimeUnitStartUtc` in the correct format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization#datetimes). This operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: serviceOverbookingLimits_clear
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOverbookingLimitClearParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ServiceId":"bd26d8db-86da-4f96-9efc-e5a4654a4a94","ClearServiceOverbookingLimits":[{"FirstTimeUnitStartUtc":"2024-11-01T00:00:00Z","LastTimeUnitStartUtc":"2024-11-30T00:00:00Z"}],"EnterpriseId":"3fa85f64-5717-4562-b3fc-2c963f66afa6"}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/services/getAll:
    post:
      tags:
        - Services
      summary: Get all services
      description: "Returns all services offered by the enterprise.\nNote this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property)."
      operationId: services_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ServiceIds:
                - fc79a518-bc69-45b8-93bd-83326201bd14
                - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              UpdatedUtc:
                StartUtc: '2020-01-05T00:00:00Z'
                EndUtc: '2020-01-10T00:00:00Z'
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResult'
              example:
                Services:
                  - Id: fc79a518-bc69-45b8-93bd-83326201bd14
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    IsActive: true
                    Name: Restaurant
                    Options:
                      BillAsPackage: false
                    Data:
                      Discriminator: Additional
                      Value:
                        Promotions:
                          BeforeCheckIn: false
                          AfterCheckIn: false
                          DuringStay: false
                          BeforeCheckOut: false
                          AfterCheckOut: false
                          DuringCheckOut: false
                    ExternalIdentifier: SVCE-Restaurant
                  - Id: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    EnterpriseId: 4d0201db-36f5-428b-8d11-4f0a65e960cc
                    CreatedUtc: '2023-10-01T11:48:57Z'
                    UpdatedUtc: '2023-10-28T11:48:57Z'
                    IsActive: true
                    Name: Accommodation
                    Options:
                      BillAsPackage: true
                    Data:
                      Discriminator: Bookable
                      Value:
                        StartOffset: P0M0DT15H0M0S
                        EndOffset: P0M0DT12H0M0S
                        OccupancyStartOffset: P0M0DT15H0M0S
                        OccupancyEndOffset: P0M0DT12H0M0S
                        TimeUnitPeriod: Day
                    ExternalIdentifier: SVCE-Accomm
                Cursor: bd26d8db-86da-4f96-9efc-e5a4654a4a94
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/services/updateAvailability:
    post:
      tags:
        - Services
      summary: Update service availability
      description: 'Updates the number of available resources in [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category) by a certain amount (relative adjustment). Note that availabilities are defined per time unit, so when the server receives the UTC interval, it first converts it to enterprise timezone and updates the availability on all time units that the interval intersects. It''s not allowed to update past availabilities outside of `EditableHistoryInterval`, future updates are allowed for up to 5 years.'
      operationId: services_updateAvailability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAvailabilityUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
              AvailabilityUpdates:
                - FirstTimeUnitStartUtc: '2020-10-05T23:00:00Z'
                  LastTimeUnitStartUtc: '2020-10-05T23:00:00Z'
                  AvailabilityBlockId: 23e85a44-d95a-4dcf-9f36-acb000b10abe
                  ResourceCategoryId: 46bc1498-38cf-4d03-b144-aa69012f5d50
                  UnitCountAdjustment:
                    Value: 6
                - FirstTimeUnitStartUtc: '2020-10-07T23:00:00Z'
                  LastTimeUnitStartUtc: '2020-10-08T23:00:00Z'
                  ResourceCategoryId: 46bc1498-38cf-4d03-b144-aa69012f5d50
                  UnitCountAdjustment: { }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/services/getAvailability:
    post:
      tags:
        - Services
      summary: Get service availability
      description: 'Returns availability of a bookable service for a specified time interval including applied availability adjustments. Availability will be returned for all service time units that the specified time interval intersects. So, for example, an interval `1st Jan 23:00 UTC - 1st Jan 23:00 UTC` will result in one price for `2nd Jan`, while Interval `1st Jan 23:00 UTC - 2nd Jan 23:00 UTC` will result in two prices for `2nd Jan` and `3rd Jan` (assuming a time unit period of "Day"). UTC timestamps must correspond to the start boundary of a time unit, e.g. 00:00 converted to UTC for a time unit of "Day". Other timestamps are not permitted. The __maximum size of time interval__ depends on the service''s time unit: 367 hours if hours, 367 days if days, or 60 months if months. For more information about time units, see [Time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units).'
      operationId: services_getAvailability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAvailabilityFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
              FirstTimeUnitStartUtc: '2017-01-01T23:00:00.000Z'
              LastTimeUnitStartUtc: '2017-01-03T23:00:00.000Z'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAvailabilityResult'
              example:
                CategoryAvailabilities:
                  - Availabilities:
                      - 6
                      - 7
                      - 5
                    'Adjustments ':
                      - 0
                      - 1
                      - -1
                    CategoryId: 773d5e42-de1e-43a0-9ce6-f940faf2303f
                  - Availabilities:
                      - 7
                      - 7
                      - 7
                    'Adjustments ':
                      - 1
                      - 0
                      - -1
                    CategoryId: a0a7a5c5-c4ef-494a-8b34-6cca97629076
                TimeUnitStartsUtc:
                  - '2017-01-01T23:00:00Z'
                  - '2017-01-02T23:00:00Z'
                  - '2017-01-03T23:00:00Z'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/services/getAvailability/2024-01-22:
    post:
      tags:
        - Services
      summary: Get service availability (ver 2024-01-22)
      description: 'Returns selected availability and occupancy metrics of a bookable service for a specified time interval, similar to [the availability & occupancy report](https://help.mews.com/s/article/Availability-Occupancy-report). Availability will be returned for all service time units that the specified time interval intersects. So, for example, an interval `1st Jan 23:00 UTC - 1st Jan 23:00 UTC` will result in one time unit for `2nd Jan`, while Interval `1st Jan 23:00 UTC - 2nd Jan 23:00 UTC` will result in two time units for `2nd Jan` and `3rd Jan` (assuming a time unit period of "Day"). UTC timestamps must correspond to the start boundary of a time unit, e.g. 00:00 converted to UTC for a time unit of "Day". Other timestamps are not permitted. The __maximum size of time interval__ depends on the service''s time unit: 367 hours if hours, 367 days if days, or 60 months if months. For more information about time units, see [Time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units).'
      operationId: services_getAvailability_2024-01-22
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAvailabilityFilterParametersV20240122'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
              FirstTimeUnitStartUtc: '2024-02-01T23:00:00.000Z'
              LastTimeUnitStartUtc: '2024-02-05T23:00:00.000Z'
              Metrics:
                - OutOfOrderBlocks
                - PublicAvailabilityAdjustment
                - OtherServiceReservationCount
                - Occupied
                - ConfirmedReservations
                - OptionalReservations
                - BlockAvailability
                - AllocatedBlockAvailability
                - UsableResources
                - ActiveResources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAvailabilityResultV20240122'
              example:
                TimeUnitStartsUtc:
                  - '2024-01-31T23:00:00Z'
                  - '2024-02-01T23:00:00Z'
                  - '2024-02-02T23:00:00Z'
                  - '2024-02-03T23:00:00Z'
                  - '2024-02-04T23:00:00Z'
                ResourceCategoryAvailabilities:
                  - ResourceCategoryId: d1801d11-fe8d-404b-a26f-af170189605a
                    Metrics:
                      OutOfOrderBlocks:
                        - 0
                        - 1
                        - 0
                        - 0
                        - 1
                      PublicAvailabilityAdjustment:
                        - 7
                        - 5
                        - 4
                        - 3
                        - 4
                      OtherServiceReservationCount:
                        - 0
                        - 0
                        - 1
                        - 0
                        - 0
                      Occupied:
                        - 7
                        - 5
                        - 4
                        - 3
                        - 4
                      ConfirmedReservations:
                        - 7
                        - 5
                        - 4
                        - 3
                        - 4
                      OptionalReservations:
                        - 0
                        - 2
                        - 0
                        - 0
                        - 1
                      BlockAvailability:
                        - 0
                        - 0
                        - 1
                        - 0
                        - 0
                      AllocatedBlockAvailability:
                        - 0
                        - 0
                        - 0
                        - 1
                        - 0
                      UsableResources:
                        - 8
                        - 8
                        - 8
                        - 8
                        - 8
                      ActiveResources:
                        - 8
                        - 8
                        - 8
                        - 8
                        - 8
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/sourceAssignments/getAll:
    post:
      tags:
        - Source assignments
      summary: Get all source assignments
      description: 'Returns all Sources assigned to a Reservation group. Each reservation group can have multiple sources. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: sourceAssignments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceAssignmentFilterParameters'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ReservationGroupIds":["730d050c-8098-415a-95af-af2500a2de47"],"UpdatedUtc":{"StartUtc":"2023-02-1T00:00:00Z","EndUtc":"2023-02-28T00:00:00Z"},"EnterpriseIds":["3fa85f64-5717-4562-b3fc-2c963f66afa6","4d0201db-36f5-428b-8d11-4f0a65e960cc"],"Limitation":{"Count":10}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceAssignmentResult'
              example:
                SourceAssignments:
                  - Id: 670ef167-0380-4dd5-8dbb-af1500d3eb16
                    ReservationGroupId: 730d050c-8098-415a-95af-af2500a2de47
                    SourceId: de6c3fcc-feb9-4385-92e0-af25008b864e
                    IsPrimary: true
                  - Id: da272c89-3afc-4e6f-ad12-af2500a2de79
                    ReservationGroupId: 730d050c-8098-415a-95af-af2500a2de47
                    SourceId: 04db79fa-3a31-47c3-ae25-af25008b864e
                    IsPrimary: false
                Cursor: da272c89-3afc-4e6f-ad12-af2500a2de79
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/sourceAssignments/getAll/2024-09-20:
    post:
      tags:
        - Source assignments
      summary: Get all source assignments (ver 2024-09-20)
      description: 'Returns all Sources assigned to Reservations. Each reservation can have multiple sources. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property/).'
      operationId: sourceAssignments_getAll_2024-09-20
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceAssignmentFilterParametersV20240920'
            example: {"ClientToken":"E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D","AccessToken":"C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D","Client":"Sample Client 1.0.0","ReservationIds":["9b59b50d-bd32-4ce5-add8-09ea0e1300e7"],"Limitation":{"Count":10}}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceAssignmentResultV20240920'
              example: {"SourceAssignments":[{"Id":"c5e11f73-7e85-4a3c-9fe1-872014a10b43","ReservationId":"9b59b50d-bd32-4ce5-add8-09ea0e1300e7","SourceId":"22e42a59-b321-43f8-a5d1-af1f00e1bb8b","IsPrimary":true},{"Id":"5411ffd5-72c6-4ab3-b179-708bcac73d08","ReservationId":"9b59b50d-bd32-4ce5-add8-09ea0e1300e7","SourceId":"bbe29c21-401a-4746-b97d-af1f00e1bb8b","IsPrimary":false}],"Cursor":"5411ffd5-72c6-4ab3-b179-708bcac73d08"}
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
      x-restricted: true
  /api/connector/v1/sources/getAll:
    post:
      tags:
        - Sources
      summary: Get all sources
      description: 'Returns all sources from which reservations can originate. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/).'
      operationId: sources_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              UpdatedUtc:
                StartUtc: '2023-01-05T00:00:00Z'
                EndUtc: '2023-01-10T00:00:00Z'
              SourceIds:
                - bbe29c21-401a-4746-b97d-af1f00e1bb8b
                - 22e42a59-b321-43f8-a5d1-af1f00e1bb8b
                - b5a55d41-bbc5-48d0-a01b-af1f00e1bb8b
              Limitation:
                Count: 10
                Cursor: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceResult'
              example:
                Sources:
                  - Id: bbe29c21-401a-4746-b97d-af1f00e1bb8b
                    Name: Booking.com
                    Type: OnlineTravelAgency
                    UpdatedUtc: '2023-01-05T12:00:00Z'
                  - Id: 22e42a59-b321-43f8-a5d1-af1f00e1bb8b
                    Name: Hostelworld
                    Type: OnlineTravelAgency
                    UpdatedUtc: '2023-01-06T12:00:00Z'
                  - Id: b5a55d41-bbc5-48d0-a01b-af1f00e1bb8b
                    Name: SynXis
                    Type: OnlineTravelAgency
                    UpdatedUtc: '2023-01-06T12:00:00Z'
                Cursor: b5a55d41-bbc5-48d0-a01b-af1f00e1bb8b
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/tasks/getAll:
    post:
      tags:
        - Tasks
      summary: Get all tasks
      description: 'Returns all tasks of the enterprise, filtered by identifiers or other filters.'
      operationId: tasks_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              TaskIds:
                - 65cf1aac-bef2-4653-9350-ab2600af65af
              DepartmentIds:
                - c28cfb42-a963-4195-ad26-ab1b009b6425
              ServiceOrderIds:
                - 8d70f718-e19c-458d-8ddb-ab1b009b5487
              CreatedUtc:
                StartUtc: '2019-12-08T00:00:00Z'
                EndUtc: '2019-12-10T00:00:00Z'
              ClosedUtc:
                StartUtc: '2019-12-08T00:00:00Z'
                EndUtc: '2019-12-10T00:00:00Z'
              DeadlineUtc:
                StartUtc: '2020-01-01T00:00:00Z'
                EndUtc: '2020-01-02T00:00:00Z'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'
              example:
                Tasks:
                  - Id: b166fc93-c75a-438f-93b8-ab1e00a031ae
                    Name: Test all
                    State: Open
                    Description: Task description
                    DepartmentId: c28cfb42-a963-4195-ad26-ab1b009b6425
                    ServiceOrderId: 8d70f718-e19c-458d-8ddb-ab1b009b5487
                    CreatedUtc: '2019-12-09T09:43:14Z'
                    DeadlineUtc: '2020-01-01T14:00:00Z'
                    ClosedUtc: 
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/tasks/add:
    post:
      tags:
        - Tasks
      summary: Add task
      description: 'Adds a new task to the enterprise, optionally to a specified department.'
      operationId: tasks_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              Name: Test
              Description: Task description
              DeadlineUtc: '2016-01-01T14:00:00Z'
              ServiceOrderId: c73cf884-ae2b-4fba-858c-ab1400b4c8c3
              DepartmentId: 8a0770a7-5178-4b87-8898-ab0400a346ec
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTaskResult'
              example:
                TaskId: 11bcf947-d629-4781-89f9-ab1800d5aa47
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/taxEnvironments/getAll:
    post:
      tags:
        - Tax environments
      summary: Get all tax environments
      description: Returns all tax environments supported by the API.
      operationId: taxEnvironments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxEnvironmentResult'
              example:
                TaxEnvironments:
                  - Code: AT-2020
                    CountryCode: AUT
                    TaxationCodes:
                      - AT-2020
                      - AT-2020-Extra
                    ValidityStartUtc: '2020-06-30T22:00:00Z'
                    ValidityEndUtc: 
                  - Code: AT-2016
                    CountryCode: AUT
                    TaxationCodes:
                      - AT-2016
                    ValidityStartUtc: '2016-05-01T00:00:00Z'
                    ValidityEndUtc: '2020-06-30T22:00:00Z'
                  - Code: AT
                    CountryCode: AUT
                    TaxationCodes:
                      - AT
                    ValidityStartUtc: 
                    ValidityEndUtc: '2016-05-01T00:00:00Z'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/taxations/getAll:
    post:
      tags:
        - Taxations
      summary: Get all taxations
      description: Returns all taxations supported in tax environments.
      operationId: taxations_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxationResult'
              example:
                Taxations:
                  - Code: AT-2020
                    Name: VAT
                    LocalName: MWST
                  - Code: AT-2020-Extra
                    Name: Extra tax on top of VAT
                    LocalName: Extra tax on top of MWST
                  - Code: AT-2016
                    Name: VAT
                    LocalName: MWST
                  - Code: AT
                    Name: VAT
                    LocalName: MWST
                TaxRates:
                  - Code: AT-2020-21%
                    TaxationCode: AT
                    Strategy:
                      Discriminator: Relative
                      Value:
                        Value: 0.21
                  - Code: AT-2020-Extra-10%
                    TaxationCode: AT-2020-Extra-10%
                    Strategy:
                      Discriminator: Dependent
                      Value:
                        BaseTaxationCodes:
                          - AT-2020
                        Value: 0.1
                  - Code: AT-5-EUR
                    TaxationCode: AT
                    Strategy:
                      Discriminator: Flat
                      Value:
                        Value: 5
                        CurrencyCode: EUR
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/voucherCodes/add:
    post:
      tags:
        - Voucher codes
      summary: Add voucher codes
      description: 'Adds voucher codes to the specified [Vouchers](https://mews-systems.gitbook.io/connector-api/operations/vouchers/#voucher). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: voucherCodes_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleVoucherCodeAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              VoucherCodeParameters:
                - VoucherId: 8c364829-c7ae-4972-b67f-93ea704d7228
                  Value: 0E5856B0A73E62B7E446
                  ValidityStartUtc: '2023-10-09T22:00:00Z'
                  ValidityEndUtc: '2023-10-09T22:00:00Z'
                - VoucherId: dc9d3488-7fc4-4fc9-a524-14e6504d8734
                  Value: 021D047E42A5FD522CBA
                  ValidityStartUtc: '2023-10-09T22:00:00Z'
                  ValidityEndUtc: '2023-10-09T22:00:00Z'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherCodeResult'
              example:
                VoucherCodes:
                  - Id: 8c364829-c7ae-4972-b67f-93ea704d7228
                    VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                    Value: 0E5856B0A73E62B7E446
                    ValidityStartUtc: 
                    ValidityEndUtc: 
                    CreatedUtc: '2023-10-30T13:37:16Z'
                    UpdatedUtc: '2023-10-30T13:37:16Z'
                    ActivityState: Active
                  - Id: dc9d3488-7fc4-4fc9-a524-14e6504d8734
                    VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                    Value: 021D047E42A5FD522CBA
                    ValidityStartUtc: '2023-10-09T22:00:00Z'
                    ValidityEndUtc: '2023-10-09T22:00:00Z'
                    CreatedUtc: '2023-10-09T15:08:14Z'
                    UpdatedUtc: '2023-10-09T15:08:14Z'
                    ActivityState: Active
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/voucherCodes/delete:
    post:
      tags:
        - Voucher codes
      summary: Delete voucher codes
      description: 'Delete specified voucher codes. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: voucherCodes_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleVoucherCodeDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              VoucherCodeIds:
                - 8c364829-c7ae-4972-b67f-93ea704d7228
                - dc9d3488-7fc4-4fc9-a524-14e6504d8734
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/voucherCodes/getAll:
    post:
      tags:
        - Voucher codes
      summary: Get all voucher codes
      description: 'Returns all voucher codes filtered by [Voucher](https://mews-systems.gitbook.io/connector-api/operations/vouchers/#voucher) or other filter parameters. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: voucherCodes_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherCodeFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              VoucherCodeIds:
                - 8c364829-c7ae-4972-b67f-93ea704d7228
                - dc9d3488-7fc4-4fc9-a524-14e6504d8734
              VoucherIds:
                - fe568bbd-1ecb-4bb2-bf77-96c3698de20d
              UpdatedUtc:
                StartUtc: '2023-10-10T00:00:00Z'
                EndUtc: '2023-10-17T00:00:00Z'
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherCodeResult'
              example:
                VoucherCodes:
                  - Id: 8c364829-c7ae-4972-b67f-93ea704d7228
                    VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                    Value: 0E5856B0A73E62B7E446
                    ValidityStartUtc: 
                    ValidityEndUtc: 
                    CreatedUtc: '2023-10-30T13:37:16Z'
                    UpdatedUtc: '2023-10-30T13:37:16Z'
                    ActivityState: Active
                  - Id: dc9d3488-7fc4-4fc9-a524-14e6504d8734
                    VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                    Value: 021D047E42A5FD522CBA
                    ValidityStartUtc: '2023-10-09T22:00:00Z'
                    ValidityEndUtc: '2023-10-09T22:00:00Z'
                    CreatedUtc: '2023-10-09T15:08:14Z'
                    UpdatedUtc: '2023-10-09T15:08:14Z'
                    ActivityState: Active
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/vouchers/getAll:
    post:
      tags:
        - Vouchers
      summary: Get all vouchers
      description: 'Returns all rate vouchers filtered by [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service), voucher code or voucher identifier. Note this operation uses [Pagination](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/) and supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: vouchers_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherFilterParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseIds:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                - 4d0201db-36f5-428b-8d11-4f0a65e960cc
              ServiceIds:
                - bd26d8db-86da-4f96-9efc-e5a4654a4a94
              VoucherIds:
                - fe568bbd-1ecb-4bb2-bf77-96c3698de20d
              VoucherCodeValues:
                - TEST-VOUCHER-CODE
              UpdatedUtc:
                StartUtc: '2023-10-10T00:00:00Z'
                EndUtc: '2023-10-17T00:00:00Z'
              ExternalIdentifiers:
                - Voucher-001
                - Voucher-002
              Extent:
                Vouchers: true
                VoucherCodes: true
                VoucherAssignments: true
                Companies: false
                Rates: false
              ActivityStates:
                - Active
              Limitation:
                Count: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherResult'
              example:
                Vouchers:
                  - Id: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                    EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    Type: Public
                    Name: Weekend Voucher
                    CreatedUtc: '2018-11-29T08:17:05Z'
                    UpdatedUtc: '2020-10-30T13:38:49Z'
                    ActivityState: Active
                    CompanyId: 3506994b-3c0b-49ba-9f57-ac4700641440
                    TravelAgencyId: 
                    ExternalIdentifier: VCHR-278
                VoucherCodes:
                  - VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                    Value: TEST-VOUCHER-CODE
                    ValidityStartUtc: 
                    ValidityEndUtc: 
                    CreatedUtc: '2020-10-30T13:37:16Z'
                    UpdatedUtc: '2020-10-30T13:37:16Z'
                    ActivityState: Active
                  - VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                    Value: 05400269B23A59C649E4
                    ValidityStartUtc: '2020-10-09T22:00:00Z'
                    ValidityEndUtc: '2020-10-09T22:00:00Z'
                    CreatedUtc: '2020-10-09T15:08:14Z'
                    UpdatedUtc: '2020-10-09T15:08:14Z'
                    ActivityState: Active
                VoucherAssignments:
                  - VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                    RateId: 6639eaa9-bbe0-46c0-94a2-aa5d00a2353c
                  - VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                    RateId: 61133a42-41d2-4e46-b5b0-ab1701268b75
                Rates: 
                Companies: 
                Cursor: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/vouchers/add:
    post:
      tags:
        - Vouchers
      summary: Add vouchers
      description: 'Adds the specified vouchers to the specified [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service). Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: vouchers_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleVoucherAddParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              VoucherParameters:
                - ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  Name: Weekend Voucher
                  Type: Public
                  CompanyId: 
                  AssignedRateIds:
                    - 181f8cdd-04ee-4bf5-ba3e-44c108eca3cb
                    - 8bebeddc-9137-432d-810c-1b998a90ac9a
                  OccupiableIntervalStartUtc: 
                  OccupiableIntervalEndUtc: 
                  ExternalIdentifier: 
                - ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                  Name: Sample company voucher
                  Type: PartnerCompany
                  CompanyId: 3506994b-3c0b-49ba-9f57-ac4700641440
                  AssignedRateIds:
                    - 181f8cdd-04ee-4bf5-ba3e-44c108eca3cb
                    - 8bebeddc-9137-432d-810c-1b998a90ac9a
                  OccupiableIntervalStartUtc: '2023-12-31T22:00:00Z'
                  OccupiableIntervalEndUtc: '2024-01-01T22:00:00Z'
                  ExternalIdentifier: VCHR-278
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherWriteResult'
              example:
                Vouchers:
                  - Id: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    Name: Weekend Voucher
                    CreatedUtc: '2023-12-01T08:17:05Z'
                    UpdatedUtc: '2023-12-02T13:38:49Z'
                    Type: Public
                    ActivityState: Active
                    CompanyId: 
                    TravelAgencyId: 
                    OccupiableIntervalStartUtc: 
                    OccupiableIntervalEndUtc: 
                    ExternalIdentifier: 
                  - Id: f4a9942c-2616-4074-b1f4-4b959515e933
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    Name: Sample company voucher
                    CreatedUtc: '2023-12-01T08:17:05Z'
                    UpdatedUtc: '2023-12-02T13:38:49Z'
                    Type: PartnerCompany
                    ActivityState: Active
                    CompanyId: 3506994b-3c0b-49ba-9f57-ac4700641440
                    TravelAgencyId: 
                    OccupiableIntervalStartUtc: '2023-12-31T22:00:00Z'
                    OccupiableIntervalEndUtc: '2024-01-01T22:00:00Z'
                    ExternalIdentifier: VCHR-278
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/vouchers/update:
    post:
      tags:
        - Vouchers
      summary: Update vouchers
      description: 'Updates information about the specified vouchers. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: vouchers_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleVoucherUpdateParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              VoucherUpdates:
                - VoucherId: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                  Name:
                    Value: Weekend Voucher
                  Type:
                    Value: Public
                  CompanyId: 
                  AssignedRateIds:
                    Value:
                      - 181f8cdd-04ee-4bf5-ba3e-44c108eca3cb
                      - 8bebeddc-9137-432d-810c-1b998a90ac9a
                  OccupiableIntervalStartUtc: 
                  OccupiableIntervalEndUtc: 
                  ExternalIdentifier: 
                - VoucherId: f4a9942c-2616-4074-b1f4-4b959515e933
                  Name:
                    Value: Weekend Voucher
                  Type:
                    Value: PartnerCompany
                  CompanyId:
                    Value: 3506994b-3c0b-49ba-9f57-ac4700641440
                  AssignedRateIds:
                    Value:
                      - 181f8cdd-04ee-4bf5-ba3e-44c108eca3cb
                      - 8bebeddc-9137-432d-810c-1b998a90ac9a
                  OccupiableIntervalStartUtc:
                    Value: '2023-12-31T22:00:00Z'
                  OccupiableIntervalEndUtc:
                    Value: '2024-01-01T22:00:00Z'
                  ExternalIdentifier:
                    Value: VCHR-278
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherWriteResult'
              example:
                Vouchers:
                  - Id: fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    Name: Weekend Voucher
                    CreatedUtc: '2023-12-01T08:17:05Z'
                    UpdatedUtc: '2023-12-02T13:38:49Z'
                    Type: Public
                    ActivityState: Active
                    CompanyId: 
                    TravelAgencyId: 
                    OccupiableIntervalStartUtc: 
                    OccupiableIntervalEndUtc: 
                    ExternalIdentifier: 
                  - Id: f4a9942c-2616-4074-b1f4-4b959515e933
                    ServiceId: bd26d8db-86da-4f96-9efc-e5a4654a4a94
                    Name: Sample company voucher
                    CreatedUtc: '2023-12-01T08:17:05Z'
                    UpdatedUtc: '2023-12-02T13:38:49Z'
                    Type: PartnerCompany
                    ActivityState: Active
                    CompanyId: 3506994b-3c0b-49ba-9f57-ac4700641440
                    TravelAgencyId: 
                    OccupiableIntervalStartUtc: '2023-12-31T22:00:00Z'
                    OccupiableIntervalEndUtc: '2024-01-01T22:00:00Z'
                    ExternalIdentifier: VCHR-278
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
  /api/connector/v1/vouchers/delete:
    post:
      tags:
        - Vouchers
      summary: Delete vouchers
      description: 'Delete specified vouchers. Note this operation supports [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property).'
      operationId: vouchers_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleVoucherDeleteParameters'
            example:
              ClientToken: E0D439EE522F44368DC78E1BFB03710C-D24FB11DBE31D4621C4817E028D9E1D
              AccessToken: C66EF7B239D24632943D115EDE9CB810-EA00F8FD8294692C940F6B5A8F9453D
              Client: Sample Client 1.0.0
              EnterpriseId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              VoucherIds:
                - fe568bbd-1ecb-4bb2-bf77-96c3698de20d
                - f4a9942c-2616-4074-b1f4-4b959515e933
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '401':
          description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '403':
          description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '408':
          description: 'Error caused by heavy request that takes too long to process (typically tens of seconds). To get around this, request data in smaller batches. For more information, see [Request timeouts](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-timeouts)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '204':
          description: Server has successfully fulfilled the request and there is no additional information to send back.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '429':
          description: 'Error caused by too many requests sent in a given amount of time. Response contains `Retry-After` header indicating how long the user agent should wait before making a follow-up request. For more information, see [Request limits](https://mews-systems.gitbook.io/connector-api/guidelines/requests#request-limits).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
        '500':
          description: 'Unexpected error on the Mews side. This may be due to a software fault. If such a situation occurs, the error will be logged and the development team notified, however you can raise an issue through GitHub on our [documentation repository](https://github.com/MewsSystems/gitbook-connector-api).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorApiExceptionResult'
components:
  schemas:
    Account:
      title: Account
      required:
        - Discriminator
        - Id
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the account.
          format: uuid
        Discriminator:
          title: Account type
          allOf:
            - $ref: '#/components/schemas/AccountTypeEnum'
          description: "Type of the account.\n\nCompany\n\nCustomer"
          x-enumNames:
            - Company
            - Customer
          x-enumDescriptions:
            - ''
            - ''
        Customer:
          title: Customer
          allOf:
            - $ref: '#/components/schemas/CustomerAccount'
          description: Updated customer data.
          nullable: true
        Company:
          title: Company
          allOf:
            - $ref: '#/components/schemas/CompanyAccount'
          description: Updated company data.
          nullable: true
      additionalProperties: false
      x-schema-id: Account
    AccountAddress:
      title: Account address
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the address.
          format: uuid
        AccountId:
          type: string
          description: 'Unique identifier of a [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) or a [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) within the enterprise.'
          format: uuid
        ChainId:
          type: string
          description: Unique identifier of the chain.
          format: uuid
          nullable: true
        AccountType:
          anyOf:
            - $ref: '#/components/schemas/AccountType'
          description: 'A discriminator specifying the [type of account](https://mews-systems.gitbook.io/connector-api/operations/accounts/#account-type), e.g. customer or company.'
          nullable: true
        Line1:
          maxLength: 1023
          type: string
          description: First line of the address.
          nullable: true
        Line2:
          maxLength: 255
          type: string
          description: Second line of the address.
          nullable: true
        City:
          maxLength: 255
          type: string
          description: The city.
          nullable: true
        PostalCode:
          maxLength: 255
          type: string
          description: Postal code.
          nullable: true
        CountryCode:
          type: string
          description: ISO 3166-1 alpha-2 code of the Country.
          nullable: true
        CountrySubdivisionCode:
          type: string
          description: 'ISO 3166-2 code of the administrative division, e.g. DE-BW.'
          nullable: true
        Latitude:
          type: number
          description: The latitude.
          format: double
          nullable: true
        Longitude:
          type: number
          description: The longitude.
          format: double
          nullable: true
        UpdatedUtc:
          type: string
          description: Last update date and time of the address in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        IsActive:
          type: boolean
          description: Whether the address is still active.
      additionalProperties: false
      x-schema-id: AccountAddress
    AccountCompanyUpdateParameters:
      title: Company update parameters
      type: object
      properties:
        Email:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Email address (or `null` if the email should not be updated).
          format: email
          nullable: true
        TaxIdentifier:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Tax identification number (or `null` if the tax identification number should not be updated).
          nullable: true
        BillingCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Billing code (or `null` if the billing code should not be updated).
          nullable: true
        AccountingCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Accounting code (or `null` if the accounting code should not be updated).
          nullable: true
        Notes:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Notes (or `null` if the notes should not be updated).
          nullable: true
        Name:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Name (or `null` if the name should not be updated).
          nullable: true
        MotherCompanyId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Mother company identifier (or `null` if the mother company identifier should not be updated).
          nullable: true
        WebsiteUrl:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Website url (or `null` if the website url should not be updated).
          format: uri
          nullable: true
        InvoiceDueInterval:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Invoice due interval (or `null` if the invoice due interval should not be updated).
          nullable: true
        Classifications:
          title: Company update classifications
          allOf:
            - $ref: '#/components/schemas/CompanyClassificationUpdateParameters'
          description: Classifications of the company.
          nullable: true
        Options:
          title: Company update options
          allOf:
            - $ref: '#/components/schemas/CompanyOptionUpdateParameters'
          description: Options of the company.
          nullable: true
        CreditRatingBasic:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
            - $ref: '#/components/schemas/CreditRatingBasic'
          description: Basic credit rating (or `null` if the basic credit rating should not be updated).
          nullable: true
        Department:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Department (or `null` if the department should not be updated).
          nullable: true
        DunsNumber:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Duns number (or `null` if the duns number should not be updated).
          nullable: true
        ReferenceId:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Reference identifier (or `null` if the reference identifier should not be updated).
          nullable: true
        ExternalIdentifier:
          title: String update value
          maxLength: 255
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: External identifier (or `null` if the external identifier should not be updated).
          nullable: true
        AdditionalTaxIdentifier:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Additional tax identifier (or `null` if the additional tax identifier should not be updated).
          nullable: true
        Contact:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Contact (or `null` if the contact should not be updated).
          nullable: true
        ContactPerson:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Contact person (or `null` if the contact person should not be updated).
          nullable: true
        FiscalIdentifier:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Fiscal identifier (or `null` if the fiscal identifier should not be updated).
          nullable: true
        Iata:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: IATA of the company (or `null` if the iata should not be updated).
          nullable: true
        Telephone:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Telephone number (or `null` if the telephone number should not be updated).
          nullable: true
        SourceId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Source identifier (or `null` if the source identifier should not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: AccountCompanyUpdateParameters
    AccountCustomerUpdateParameters:
      title: Customer update parameters
      type: object
      properties:
        Email:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Email address (or `null` if the email should not be updated).
          nullable: true
        TaxIdentifier:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Tax identification number (or `null` if the tax identification number should not be updated).
          nullable: true
        BillingCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Billing code (or `null` if the billing code should not be updated).
          nullable: true
        AccountingCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Accounting code (or `null` if the accounting code should not be updated).
          nullable: true
        Notes:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Notes (or `null` if the notes should not be updated).
          nullable: true
        LastName:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Last name (or `null` if the last name should not be updated).
          nullable: true
        FirstName:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: First name (or `null` if the first name should not be updated).
          nullable: true
        SecondLastName:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Second last name (or `null` if the second last name should not be updated).
          nullable: true
        BirthPlace:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Birth place (or `null` if the birth place should not be updated).
          nullable: true
        Telephone:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Telephone number (or `null` if the telephone should not be updated).
          nullable: true
        Occupation:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Occupation (or `null` if the occupation should not be updated).
          nullable: true
        CarRegistrationNumber:
          title: String update value
          maxLength: 255
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Car registration number (or `null` if the car registration number should not be updated).
          nullable: true
        DietaryRequirements:
          title: String update value
          maxLength: 255
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Dietary requirements (or `null` if the dietary requirements should not be updated).
          nullable: true
        LoyaltyCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Loyalty code (or `null` if the loyalty code should not be updated).
          nullable: true
        NationalityCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Nationality code (or `null` if the nationality code should not be updated).
          nullable: true
        CompanyId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Unique identifier of the company (or `null` if the company should not be updated).
          nullable: true
        BirthDate:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Birth date (or `null` if the birth date should not be updated).
          nullable: true
        Sex:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Sex (or `null` if the sex should not be updated).
          nullable: true
        Title:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Title (or `null` if the title should not be updated).
          nullable: true
        PreferredLanguageCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Preferred language code (or `null` if the preferred language code should not be updated).
          nullable: true
        Options:
          title: Customer update options
          allOf:
            - $ref: '#/components/schemas/CustomerOptionUpdateParameters'
          description: Options of the customer.
          nullable: true
        Classifications:
          title: Customer update classifications
          allOf:
            - $ref: '#/components/schemas/CustomerClassificationUpdateParameters'
          description: Classifications of the customer.
          nullable: true
        LegalEntityIdentifiers:
          title: Customer update legal entity identifiers
          allOf:
            - $ref: '#/components/schemas/LegalEntityIdentifierUpdateParameters'
          description: Legal entity identifiers of the customer.
          nullable: true
      additionalProperties: false
      x-schema-id: AccountCustomerUpdateParameters
    AccountFileParameters:
      title: AccountFileParameters
      required:
        - AccessToken
        - AccountId
        - Client
        - ClientToken
        - Data
        - Name
        - Type
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        AccountId:
          type: string
          description: Unique identifier of the account to which the file will be uploaded to.
          format: uuid
        Name:
          maxLength: 1000
          minLength: 1
          type: string
          description: Uploaded file name.
        Type:
          maxLength: 1000
          minLength: 1
          type: string
          description: Content type of the uploaded file following defined by its MIME type.
        Data:
          minLength: 1
          type: string
          description: Uploaded file data serialized in base64 format.
      additionalProperties: false
      x-schema-id: AccountFileParameters
    AccountMergeParameter:
      title: Account merge parameters
      required:
        - AccountType
        - SourceAccountIds
        - TargetAccountId
      type: object
      properties:
        SourceAccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the source accounts (`Customer` or `Company`).
        TargetAccountId:
          type: string
          description: Unique identifier of the target account (`Customer` or `Company`).
          format: uuid
        AccountType:
          title: Account merge type
          allOf:
            - $ref: '#/components/schemas/MergeAccountTypeEnum'
          description: "Specifying types of the accounts provided (`Customer` or `Company`).\n\nCustomer\n\nCompany"
          x-enumNames:
            - Customer
            - Company
          x-enumDescriptions:
            - ''
            - ''
      additionalProperties: false
      x-schema-id: AccountMergeParameter
    AccountNote:
      title: Account note
      required:
        - AccountId
        - AccountType
        - Classifications
        - Content
        - CreatorProfile
        - Id
        - IsActive
        - UpdaterProfile
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the account note.
          format: uuid
        AccountId:
          type: string
          description: Unique identifier of the account.
          format: uuid
        Content:
          minLength: 1
          type: string
          description: The content of the account note.
        AccountType:
          title: Account type
          allOf:
            - $ref: '#/components/schemas/AccountTypeEnum'
          description: "Specifying type of associated account.\n\nCompany\n\nCustomer"
          x-enumNames:
            - Company
            - Customer
          x-enumDescriptions:
            - ''
            - ''
        Classifications:
          type: array
          items:
            $ref: '#/components/schemas/AccountNoteClassificationEnum'
          description: Specifying the classifications of the note based on account type.
        IsActive:
          type: boolean
          description: Whether the account note is still active.
        CreatorProfile:
          title: Profile data
          allOf:
            - $ref: '#/components/schemas/ProfileData'
          description: The profile data of the user who created the account note.
        UpdaterProfile:
          title: Profile data
          allOf:
            - $ref: '#/components/schemas/ProfileData'
          description: The profile data of the user who updated the account note.
      additionalProperties: false
      x-schema-id: AccountNote
    AccountNoteAddParameters:
      title: Account note parameters
      required:
        - AccountId
        - Classifications
        - Content
      type: object
      properties:
        AccountId:
          type: string
          format: uuid
        Content:
          maxLength: 1000
          minLength: 1
          type: string
          description: The content of the account note.
        Classifications:
          maxItems: 1
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AccountNoteClassificationEnum'
          description: Specifying the classifications of the note based on account type.
      additionalProperties: false
      x-schema-id: AccountNoteAddParameters
    AccountNoteAdditionResult:
      title: AccountNoteAdditionResult
      required:
        - AccountNotes
      type: object
      properties:
        AccountNotes:
          type: array
          items:
            $ref: '#/components/schemas/AccountNote'
          description: Added account notes.
      additionalProperties: false
      x-schema-id: AccountNoteAdditionResult
    AccountNoteClassificationEnum:
      title: Account note classification
      enum:
        - General
        - FoodAndBeverage
        - FrontOffice
        - Reservations
        - Housekeeping
        - Maintenance
        - PreviousStay
        - FamilyRelations
        - Gifts
        - Accounting
        - Complaints
        - Other
      type: string
      description: "\n\nGeneral (For Company and Customer)\n\nFoodAndBeverage (Only Customer)\n\nFrontOffice (Only Customer)\n\nReservations (Only Customer)\n\nHousekeeping (Only Customer)\n\nMaintenance (Only Customer)\n\nPreviousStay (Only Customer)\n\nFamilyRelations (Only Customer)\n\nGifts (Only Customer)\n\nAccounting (Only Customer)\n\nComplaints (Only Customer)\n\nOther (Only Customer)"
      x-enumNames:
        - General
        - FoodAndBeverage
        - FrontOffice
        - Reservations
        - Housekeeping
        - Maintenance
        - PreviousStay
        - FamilyRelations
        - Gifts
        - Accounting
        - Complaints
        - Other
      x-enumDescriptions:
        - For Company and Customer
        - Only Customer
        - Only Customer
        - Only Customer
        - Only Customer
        - Only Customer
        - Only Customer
        - Only Customer
        - Only Customer
        - Only Customer
        - Only Customer
        - Only Customer
    AccountNoteFilterParameters:
      title: AccountNoteFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        ChainIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of `Chain`. If not specified, the operation returns data for all chains within scope of the Access Token.'
          nullable: true
        AccountNoteIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Account note](https://mews-systems.gitbook.io/connector-api/operations/#account-note).'
          nullable: true
        AccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the accounts ([Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)).'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval of Account note's last update date and time.
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: AccountNoteFilterParameters
    AccountNoteResult:
      title: AccountNoteResult
      required:
        - AccountNotes
      type: object
      properties:
        AccountNotes:
          type: array
          items:
            $ref: '#/components/schemas/AccountNote'
          description: The set of requested account notes.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AccountNoteResult
    AccountNoteUpdateClassifications:
      title: Account note update classifications
      type: object
      properties:
        General:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Company and Customer: Boolean value defining the general classification for the account note (or `null` if the value should not be updated).'
          nullable: true
        FoodAndBeverage:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the food and beverage classification for the account note (or `null` if the value should not be updated).'
          nullable: true
        FrontOffice:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the front office classification for the account note (or `null` if the value should not be updated).'
          nullable: true
        Reservations:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the reservations classification for the account note (or `null` if the value should not be updated).'
          nullable: true
        Housekeeping:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the housekeeping classification for the account note (or `null` if the value should not be updated).'
          nullable: true
        Maintenance:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the maintenance classification for the account note (or `null` if the value should not be updated).'
          nullable: true
        PreviousStay:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the previous stay classification for the account note (or `null` if the value should not be updated).'
          nullable: true
        FamilyRelations:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the family relations classification for the account note (or `null` if the value should not be updated).'
          nullable: true
        Gifts:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the gifts classification for the account note (or `null` if the value should not be updated).'
          nullable: true
        Accounting:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the accounting classification for the account note (or `null` if the value should not be updated).'
          nullable: true
        Complaints:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the complaints classification for the account note (or `null` if the value should not be updated).'
          nullable: true
        Other:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Customer only: Boolean value defining the other classification for the account note (or `null` if the value should not be updated).'
          nullable: true
      additionalProperties: false
      x-schema-id: AccountNoteUpdateClassifications
    AccountNoteUpdateParameters:
      title: Account note update parameters
      required:
        - AccountNoteId
        - Classifications
      type: object
      properties:
        AccountNoteId:
          type: string
          description: Unique identifier of the account note.
          format: uuid
        Content:
          title: String update value
          maxLength: 1000
          minLength: 1
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Content of the account note (or `null` if the content should not be updated).
          nullable: true
        Classifications:
          title: Account note update classifications
          allOf:
            - $ref: '#/components/schemas/AccountNoteUpdateClassifications'
          description: Classification of the account note.
      additionalProperties: false
      x-schema-id: AccountNoteUpdateParameters
    AccountNoteUpdateResult:
      title: AccountNoteUpdateResult
      required:
        - AccountNotes
      type: object
      properties:
        AccountNotes:
          type: array
          items:
            $ref: '#/components/schemas/AccountNote'
          description: Updated account notes.
      additionalProperties: false
      x-schema-id: AccountNoteUpdateResult
    AccountParameterDiscriminatorEnum:
      title: Account type discriminator
      enum:
        - Customer
        - Company
      type: string
      description: "\n\nCustomer\n\nCompany"
      x-enumNames:
        - Customer
        - Company
      x-enumDescriptions:
        - ''
        - ''
    AccountResult:
      title: AccountResult
      required:
        - Accounts
      type: object
      properties:
        Accounts:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/Account'
          description: Updated accounts.
      additionalProperties: false
      x-schema-id: AccountResult
    AccountType:
      title: Account type
      enum:
        - Company
        - Customer
      type: string
    AccountTypeEnum:
      title: Account type
      enum:
        - Company
        - Customer
      type: string
      description: "\n\nCompany\n\nCustomer"
      x-enumNames:
        - Company
        - Customer
      x-enumDescriptions:
        - ''
        - ''
    AccountUpdateParameters:
      title: Account update parameters
      required:
        - Discriminator
        - Id
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the account.
          format: uuid
        Discriminator:
          title: Account type discriminator
          allOf:
            - $ref: '#/components/schemas/AccountParameterDiscriminatorEnum'
          description: "Type of the account.\n\nCustomer\n\nCompany"
          x-enumNames:
            - Customer
            - Company
          x-enumDescriptions:
            - ''
            - ''
        Customer:
          title: Customer update parameters
          allOf:
            - $ref: '#/components/schemas/AccountCustomerUpdateParameters'
          description: Customer data to be updated. Required when `Discriminator` is `Customer`.
          nullable: true
        Company:
          title: Company update parameters
          allOf:
            - $ref: '#/components/schemas/AccountCompanyUpdateParameters'
          description: Company data to be updated. Required when `Discriminator` is `Company`.
          nullable: true
      additionalProperties: false
      x-schema-id: AccountUpdateParameters
    AccountingCategory:
      title: Accounting category
      required:
        - CreatedUtc
        - EnterpriseId
        - Id
        - IsActive
        - Name
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the category.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        IsActive:
          type: boolean
          description: Whether the accounting category is still active.
        Name:
          minLength: 1
          type: string
          description: Name of the category.
        Code:
          type: string
          description: Code of the category within Mews.
          nullable: true
        ExternalCode:
          type: string
          description: Code of the category in external systems.
          nullable: true
        LedgerAccountCode:
          type: string
          description: Code of the ledger account (double entry accounting).
          nullable: true
        PostingAccountCode:
          type: string
          description: Code of the posting account (double entry accounting).
          nullable: true
        CostCenterCode:
          type: string
          description: Code of cost center.
          nullable: true
        Classification:
          allOf:
            - $ref: '#/components/schemas/AccountingCategoryClassificationEnum'
          description: "Classification of the accounting category allowing cross-enterprise reporting.\n\nAccommodation\n\nFoodAndBeverage\n\nTaxes\n\nPayments\n\nExternalRevenue\n\nSundryIncome\n\nWellness\n\nSport\n\nTechnology\n\nFacilities\n\nEvents\n\nTourism"
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the accounting category in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the accounting category in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: AccountingCategory
    AccountingCategoryClassificationEnum:
      title: Accounting category classification
      enum:
        - Accommodation
        - FoodAndBeverage
        - Taxes
        - Payments
        - ExternalRevenue
        - SundryIncome
        - Wellness
        - Sport
        - Technology
        - Facilities
        - Events
        - Tourism
      type: string
      description: "\n\nAccommodation\n\nFoodAndBeverage\n\nTaxes\n\nPayments\n\nExternalRevenue\n\nSundryIncome\n\nWellness\n\nSport\n\nTechnology\n\nFacilities\n\nEvents\n\nTourism"
      x-enumNames:
        - Accommodation
        - FoodAndBeverage
        - Taxes
        - Payments
        - ExternalRevenue
        - SundryIncome
        - Wellness
        - Sport
        - Technology
        - Facilities
        - Events
        - Tourism
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
    AccountingCategoryFilterParameters:
      title: AccountingCategoryFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        AccountingCategoryIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the requested [Accounting categories](https://mews-systems.gitbook.io/connector-api/operations/#accounting-category).'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Last update date and time of the accounting category in UTC timezone in ISO 8601 format.
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: AccountingCategoryFilterParameters
    AccountingCategoryParameters:
      title: AccountingCategoryParameters
      type: object
      properties:
        Code:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: AccountingCategoryParameters
    AccountingCategoryResult:
      title: AccountingCategoryResult
      required:
        - AccountingCategories
      type: object
      properties:
        AccountingCategories:
          type: array
          items:
            $ref: '#/components/schemas/AccountingCategory'
          description: Accounting categories of the enterprise.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AccountingCategoryResult
    AccountingCategoryRoutedItemTypes:
      title: Accounting category routed item types
      required:
        - CustomItems
        - Products
      type: object
      properties:
        Products:
          type: boolean
          description: Specifies whether products under the given accounting category are routed.
        CustomItems:
          type: boolean
          description: Specifies whether custom items under the given accounting category are routed.
      additionalProperties: false
      x-schema-id: AccountingCategoryRoutedItemTypes
    AccountingConfiguration:
      title: Accounting configuration
      required:
        - EnabledExternalPaymentTypes
        - SurchargeConfiguration
      type: object
      properties:
        AdditionalTaxIdentifier:
          maxLength: 50
          type: string
          description: Organization number.
          nullable: true
        CompanyName:
          maxLength: 100
          type: string
          description: Legal name of the company.
          nullable: true
        BankAccountNumber:
          maxLength: 50
          type: string
          description: Bank account number.
          nullable: true
        BankName:
          maxLength: 100
          type: string
          description: Name of the bank.
          nullable: true
        Iban:
          maxLength: 40
          type: string
          description: International Bank Account Number.
          nullable: true
        Bic:
          maxLength: 11
          type: string
          description: Business Identification Code.
          nullable: true
        SurchargeConfiguration:
          title: Surcharging fees configuration
          allOf:
            - $ref: '#/components/schemas/SurchargeConfiguration'
          description: Configuration for surcharging fees.
        EnabledExternalPaymentTypes:
          type: array
          items:
            $ref: '#/components/schemas/ExternalPaymentTypeEnum'
          description: External payment types that are enabled for the enterprise and can be used in `payments/addExternal`.
      additionalProperties: false
      x-schema-id: AccountingConfiguration
    AccountingItem:
      title: Accounting item
      type: object
      properties:
        Id:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        CustomerId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AccountId` instead.
        OrderId:
          type: string
          format: uuid
          nullable: true
        ServiceId:
          type: string
          format: uuid
          nullable: true
        ProductId:
          type: string
          format: uuid
          nullable: true
        BillId:
          type: string
          format: uuid
          nullable: true
        InvoiceId:
          type: string
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        CreditCardId:
          type: string
          format: uuid
          nullable: true
        Type:
          type: string
          nullable: true
        SubType:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        ConsumptionUtc:
          type: string
          nullable: true
        ClosedUtc:
          type: string
          nullable: true
        State:
          type: string
          nullable: true
        SubState:
          type: string
          nullable: true
        Amount:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
        TaxExemptionReasonCode:
          type: string
          description: Code of tax exemption reason. **Restricted!** This property is currently intended for Mews' internal usage and may be subject to change.
          nullable: true
      additionalProperties: false
      x-schema-id: AccountingItem
    AccountingItemExtent:
      title: AccountingItemExtent
      type: object
      properties:
        AccountingItems:
          type: boolean
        OrderItems:
          type: boolean
        PaymentItems:
          type: boolean
        CreditCardTransactions:
          type: boolean
      additionalProperties: false
      description: 'Extent of data to be returned. E.g. it is possible to specify that together with the accounting items, credit card transactions should be also returned.'
      x-schema-id: AccountingItemExtent
    AccountingItemParameters:
      title: AccountingItemParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - EndUtc
        - Extent
        - StartUtc
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        StartUtc:
          minLength: 1
          type: string
          format: date-time
        EndUtc:
          minLength: 1
          type: string
          format: date-time
        Extent:
          title: AccountingItemExtent
          allOf:
            - $ref: '#/components/schemas/AccountingItemExtent'
          description: 'Extent of data to be returned. E.g. it is possible to specify that together with the accounting items, credit card transactions should be also returned.'
        ItemIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the Accounting items. Required if no other filter is provided.
          nullable: true
        RebatedItemIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the Accounting items we are finding rebates for. Required if no other filter is provided.
          nullable: true
        ClosedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        ConsumedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        TimeFilter:
          type: string
          nullable: true
          deprecated: true
        Currency:
          type: string
          description: 'ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency) the item costs should be converted to.'
          format: currency
          nullable: true
        States:
          type: array
          items:
            type: string
          description: 'States the accounting items should be in. If not specified, accounting items in Open or Closed states are returned.'
          nullable: true
      additionalProperties: false
      x-schema-id: AccountingItemParameters
    AccountingItemResult:
      title: AccountingItemResult
      type: object
      properties:
        AccountingItems:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
          deprecated: true
        OrderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemOld'
          description: Updated order items (consumed items such as nights or products).
          nullable: true
        PaymentItems:
          type: array
          items:
            $ref: '#/components/schemas/PaymentItemOld'
          description: 'Updated payment items (such as cash, credit card payments or invoices).'
          nullable: true
        CreditCardTransactions:
          type: array
          items:
            $ref: '#/components/schemas/CreditCardTransaction'
          description: The credit card payment transactions.
          nullable: true
      additionalProperties: false
      x-schema-id: AccountingItemResult
    AccountingItemUpdateParameters:
      title: AccountingItemUpdateParameters
      required:
        - AccountingItemId
        - BillId
      type: object
      properties:
        AccountingItemId:
          type: string
          format: uuid
        AccountId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidUpdateValue'
          nullable: true
        BillId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidUpdateValue'
      additionalProperties: false
      x-schema-id: AccountingItemUpdateParameters
    AccountingLedgerTypeEnum:
      title: Accounting ledger type
      enum:
        - Revenue
        - Tax
        - Payment
        - Deposit
        - Guest
        - City
        - NonRevenue
      type: string
      description: "\n\nRevenue\n\nTax\n\nPayment\n\nDeposit\n\nGuest\n\nCity\n\nNonRevenue"
      x-enumNames:
        - Revenue
        - Tax
        - Payment
        - Deposit
        - Guest
        - City
        - NonRevenue
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
    AccountingState:
      title: Order item accounting state
      enum:
        - Open
        - Closed
        - Inactive
        - Canceled
      type: string
      x-enumDescriptions:
        - 'Order items which carry a non-zero value, are open, and have not been closed on a bill or invoice.'
        - Order items which carry a non-zero value and have been closed on a bill or invoice.
        - 'Order items which are either of zero value and have not been canceled, if the state of the payment item is Pending or Failed, or items of optional reservations. Until the reservation is confirmed, all its accounting items are Inactive.'
        - 'Order items which have been canceled, regardless of whether the item is of zero value.'
    AccountingStateEnum:
      title: Order item accounting state
      enum:
        - Open
        - Closed
        - Inactive
        - Canceled
      type: string
      description: "\n\nOpen (Order items which carry a non-zero value, are open, and have not been closed on a bill or invoice.)\n\nClosed (Order items which carry a non-zero value and have been closed on a bill or invoice.)\n\nInactive (Order items which are either of zero value and have not been canceled, if the state of the payment item is Pending or Failed, or items of optional reservations. Until the reservation is confirmed, all its accounting items are Inactive.)\n\nCanceled (Order items which have been canceled, regardless of whether the item is of zero value.)"
      x-enumNames:
        - Open
        - Closed
        - Inactive
        - Canceled
      x-enumDescriptions:
        - 'Order items which carry a non-zero value, are open, and have not been closed on a bill or invoice.'
        - Order items which carry a non-zero value and have been closed on a bill or invoice.
        - 'Order items which are either of zero value and have not been canceled, if the state of the payment item is Pending or Failed, or items of optional reservations. Until the reservation is confirmed, all its accounting items are Inactive.'
        - 'Order items which have been canceled, regardless of whether the item is of zero value.'
    ActivityState:
      title: Activity State
      enum:
        - Deleted
        - Active
      type: string
    ActivityStateEnum:
      title: Activity State
      enum:
        - Deleted
        - Active
      type: string
      description: "\n\nDeleted\n\nActive"
      x-enumNames:
        - Deleted
        - Active
      x-enumDescriptions:
        - ''
        - ''
    ActivityStates:
      enum:
        - Deleted
        - Active
      type: string
    AddAccountFileResult:
      title: AddAccountFileResult
      required:
        - FileId
      type: object
      properties:
        FileId:
          type: string
          description: Unique identifier of the uploaded file.
          format: uuid
      additionalProperties: false
      x-schema-id: AddAccountFileResult
    AddCreditCardResult:
      title: AddCreditCardResult
      type: object
      properties:
        CreditCardId:
          type: string
          description: 'Unique identifier of the [Credit card](https://mews-systems.gitbook.io/connector-api/operations/creditcards/#credit-card).'
          format: uuid
      additionalProperties: false
      x-schema-id: AddCreditCardResult
    AddExternalPaymentResult:
      title: AddExternalPaymentResult
      type: object
      properties:
        ExternalPaymentId:
          type: string
          description: 'Unique identifier of the [Payment item](https://mews-systems.gitbook.io/connector-api/operations/accountingitems/#payment-item).'
          format: uuid
      additionalProperties: false
      x-schema-id: AddExternalPaymentResult
    AddOutletBillsParameters:
      title: AddOutletBillsParameters
      required:
        - AccessToken
        - Bills
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Bills:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/OutletBillParameters'
          description: The new outlet bills.
      additionalProperties: false
      x-schema-id: AddOutletBillsParameters
    AddOutletBillsResult:
      title: AddOutletBillsResult
      type: object
      properties:
        OutletBillIds:
          type: array
          items:
            type: string
            format: uuid
          description: Array of unique identifiers of the added Outlet bills.
          nullable: true
      additionalProperties: false
      x-schema-id: AddOutletBillsResult
    AddProductItemsResult:
      title: AddProductItemsResult
      type: object
      properties:
        ItemIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AddProductItemsResult
    AddRestrictionParameters:
      title: AddRestrictionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Restrictions
        - ServiceId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) restrictions will be added in.'
          format: uuid
        Restrictions:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RestrictionData'
          description: Parameters of restrictions.
      additionalProperties: false
      x-schema-id: AddRestrictionParameters
    AddTaskResult:
      title: AddTaskResult
      type: object
      properties:
        TaskId:
          type: string
          description: Unique identifier of added task.
          format: uuid
      additionalProperties: false
      x-schema-id: AddTaskResult
    AddedMessage:
      title: AddedMessage
      type: object
      properties:
        Identifier:
          type: string
          nullable: true
        Message:
          allOf:
            - $ref: '#/components/schemas/Message'
          nullable: true
      additionalProperties: false
      x-schema-id: AddedMessage
    AddedMessageResult:
      title: AddedMessageResult
      required:
        - Messages
      type: object
      properties:
        Messages:
          type: array
          items:
            $ref: '#/components/schemas/AddedMessage'
      additionalProperties: false
      x-schema-id: AddedMessageResult
    AddedReservation:
      title: Added reservation
      required:
        - Reservation
      type: object
      properties:
        Identifier:
          type: string
          description: Identifier of the reservation within the transaction.
          nullable: true
        Reservation:
          title: Reservation (ver 2017-04-12)
          allOf:
            - $ref: '#/components/schemas/ReservationOld'
          description: The added reservation.
      additionalProperties: false
      x-schema-id: AddedReservation
    AddedRestriction:
      title: Added restriction
      type: object
      properties:
        Identifier:
          type: string
          description: Identifier of the restriction within the transaction.
          nullable: true
        Restriction:
          allOf:
            - $ref: '#/components/schemas/Restriction'
          description: The added restriction.
          nullable: true
      additionalProperties: false
      x-schema-id: AddedRestriction
    AdditionalServiceData:
      title: Additional service data
      required:
        - Promotions
      type: object
      properties:
        Promotions:
          allOf:
            - $ref: '#/components/schemas/Promotions'
          description: Promotions of the service.
      additionalProperties: false
      x-schema-id: AdditionalServiceData
    Address:
      title: Address
      type: object
      properties:
        Line1:
          type: string
          nullable: true
        Line2:
          type: string
          nullable: true
        City:
          type: string
          nullable: true
        PostalCode:
          type: string
          nullable: true
        SubdivisionCode:
          type: string
          nullable: true
        CountryCode:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: Address
    AddressAddParameters:
      title: Account address parameters
      required:
        - AccountId
      type: object
      properties:
        AccountId:
          type: string
          description: Unique identifier of a Company or a Customer within the enterprise.
          format: uuid
        Line1:
          maxLength: 255
          type: string
          description: First line of the address.
          nullable: true
        Line2:
          maxLength: 255
          type: string
          description: Second line of the address.
          nullable: true
        City:
          maxLength: 255
          type: string
          description: The city.
          nullable: true
        PostalCode:
          maxLength: 255
          type: string
          description: Postal code.
          format: postal-code
          nullable: true
        CountryCode:
          type: string
          description: ISO 3166-1 alpha-2 code of the Country.
          nullable: true
        CountrySubdivisionCode:
          type: string
          description: 'ISO 3166-2 code of the administrative division, e.g. `DE-BW`.'
          nullable: true
        Latitude:
          maximum: 90
          minimum: -90
          type: number
          description: The latitude in range of -90 to 90.
          format: double
          nullable: true
        Longitude:
          maximum: 180
          minimum: -180
          type: number
          description: The longitude in range of -180 to 180.
          format: double
          nullable: true
      additionalProperties: false
      x-schema-id: AddressAddParameters
    AddressDeleteParameters:
      title: AddressDeleteParameters
      required:
        - AccessToken
        - AddressIds
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        AddressIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Addresses](https://mews-systems.gitbook.io/connector-api/operations/#account-address) within the enterprise to be deleted.'
      additionalProperties: false
      x-schema-id: AddressDeleteParameters
    AddressFilterParameters:
      title: AddressFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        ChainIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of `Chain`. If not specified, the operation returns data for all chains within scope of the Access Token.'
          nullable: true
        AccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) or [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) within the enterprise. Required if no other filter is provided.'
          nullable: true
        AddressIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Addresses](https://mews-systems.gitbook.io/connector-api/operations/#account-address) within the enterprise. Use this property if you want to fetch specific addresses. Required if no other filter is provided.'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval of Address last update date and time. Required if no other filter is provided.
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: AddressFilterParameters
    AddressParameters:
      title: Address parameters
      type: object
      properties:
        Line1:
          type: string
          description: First line of the address.
          nullable: true
        Line2:
          type: string
          description: Second line of the address.
          nullable: true
        City:
          type: string
          description: The city.
          nullable: true
        PostalCode:
          type: string
          description: Postal code.
          format: postal-code
          nullable: true
        CountryCode:
          type: string
          description: ISO 3166-1 code of the Country.
          nullable: true
        CountrySubdivisionCode:
          type: string
          description: 'ISO 3166-2 code of the administrative division, e.g. DE-BW'
          nullable: true
      additionalProperties: false
      description: New address details.
      x-schema-id: AddressParameters
    AddressResult:
      title: AddressResult
      required:
        - Addresses
      type: object
      properties:
        Addresses:
          type: array
          items:
            $ref: '#/components/schemas/AccountAddress'
          description: 'The collection of added or modified Account addresses, containing address and account information.'
      additionalProperties: false
      x-schema-id: AddressResult
    AddressResultPage:
      title: AddressResultPage
      required:
        - Addresses
      type: object
      properties:
        Addresses:
          type: array
          items:
            $ref: '#/components/schemas/AccountAddress'
          description: 'The collection of Account addresses, containing address and account information.'
        Cursor:
          type: string
          description: Unique identifier of the last and hence oldest address item returned. This can be used in Limitation in a subsequent request to fetch the next batch of older Account address.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AddressResultPage
    AddressUpdateParameters:
      title: Account address update parameters
      required:
        - AddressId
      type: object
      properties:
        AddressId:
          type: string
          description: Unique identifier of the address.
          format: uuid
        Line1:
          title: String update value
          maxLength: 255
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: First line of the address.
          nullable: true
        Line2:
          title: String update value
          maxLength: 255
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Second line of the address.
          nullable: true
        City:
          title: String update value
          maxLength: 255
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: The city.
          nullable: true
        PostalCode:
          title: String update value
          maxLength: 255
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Postal code.
          format: postal-code
          nullable: true
        CountryCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: ISO 3166-1 alpha-2 code of the Country.
          nullable: true
        CountrySubdivisionCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: 'ISO 3166-2 code of the administrative division, e.g. `DE-BW`.'
          nullable: true
      additionalProperties: false
      x-schema-id: AddressUpdateParameters
    AgeCategory:
      title: Age category
      required:
        - Classification
        - CreatedUtc
        - Id
        - IsActive
        - Names
        - ServiceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of age category.
          format: uuid
        ServiceId:
          type: string
          description: 'Unique identifier of [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the age category belongs to.'
          format: uuid
        MinimalAge:
          type: integer
          description: Minimal age for the age category.
          format: int32
          nullable: true
        MaximalAge:
          type: integer
          description: Maximal age for the age category.
          format: int32
          nullable: true
        Names:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the name of the age category.
          x-schema-id: LocalizedStrings
        ShortNames:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the short name of the age category.
          nullable: true
          x-schema-id: LocalizedStrings
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the age category in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the age category in UTC timezone in ISO 8601 format.
          format: date-time
        Classification:
          title: Age category classification
          allOf:
            - $ref: '#/components/schemas/AgeCategoryClassificationEnum'
          description: "The classification of the age category.\n\nAdult\n\nChild"
          x-enumNames:
            - Adult
            - Child
          x-enumDescriptions:
            - ''
            - ''
        IsActive:
          type: boolean
          description: Whether the age category is still active.
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the age category from external system.
          nullable: true
      additionalProperties: false
      x-schema-id: AgeCategory
    AgeCategoryAdjustment:
      title: Age category adjustment
      required:
        - AbsoluteValue
        - AgeCategoryId
        - Type
      type: object
      properties:
        AgeCategoryId:
          type: string
          description: Unique identifier of the age category.
          format: uuid
        AbsoluteValue:
          type: number
          description: Absolute value of the adjustment (e.g. `50` represents 50 EUR in case the rate currency is `EUR`).
          format: double
        Type:
          title: Age category adjustment type
          allOf:
            - $ref: '#/components/schemas/AgeCategoryAdjustmentTypeEnum'
          description: "Age category adjustment type\n\nExtraOccupancyAdjustment\n\nNegativeOccupancyAdjustment\n\nStandardOccupancyAdjustment"
          x-enumNames:
            - ExtraOccupancyAdjustment
            - NegativeOccupancyAdjustment
            - StandardOccupancyAdjustment
          x-enumDescriptions:
            - ''
            - ''
            - ''
      additionalProperties: false
      x-schema-id: AgeCategoryAdjustment
    AgeCategoryAdjustmentTypeEnum:
      title: Age category adjustment type
      enum:
        - ExtraOccupancyAdjustment
        - NegativeOccupancyAdjustment
        - StandardOccupancyAdjustment
      type: string
      description: "\n\nExtraOccupancyAdjustment\n\nNegativeOccupancyAdjustment\n\nStandardOccupancyAdjustment"
      x-enumNames:
        - ExtraOccupancyAdjustment
        - NegativeOccupancyAdjustment
        - StandardOccupancyAdjustment
      x-enumDescriptions:
        - ''
        - ''
        - ''
    AgeCategoryClassificationEnum:
      title: Age category classification
      enum:
        - Adult
        - Child
      type: string
      description: "\n\nAdult\n\nChild"
      x-enumNames:
        - Adult
        - Child
      x-enumDescriptions:
        - ''
        - ''
    AgeCategoryParameters:
      title: AgeCategoryParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        AgeCategoryIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Age categories](https://mews-systems.gitbook.io/connector-api/operations/#age-category).'
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of `Service` associated with the age categories. If not provided, defaults to all bookable services.'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the age category was updated.
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: AgeCategoryParameters
    AgeCategoryResult:
      title: AgeCategoryResult
      required:
        - AgeCategories
      type: object
      properties:
        AgeCategories:
          type: array
          items:
            $ref: '#/components/schemas/AgeCategory'
          description: Age category of the enterprise.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AgeCategoryResult
    AllowanceProfitTypeEnum:
      title: Allowance profit type
      enum:
        - AllowanceBreakage
        - AllowanceContraBreakage
        - AllowanceLoss
        - AllowanceContraLoss
      type: string
      description: "\n\nAllowanceBreakage (Profit of the allowance product.)\n\nAllowanceContraBreakage (Accounting balance for profit of the allowance product.)\n\nAllowanceLoss (Loss of the allowance product.)\n\nAllowanceContraLoss (Accounting balance for loss of the allowance product.)"
      x-enumNames:
        - AllowanceBreakage
        - AllowanceContraBreakage
        - AllowanceLoss
        - AllowanceContraLoss
      x-enumDescriptions:
        - Profit of the allowance product.
        - Accounting balance for profit of the allowance product.
        - Loss of the allowance product.
        - Accounting balance for loss of the allowance product.
    AlternativePaymentMethodDeprecated:
      title: Alternative payment methods
      enum:
        - Ideal
        - ApplePay
        - GooglePay
      type: string
    AlternativePaymentMethodEnum:
      title: Alternative payment method data discriminator
      enum:
        - Ideal
        - ApplePay
        - GooglePay
        - SepaDirectDebit
      type: string
      description: "\n\nIdeal (iDEAL data.)\n\nApplePay (No additional data.)\n\nGooglePay (No additional data.)\n\nSepaDirectDebit (SEPA Direct Debit data.)"
      x-enumNames:
        - Ideal
        - ApplePay
        - GooglePay
        - SepaDirectDebit
      x-enumDescriptions:
        - iDEAL data.
        - No additional data.
        - No additional data.
        - SEPA Direct Debit data.
    AlternativePaymentParameters:
      title: AlternativePaymentParameters
      required:
        - AccessToken
        - Amount
        - Client
        - ClientToken
        - CustomerId
        - Data
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        CustomerId:
          type: string
          description: 'Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).'
          format: uuid
        Amount:
          title: Amount parameters
          allOf:
            - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
        Method:
          anyOf:
            - $ref: '#/components/schemas/AlternativePaymentMethodDeprecated'
          description: Payment method to use for the alternative payment.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `Data` instead.
        RedirectUrl:
          type: string
          description: URL where the customer will be redirected after completing their payment.
          format: uri
          nullable: true
          deprecated: true
          x-deprecatedMessage: Pass redirect URL to relevant method in `Data` instead.
        ReservationId:
          type: string
          description: Unique identifier of the reservation the payment belongs to.
          format: uuid
          nullable: true
        Data:
          title: Alternative payment method data
          allOf:
            - $ref: '#/components/schemas/AlternativePaymentsData'
          description: Data specific to particular alternative payment method.
      additionalProperties: false
      x-schema-id: AlternativePaymentParameters
    AlternativePaymentResult:
      title: AlternativePaymentResult
      required:
        - PaymentId
      type: object
      properties:
        PaymentId:
          type: string
          description: Unique identifier of the created payment.
          format: uuid
        NextAction:
          title: Alternative payment next action
          allOf:
            - $ref: '#/components/schemas/NextAction'
          description: Next action to take in order to complete the payment.
          nullable: true
      additionalProperties: false
      x-schema-id: AlternativePaymentResult
    AlternativePaymentsData:
      title: Alternative payment method data
      required:
        - Discriminator
      type: object
      properties:
        Discriminator:
          title: Alternative payment method data discriminator
          allOf:
            - $ref: '#/components/schemas/AlternativePaymentMethodEnum'
          description: "Type of alternative payment method (e.g. `Ideal`).\n\nIdeal (iDEAL data.)\n\nApplePay (No additional data.)\n\nGooglePay (No additional data.)\n\nSepaDirectDebit (SEPA Direct Debit data.)"
          x-enumNames:
            - Ideal
            - ApplePay
            - GooglePay
            - SepaDirectDebit
          x-enumDescriptions:
            - iDEAL data.
            - No additional data.
            - No additional data.
            - SEPA Direct Debit data.
        SepaDirectDebit:
          title: SEPA Direct Debit data
          allOf:
            - $ref: '#/components/schemas/SepaDirectDebitData'
          description: SEPA Direct Debit payment method data. Required when `Discriminator` is `SepaDirectDebit`.
          nullable: true
        Ideal:
          title: iDEAL data
          allOf:
            - $ref: '#/components/schemas/IdealData'
          description: iDEAL payment method data. Required when `Discriminator` is `Ideal`.
          nullable: true
      additionalProperties: false
      x-schema-id: AlternativePaymentsData
    Amount:
      title: Amount
      required:
        - Breakdown
        - Currency
        - GrossValue
        - NetValue
        - TaxValues
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          description: 'ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).'
          format: currency
        NetValue:
          type: number
          description: Net value without taxes.
          format: double
        GrossValue:
          type: number
          description: Gross value including all taxes.
          format: double
        TaxValues:
          type: array
          items:
            $ref: '#/components/schemas/TaxValue'
          description: The tax values applied.
        Breakdown:
          title: Tax breakdown
          allOf:
            - $ref: '#/components/schemas/TaxBreakdown'
          description: Information about individual tax amounts.
      additionalProperties: false
      description: ''
      x-schema-id: Amount
    AmountParameters:
      title: Amount parameters
      required:
        - Currency
        - TaxCodes
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          format: currency
        TaxCodes:
          type: array
          items:
            type: string
        NetValue:
          type: number
          format: double
          nullable: true
        GrossValue:
          type: number
          format: double
          nullable: true
      additionalProperties: false
      description: Price of the product that overrides the price defined in Mews.
      x-schema-id: AmountParameters
    AssignedRateIds:
      title: Assigned rate ids
      type: object
      properties:
        Value:
          maxItems: 10
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of Rates (or `null` should it not be updated).
          nullable: true
      additionalProperties: false
      description: 'Has same structure as [Array of strings update value](https://mews-systems.gitbook.io/connector-api/operations/_objects#array-of-strings-update-value).'
      x-schema-id: AssignedRateIds
    AssociatedAccountIdsUpdate:
      title: Associated account IDs update parameters
      type: object
      properties:
        Value:
          maxItems: 1
          minItems: 0
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Customer` or `Company` that are associated to the bill. Set to `null` to remove all associated accounts. Note that only single associated account is currently supported.
          nullable: true
      additionalProperties: false
      description: 'Has same structure as [Array of strings update value](https://mews-systems.gitbook.io/connector-api/operations/_objects#array-of-strings-update-value).'
      x-schema-id: AssociatedAccountIdsUpdate
    AvailabilityAdjustment:
      title: Availability adjustment
      required:
        - ActivityState
        - FirstTimeUnitStartUtc
        - Id
        - IsActive
        - LastTimeUnitStartUtc
        - ResourceCategoryId
        - UnitCount
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: 'Unique identifier of the [Availability adjustment](https://mews-systems.gitbook.io/connector-api/operations/#availability-adjustment).'
          format: uuid
        AvailabilityBlockId:
          type: string
          description: 'Unique identifier of the [Availability block](https://mews-systems.gitbook.io/connector-api/operations/availabilityblocks/#availability-block) which the availability adjustment belongs to.'
          format: uuid
          nullable: true
        ResourceCategoryId:
          type: string
          description: 'Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category) whose availability is updated.'
          format: uuid
        StartUtc:
          type: string
          description: Start of the interval in UTC timezone in ISO 8601 format.
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          description: End of the interval in UTC timezone in ISO 8601 format.
          nullable: true
          deprecated: true
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), in UTC timezone ISO 8601 format.'
          format: date-time
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/operations/services/#time-unit), in UTC timezone ISO 8601 format.'
          format: date-time
        UnitCount:
          type: integer
          description: Adjustment value applied on the interval.
          format: int32
        ActivityState:
          title: Activity State
          allOf:
            - $ref: '#/components/schemas/ActivityStateEnum'
          description: "Shows whether the availability adjustment is active or deleted.\n\nDeleted\n\nActive"
          deprecated: true
          x-enumNames:
            - Deleted
            - Active
          x-enumDescriptions:
            - ''
            - ''
          x-deprecatedMessage: Use `IsActive` instead.
        ReleaseOverrideUtc:
          type: string
          description: Exact moment the availability adjustment is released if set; overrides the release strategy of the associated availability block.
          format: date-time
          nullable: true
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the adjustment in UTC timezone in ISO 8601 format.
          format: date-time
        IsActive:
          type: boolean
          description: Whether the availability adjustment is still active.
        PaxCounts:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/PaxCount'
          description: Collection of predicted occupancy of availability adjustments. Relates to how many adjustments are assigned to each count of guests.
          nullable: true
        FirstTimeUnitReleaseUtc:
          type: string
          description: 'Exact moment the first time unit of the availability adjustment is released based on `ReleaseOverrideUtc` or the `ReleaseStrategy` of the associated availability block, or the `OperationalEditableHistoryInterval` of the associated enterprise if not set, or `null` if `AvailabilityBlockId` is `null`.'
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityAdjustment
    AvailabilityAdjustmentParameters:
      title: AvailabilityAdjustmentParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        AvailabilityAdjustmentIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the requested [Availability adjustments](https://mews-systems.gitbook.io/connector-api/operations/#availability-adjustment).'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the availability adjustments were updated.
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityState'
          description: 'Whether to return only active, only deleted, or both types of record. If not specified, only active records will be returned.'
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityAdjustmentParameters
    AvailabilityAdjustmentResult:
      title: AvailabilityAdjustmentResult
      required:
        - AvailabilityAdjustments
      type: object
      properties:
        AvailabilityAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityAdjustment'
          description: Availability adjustments.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityAdjustmentResult
    AvailabilityBlock:
      title: Availability block
      required:
        - AvailabilityBlockNumber
        - CreatedUtc
        - FirstTimeUnitStartUtc
        - IsActive
        - LastTimeUnitStartUtc
        - PickupDistribution
        - ReleaseStrategy
        - State
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the availability block.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises#enterprise).'
          format: uuid
        ServiceId:
          type: string
          description: Unique identifier of the `Service` the block is assigned to.
          format: uuid
        RateId:
          type: string
          description: Unique identifier of the `Rate` the block is assigned to.
          format: uuid
        VoucherId:
          type: string
          description: Unique identifier of the `Voucher` used to access specified private `Rate`.
          format: uuid
          nullable: true
        BookerId:
          type: string
          description: Unique identifier of the `Customer` on whose behalf the block was made.
          format: uuid
          nullable: true
        CompanyId:
          type: string
          description: Unique identifier of the `Company` linked to the block.
          format: uuid
          nullable: true
        TravelAgencyId:
          type: string
          description: Unique identifier of `Company`with `Travel agency contract` the Availability Block is related to.
          format: uuid
          nullable: true
        Budget:
          title: Currency value (ver 2018-06-07)
          allOf:
            - $ref: '#/components/schemas/CurrencyValueOld'
          description: The tentative budget for the total price of reservations in the block.
          nullable: true
        State:
          title: Availability block state
          allOf:
            - $ref: '#/components/schemas/AvailabilityBlockStateEnum'
          description: "State of the availability block.\n\nConfirmed (The block deducts availability and can have reservations assigned.)\n\nOptional (The block deducts availability and cannot have reservations assigned.)\n\nInquired (The block does not deduct availability and cannot have reservations assigned (waitlist).)\n\nCanceled (The block does not deduct availability and cannot have reservations assigned (waitlist).)"
          x-enumNames:
            - Confirmed
            - Optional
            - Inquired
            - Canceled
          x-enumDescriptions:
            - The block deducts availability and can have reservations assigned.
            - The block deducts availability and cannot have reservations assigned.
            - The block does not deduct availability and cannot have reservations assigned (waitlist).
            - The block does not deduct availability and cannot have reservations assigned (waitlist).
        ReservationPurpose:
          allOf:
            - $ref: '#/components/schemas/ReservationPurposeEnum'
          description: "The purpose of the block.\n\nLeisure\n\nBusiness\n\nStudent"
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the block in UTC timezone in ISO 8601 format.
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the block in UTC timezone in ISO 8601 format.
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first time unit, in UTC timezone ISO 8601 format. See [Time units](https://mews-systems.gitbook.io/connector-api/concepts/time-units).'
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last time unit, in UTC timezone ISO 8601 format. See [Time units](https://mews-systems.gitbook.io/connector-api/concepts/time-units).'
        ReleasedUtc:
          type: string
          description: The moment when the block and its availability is released in UTC timezone in ISO 8601 format. Mutually exclusive with `RollingReleaseOffset`; the block will not be automatically released if neither `ReleasedUtc` nor `RollingReleaseOffsetUtc` is specified.
          nullable: true
        RollingReleaseOffset:
          type: string
          description: 'Exact offset from the start of availability adjustments to the moment the individual days in the adjustment should be released, in ISO 8601 duration format. Mutually exclusive with `ReleasedUtc`; the block will not be automatically released if neither `ReleasedUtc` nor `RollingReleaseOffsetUtc` is specified.'
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the block from external system.
          nullable: true
        Name:
          type: string
          description: The name of the block in Mews.
          nullable: true
        Notes:
          type: string
          description: Additional notes of the block.
          nullable: true
        PickupDistribution:
          title: Pickup distribution
          allOf:
            - $ref: '#/components/schemas/PickupDistributionEnum'
          description: "Whether assigning spaces to reservations within an availability block is done as a single group or divided into individual groups.\n\nAllInOneGroup (All created reservations in the block are added to the same reservation group.)\n\nIndividualGroups (Reservations can be picked up in multiple groups, with up to 750 reservations per group.)"
          x-enumNames:
            - AllInOneGroup
            - IndividualGroups
          x-enumDescriptions:
            - All created reservations in the block are added to the same reservation group.
            - 'Reservations can be picked up in multiple groups, with up to 750 reservations per group.'
        IsActive:
          type: boolean
          description: Whether the `Availability Block` is still active.
        QuoteId:
          type: string
          description: Unique identifier of the Mews Events quote associated with the availability block.
          format: uuid
          nullable: true
        AvailabilityBlockNumber:
          minLength: 1
          type: string
          description: Unique number for a specific availability block within the Mews system.
        ReleaseStrategy:
          title: Release strategy
          allOf:
            - $ref: '#/components/schemas/ReleaseStrategyEnum'
          description: "The strategy for automatic release of the availability block.\n\nFixedRelease (The availability block is released at a fixed time.)\n\nRollingRelease (Each availability adjustment is released at a fixed offset from its start.)\n\nNone (The availability block is not automatically released.)"
          x-enumNames:
            - FixedRelease
            - RollingRelease
            - None
          x-enumDescriptions:
            - The availability block is released at a fixed time.
            - Each availability adjustment is released at a fixed offset from its start.
            - The availability block is not automatically released.
        PurchaseOrderNumber:
          type: string
          description: Unique number of the purchase order. This number is propagated to any newly picked up `Reservation` within the block.
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityBlock
    AvailabilityBlockAddParameters:
      title: Availability block parameters
      required:
        - FirstTimeUnitStartUtc
        - LastTimeUnitStartUtc
        - RateId
        - ServiceId
        - State
      type: object
      properties:
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services#service) to assign block to.'
          format: uuid
        RateId:
          type: string
          description: 'Unique identifier of the [Rate](https://mews-systems.gitbook.io/connector-api/operations/rates#rate) to assign block to.'
          format: uuid
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first time unit, in UTC timezone ISO 8601 format.'
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the first time unit, in UTC timezone ISO 8601 format.'
        ReleasedUtc:
          type: string
          description: 'The moment when the block and its availability is released, in UTC timezone ISO 8601 format. Takes precedence over `RollingReleaseOffset`.'
          format: date-time
          nullable: true
        RollingReleaseOffset:
          type: string
          description: 'Exact offset from the start of availability adjustments to the moment the availability adjustment should be released, in ISO 8601 duration format. Ignored if `ReleasedUtc` is specified.'
          nullable: true
        Name:
          type: string
          description: The name of the block.
          nullable: true
        VoucherCode:
          type: string
          description: 'Voucher code providing access to specified private [Rate](https://mews-systems.gitbook.io/connector-api/operations/rates#rate).'
          nullable: true
        BookerId:
          type: string
          description: Unique identifier of the Booker as a creator of an availability block.
          format: uuid
          nullable: true
        CompanyId:
          type: string
          description: 'Unique identifier of [Company](https://mews-systems.gitbook.io/connector-api/operations/companies#company).'
          format: uuid
          nullable: true
        TravelAgencyId:
          type: string
          description: Unique identifier of travel agency (`Company` with a `TravelAgencyContract`).
          format: uuid
          nullable: true
        Budget:
          title: Currency value (ver 2018-06-07)
          allOf:
            - $ref: '#/components/schemas/CurrencyValueOld'
          description: The tentative budget for the total price of reservations.
          nullable: true
        ReservationPurpose:
          allOf:
            - $ref: '#/components/schemas/ReservationPurposeEnum'
          description: "The purpose of the block.\n\nLeisure\n\nBusiness\n\nStudent"
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the block from external system.
          nullable: true
        Notes:
          type: string
          description: Additional notes of the block.
          nullable: true
        State:
          allOf:
            - $ref: '#/components/schemas/AvailabilityBlockStateEnum'
          description: "State of the availability block.\n\nConfirmed (The block deducts availability and can have reservations assigned.)\n\nOptional (The block deducts availability and cannot have reservations assigned.)\n\nInquired (The block does not deduct availability and cannot have reservations assigned (waitlist).)\n\nCanceled (The block does not deduct availability and cannot have reservations assigned (waitlist).)"
        QuoteId:
          type: string
          description: Unique identifier of the Mews Events quote associated with the availability block.
          format: uuid
          nullable: true
        PurchaseOrderNumber:
          type: string
          description: Unique number of the purchase order. This number is propagated to any newly picked up `Reservation` within the block.
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityBlockAddParameters
    AvailabilityBlockAddResult:
      title: AvailabilityBlockAddResult
      required:
        - AvailabilityBlocks
      type: object
      properties:
        AvailabilityBlocks:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityBlock'
          description: Availability blocks.
      additionalProperties: false
      x-schema-id: AvailabilityBlockAddResult
    AvailabilityBlockAssignment:
      title: AvailabilityBlockAssignment
      type: object
      properties:
        RateId:
          type: string
          format: uuid
        AvailabilityBlockId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: AvailabilityBlockAssignment
    AvailabilityBlockDeleteParameters:
      title: AvailabilityBlockDeleteParameters
      required:
        - AccessToken
        - AvailabilityBlockIds
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        AvailabilityBlockIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifier of the Availability block to delete.
      additionalProperties: false
      x-schema-id: AvailabilityBlockDeleteParameters
    AvailabilityBlockExtent:
      title: Availability block extent
      type: object
      properties:
        AvailabilityBlocks:
          type: boolean
          description: Whether the response should contain the general availability blocks.
          nullable: true
        Adjustments:
          type: boolean
          description: Whether the response should contain individual availability adjustments related to availability blocks.
          nullable: true
        ServiceOrders:
          type: boolean
          description: Whether the response should contain reservations related to availability blocks.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Get all reservations (ver 2023-06-06)](https://mews-systems.gitbook.io/connector-api/operations/reservations#get-all-reservations-ver-2023-06-06) instead.'
        Rates:
          type: boolean
          description: Whether the response should contain rates related to availability blocks.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Get all rates](https://mews-systems.gitbook.io/connector-api/operations/rates#get-all-rates) instead.'
      additionalProperties: false
      description: ''
      x-schema-id: AvailabilityBlockExtent
    AvailabilityBlockParameters:
      title: AvailabilityBlockParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        Extent:
          title: Availability block extent
          allOf:
            - $ref: '#/components/schemas/AvailabilityBlockExtent'
          description: 'Extent of data to be returned, e.g. it is possible to specify that related service orders (for example reservations) are returned.'
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Services` to which `Availability blocks` are assigned.
          nullable: true
        AvailabilityBlockIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the requested `Availability blocks`.
          nullable: true
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the availability blocks were created.
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Availability blocks` were updated.
          nullable: true
          x-max-interval-in-months: 3
        CollidingUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Availability blocks` are active.
          nullable: true
          x-max-interval-in-months: 3
        ReleasedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Availability blocks`are released.
          nullable: true
          x-max-interval-in-months: 3
        ExternalIdentifiers:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: Identifiers of `Availability blocks` from external systems.
          nullable: true
        States:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityBlockStateEnum'
          description: States the availability blocks should be in.
          nullable: true
        ActivityStates:
          type: array
          items:
            type: string
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityBlockParameters
    AvailabilityBlockResult:
      title: AvailabilityBlockResult
      type: object
      properties:
        AvailabilityBlocks:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityBlock'
          description: Availability blocks.
          nullable: true
        ServiceOrders:
          type: array
          items:
            $ref: '#/components/schemas/ReservationOld'
          description: Service orders (for example reservations) linked to availability blocks.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Get all reservations (ver 2023-06-06)](https://mews-systems.gitbook.io/connector-api/operations/reservations#get-all-reservations-ver-2023-06-06) instead.'
        Adjustments:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityAdjustment'
          description: Availability adjustments of availability blocks.
          nullable: true
        Rates:
          type: array
          items:
            $ref: '#/components/schemas/RateForExtent'
          description: '`Rates` assigned to the block.'
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Get all rates](https://mews-systems.gitbook.io/connector-api/operations/rates#get-all-rates) instead.'
        Cursor:
          type: string
          description: Unique identifier of the last returned availability block. This can be used in Limitation in a subsequent request to fetch the next batch of availability block.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityBlockResult
    AvailabilityBlockStateEnum:
      title: Availability block state
      enum:
        - Confirmed
        - Optional
        - Inquired
        - Canceled
      type: string
      description: "\n\nConfirmed (The block deducts availability and can have reservations assigned.)\n\nOptional (The block deducts availability and cannot have reservations assigned.)\n\nInquired (The block does not deduct availability and cannot have reservations assigned (waitlist).)\n\nCanceled (The block does not deduct availability and cannot have reservations assigned (waitlist).)"
      x-enumNames:
        - Confirmed
        - Optional
        - Inquired
        - Canceled
      x-enumDescriptions:
        - The block deducts availability and can have reservations assigned.
        - The block deducts availability and cannot have reservations assigned.
        - The block does not deduct availability and cannot have reservations assigned (waitlist).
        - The block does not deduct availability and cannot have reservations assigned (waitlist).
    AvailabilityBlockUpdateParameters:
      title: Availability block update parameters
      type: object
      properties:
        AvailabilityBlockId:
          type: string
          description: 'Unique identifier of the [Availability block](https://mews-systems.gitbook.io/connector-api/operations/availabilityblocks#availability-block).'
          format: uuid
        Name:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: The name of the block (or `null` if the name should not be updated).
          nullable: true
        FirstTimeUnitStartUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: 'Start of the time interval, expressed as the timestamp for the start of the first time unit, in UTC timezone ISO 8601 format (or `null` if the start time should not be updated).'
          nullable: true
        LastTimeUnitStartUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: 'End of the time interval, expressed as the timestamp for the start of the last time unit, in UTC timezone ISO 8601 format (or `null` if the end time should not be updated).'
          nullable: true
        ExternalIdentifier:
          title: String update value
          maxLength: 255
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Identifier of the block from external system (or `null` if the identifier should not be updated).
          nullable: true
        State:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: State of the availability block (or `null` if not updated).
          nullable: true
        ReservationPurpose:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: The purpose of the block (or `null` if not updated).
          nullable: true
        CompanyId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: 'Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies#company) (or `null` if not updated).'
          nullable: true
        TravelAgencyId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Unique identifier of the travel agency (i.e. `Company`; or `null` if not updated).
          nullable: true
        BookerId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Unique identifier of the Booker as a creator of an availability block (or `null` if not updated).
          nullable: true
        Notes:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Additional notes of the block (or `null` if not updated).
          nullable: true
        Budget:
          title: Currency value (ver 2018-06-07) update value
          allOf:
            - $ref: '#/components/schemas/UpdateValueCurrencyValueOld'
          description: The tentative budget for the total price of reservations (or `null` if not updated).
          nullable: true
        CancellationReason:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Cancellation reason of the availability block (or `null` if not updated).
          nullable: true
        CancellationReasonDetail:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Cancellation reason detail of the availability block (or `null` if not updated).
          nullable: true
        RollingReleaseOffset:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: 'Exact offset from the start of availability adjustments to the moment the availability adjustment should be released, in ISO 8601 duration format. Required if `ReleaseStrategy` is set to `RollingRelease`, ignored otherwise.'
          nullable: true
        ReleasedUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: 'The moment when the block and its availability is released, in UTC timezone ISO 8601 format. Required if `ReleaseStrategy` is set to `FixedRelease`, or used when `ReleaseStrategy` update is unspecified.'
          format: date-time
          nullable: true
        ReleaseStrategy:
          title: Release strategy update value
          allOf:
            - $ref: '#/components/schemas/ReleaseStrategyUpdateValue'
          description: The strategy for automatic release of the availability block (or `null` if not updated).
          nullable: true
        QuoteId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Unique identifier of the Mews Events quote associated with the availability block (or `null` if not updated).
          nullable: true
        PurchaseOrderNumber:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Unique number of the purchase order. This number is propagated to any newly picked up `Reservation` within the block.
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityBlockUpdateParameters
    BaseRatePricingData:
      title: Base rate pricing
      required:
        - Amount
      type: object
      properties:
        Amount:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: Price of the product that overrides the price defined in Mews.
      additionalProperties: false
      x-schema-id: BaseRatePricingData
    BaseRatePricingParametersWithOccupancyAdjustments:
      title: Base rate pricing parameters (with occupancy adjustments)
      required:
        - Amount
      type: object
      properties:
        Amount:
          title: Amount parameters
          allOf:
            - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
        NegativeOccupancyAdjustment:
          type: number
          description: 'This is the amount added to the price when occupancy of the space is less than the Space Category Capacity. To provide a discount price for under-occupancy, simply use a negative value.'
          format: double
        ExtraOccupancyAdjustment:
          type: number
          description: This is the amount added to the price when the Space Category Capacity is exceeded.
          format: double
      additionalProperties: false
      x-schema-id: BaseRatePricingParametersWithOccupancyAdjustments
    BaseRatePricingWithoutAdjustmentsParameters:
      title: Base rate pricing parameters (without occupancy adjustments)
      required:
        - Amount
      type: object
      properties:
        Amount:
          title: Amount parameters
          allOf:
            - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
      additionalProperties: false
      x-schema-id: BaseRatePricingWithoutAdjustmentsParameters
    Bill:
      title: Bill
      required:
        - AccountId
        - AccountType
        - AssociatedAccountIds
        - CorrectionState
        - CreatedUtc
        - EnterpriseId
        - Id
        - OrderItems
        - PaymentItems
        - Payments
        - Revenue
        - State
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the bill.
          format: uuid
        Name:
          type: string
          description: Name of the bill.
          nullable: true
        EnterpriseId:
          type: string
          description: Unique identifier of the `Enterprise`.
          format: uuid
        AccountId:
          type: string
          description: Unique identifier of the account (`Customer` or `Company`) the bill is issued to.
          format: uuid
        AccountType:
          title: Account type
          allOf:
            - $ref: '#/components/schemas/AccountTypeEnum'
          description: "A discriminator specifying the [type of account](https://mews-systems.gitbook.io/connector-api/operations/accounts/#account-type), i.e. `Customer` or `Company`.\n\nCompany\n\nCustomer"
          x-enumNames:
            - Company
            - Customer
          x-enumDescriptions:
            - ''
            - ''
        CustomerId:
          type: string
          description: Unique identifier of the `Customer` the bill is issued to.
          format: uuid
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AccountId` instead.
        CompanyId:
          type: string
          description: Unique identifier of the `Company` specified in `CompanyDetails` or the `Company` the bill is issued to.
          format: uuid
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AssociatedAccountIds` instead.
        AssociatedAccountIds:
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Customers` or `Companies` that are associated to the bill.
          nullable: true
        CounterId:
          type: string
          description: Unique identifier of the bill `Counter`.
          format: uuid
          nullable: true
        State:
          $ref: '#/components/schemas/BillState'
        Type:
          $ref: '#/components/schemas/BillType'
        Number:
          type: string
          description: Number of the bill.
          nullable: true
        VariableSymbol:
          type: string
          description: Variable symbol of the bill.
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Date and time of the bill creation in UTC timezone in ISO 8601 format.
          format: date-time
        IssuedUtc:
          type: string
          description: Date and time of the bill issuance in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        TaxedUtc:
          type: string
          description: Taxation date of the bill in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        PaidUtc:
          type: string
          description: Date when the bill was paid in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        DueUtc:
          type: string
          description: Bill due date and time in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        LastReminderDateUtc:
          type: string
          description: 'Date and time when an email reminder to pay an invoice was last sent, in UTC timezone in ISO 8601 format.'
          format: date-time
          nullable: true
        UpdatedUtc:
          minLength: 1
          type: string
          description: 'Date and time when the bill was last updated, in UTC timezone in ISO 8601 format.'
          format: date-time
        PurchaseOrderNumber:
          type: string
          description: Unique number of the purchase order from the buyer.
          nullable: true
        Notes:
          type: string
          description: Additional notes.
          nullable: true
        Options:
          title: Bill options
          allOf:
            - $ref: '#/components/schemas/BillOptions'
          description: Options of the bill.
          nullable: true
        Revenue:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `orderItems/getAll` with `BillId` instead.
        Payments:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `payments/getAll` with `BillId` instead.
        OrderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemOld'
          description: The order items (consumed items such as nights or products) on the bill.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `orderItems/getAll` with `BillId` instead.
        PaymentItems:
          type: array
          items:
            $ref: '#/components/schemas/PaymentItemOld'
          description: 'The payment items (such as cash, credit card payments or invoices) on the bill.'
          nullable: true
          deprecated: true
        AssigneeData:
          title: Bill assignee data
          type: object
          properties:
            Discriminator:
              $ref: '#/components/schemas/BillAssigneeDataDiscriminator'
            Value:
              oneOf:
                - $ref: '#/components/schemas/BillCompanyData'
                - $ref: '#/components/schemas/BillCustomerData'
          deprecated: true
          x-coproduct: true
          x-schema-id: BillAssigneeDataCoproductOfBillAssigneeDataDiscriminator
          x-deprecatedMessage: Use `OwnerData` instead.
        OwnerData:
          title: Bill owner data
          type: object
          properties:
            Discriminator:
              $ref: '#/components/schemas/BillAssigneeDataDiscriminator'
            Value:
              oneOf:
                - $ref: '#/components/schemas/BillCompanyData'
                - $ref: '#/components/schemas/BillCustomerData'
          description: 'Additional information about owner of the bill. Can be a [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company). Persisted at the time of closing of the bill.'
          x-coproduct: true
          x-schema-id: BillOwnerDataCoproductOfBillAssigneeDataDiscriminator
        CompanyDetails:
          title: Bill company data
          allOf:
            - $ref: '#/components/schemas/BillCompanyData'
          description: Additional information about the company assigned to the bill. Not the same as the owner. Persisted at the time of closing of the bill.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AssociatedAccountData` instead.
        AssociatedAccountData:
          type: array
          items:
            $ref: '#/components/schemas/BillAccountData'
          description: 'Additional information about the associated account of the bill. Can be a `Customer` or `Company`. Persisted at the time of closing of the bill. Currently only one account can be associated with a bill, but this may be extended in future.'
          nullable: true
        EnterpriseData:
          title: Bill enterprise data
          allOf:
            - $ref: '#/components/schemas/BillEnterpriseData'
          description: 'Additional information about the enterprise issuing the bill, including bank account details. Persisted at the time of closing of the bill.'
          nullable: true
        CorrectionState:
          title: Bill correction state
          allOf:
            - $ref: '#/components/schemas/BillCorrectionStateEnum'
          description: "Whether the bill is a regular bill or a corrective bill.\n\nBill (Regular bill.)\n\nCorrectiveBill (Corrective bill, i.e. the `CorrectionType` is either `Edit`, `Cancellation`, or `ReceivablePaymentsBalance`.)"
          x-enumNames:
            - Bill
            - CorrectiveBill
          x-enumDescriptions:
            - Regular bill.
            - 'Corrective bill, i.e. the `CorrectionType` is either `Edit`, `Cancellation`, or `ReceivablePaymentsBalance`.'
        CorrectionType:
          allOf:
            - $ref: '#/components/schemas/BillCorrectionTypeEnum'
          description: "Type of correction.\n\nCancellation\n\nEdit\n\nCreditNote\n\nReinstatement\n\nReceivablePaymentsBalance"
          nullable: true
        CorrectedBillId:
          type: string
          description: 'The ID of the bill that the corrective bill corrects. If the corrected bill was deleted, this field is `null`.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: Bill
    BillAccountData:
      title: Associated account bill data
      type: object
      properties:
        Discriminator:
          anyOf:
            - $ref: '#/components/schemas/BillAssigneeDataDiscriminator'
          description: Determines type of value.
          nullable: true
          readOnly: true
        BillCustomerData:
          title: Bill customer data
          allOf:
            - $ref: '#/components/schemas/BillCustomerData'
          description: Associated account bill data for customer.
          nullable: true
        BillCompanyData:
          title: Bill company data
          allOf:
            - $ref: '#/components/schemas/BillCompanyData'
          description: Associated account bill data for company.
          nullable: true
          readOnly: true
      additionalProperties: false
      x-schema-id: BillAccountData
    BillAddParameters:
      title: Bill parameters
      required:
        - AccountId
      type: object
      properties:
        AccountId:
          type: string
          description: Unique identifier of the account (`Customer` or `Company`) the bill is issued to. Company billing may not be enabled for your integration.
          format: uuid
        AssociatedAccountId:
          type: string
          description: Account that has a possible link with the owner of the bill.
          format: uuid
          nullable: true
        Name:
          type: string
          description: Name of the newly created bill.
          nullable: true
      additionalProperties: false
      x-schema-id: BillAddParameters
    BillAssigneeDataDiscriminator:
      title: Bill associated account data discriminator
      enum:
        - BillCustomerData
        - BillCompanyData
      type: string
      description: ''
    BillCloseAccountParameters:
      title: Bill close account parameters
      required:
        - Id
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the associated account (`Customer` or `Company`) the bill is associated to.
          format: uuid
        TaxIdentifier:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Tax identifier of the associated account to be put on a bill.
          nullable: true
        Address:
          title: Address parameters
          allOf:
            - $ref: '#/components/schemas/AddressParameters'
          description: Address of the associated account to be displayed on bill. Overrides the default one taken from account profile.
          nullable: true
      additionalProperties: false
      x-schema-id: BillCloseAccountParameters
    BillCloseParameters:
      title: BillCloseParameters
      required:
        - AccessToken
        - BillId
        - Client
        - ClientToken
        - Type
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        BillId:
          type: string
          description: 'Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/#bill) to be closed.'
          format: uuid
        Type:
          $ref: '#/components/schemas/BillType'
        BillCounterId:
          type: string
          description: 'Unique identifier of the [Counter](https://mews-systems.gitbook.io/connector-api/operations/counters/#counter) to be used for closing. Default one is used when no value is provided.'
          format: uuid
          nullable: true
        FiscalMachineId:
          type: string
          description: 'Unique identifier of the [Fiscal Machine](https://mews-systems.gitbook.io/connector-api/operations/devices/#device) to be used for closing. Default one is used when no value is provided.'
          format: uuid
          nullable: true
        Options:
          title: Bill options parameters
          allOf:
            - $ref: '#/components/schemas/BillOptionsParameters'
          description: 'Options of the bill. If not provided, both DisplayCustomer and DisplayTaxation are set by default.'
          nullable: true
        TaxedDate:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Date of consumption for tax purposes. Can be used only with `Type` of `Invoice`.
          nullable: true
        DueDate:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Deadline when bill is due to be paid. Can be used only with `Type` of `Invoice`.
          nullable: true
        VariableSymbol:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Optional unique identifier of requested payment. Can be used only with `Type` of `Invoice`.
          nullable: true
        TaxIdentifier:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Tax identifier of account to be put on a bill.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AccountTaxIdentifier` or `AssociatedAccountData` instead.
        AccountTaxIdentifier:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Tax identifier of account to be put on a bill.
          nullable: true
        CompanyTaxIdentifier:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Tax identifier of company to be put on a bill.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AccountTaxIdentifier` or `AssociatedAccountData` instead.
        PurchaseOrderNumber:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Unique number of the purchase order from the buyer.
          nullable: true
        Notes:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Notes to be attached to bill.
          nullable: true
        Address:
          title: Address parameters
          allOf:
            - $ref: '#/components/schemas/AddressParameters'
          description: Address of the account to be displayed on bill. Overrides the default one taken from account profile.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AccountAddress` or `AssociatedAccountData` instead.
        AccountAddress:
          title: Address parameters
          allOf:
            - $ref: '#/components/schemas/AddressParameters'
          description: Address of the account to be displayed on bill. Overrides the default one taken from account profile.
          nullable: true
        AssociatedAccountData:
          maxItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BillCloseAccountParameters'
          description: Account data of the associated account on a bill. Currently one object is supported and only populated when the bill is closed.
          nullable: true
      additionalProperties: false
      x-schema-id: BillCloseParameters
    BillCompanyData:
      title: Bill company data
      required:
        - Id
        - Name
      type: object
      properties:
        Id:
          type: string
          description: ID of the `Company`.
          nullable: true
        Address:
          allOf:
            - $ref: '#/components/schemas/Address'
          description: Address of the company.
          nullable: true
        LegalIdentifiers:
          type: object
          additionalProperties:
            type: string
          description: The set of `LegalIdentifiers` for the company.
          nullable: true
        BillingCode:
          type: string
          description: A unique code for Mews to list on invoices it sends to the company.
          nullable: true
        Name:
          minLength: 1
          type: string
          description: Name of the company.
        FiscalIdentifier:
          type: string
          description: Fiscal identifier of the company.
          nullable: true
        AdditionalTaxIdentifier:
          type: string
          description: Additional tax identifier of the company.
          nullable: true
        DUNS:
          type: string
          description: DUNS (Data Universal Numbering System) number of the company.
          nullable: true
        Telephone:
          type: string
          description: Company telephone number.
          nullable: true
        TaxIdentifier:
          type: string
          description: Tax identifier of the company.
          nullable: true
        InvoicingEmail:
          type: string
          description: Invoicing email of the company.
          nullable: true
        Department:
          type: string
          description: Department of the company.
          nullable: true
      additionalProperties: false
      description: ''
      x-schema-id: BillCompanyData
    BillCorrectionStateEnum:
      title: Bill correction state
      enum:
        - Bill
        - CorrectiveBill
      type: string
      description: "\n\nBill (Regular bill.)\n\nCorrectiveBill (Corrective bill, i.e. the `CorrectionType` is either `Edit`, `Cancellation`, or `ReceivablePaymentsBalance`.)"
      x-enumNames:
        - Bill
        - CorrectiveBill
      x-enumDescriptions:
        - Regular bill.
        - 'Corrective bill, i.e. the `CorrectionType` is either `Edit`, `Cancellation`, or `ReceivablePaymentsBalance`.'
    BillCorrectionTypeEnum:
      title: Bill correction type
      enum:
        - Cancellation
        - Edit
        - CreditNote
        - Reinstatement
        - ReceivablePaymentsBalance
      type: string
      description: "\n\nCancellation\n\nEdit\n\nCreditNote\n\nReinstatement\n\nReceivablePaymentsBalance"
      x-enumNames:
        - Cancellation
        - Edit
        - CreditNote
        - Reinstatement
        - ReceivablePaymentsBalance
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
    BillCustomerData:
      title: Bill customer data
      required:
        - Id
        - LastName
      type: object
      properties:
        Id:
          minLength: 1
          type: string
          description: ID of the `Customer` to whom the bill was assigned.
        Address:
          allOf:
            - $ref: '#/components/schemas/Address'
          description: Address of the customer.
          nullable: true
        LegalIdentifiers:
          type: object
          additionalProperties:
            type: string
          description: The set of `LegalIdentifiers` for the customer.
          nullable: true
        BillingCode:
          type: string
          description: A unique code for Mews to list on invoices it sends to the customer.
          nullable: true
        LastName:
          minLength: 1
          type: string
          description: Last name of the customer.
        FirstName:
          type: string
          description: First name of the customer.
          nullable: true
        SecondLastName:
          type: string
          description: Second last name of the customer.
          nullable: true
        TitlePrefix:
          allOf:
            - $ref: '#/components/schemas/Title'
          description: "Title prefix of the customer.\n\nMister (Mr.)\n\nMiss (Ms.)\n\nMisses (Mrs.)"
          nullable: true
        TaxIdentifier:
          type: string
          description: Tax identifier of the customer.
          nullable: true
      additionalProperties: false
      x-schema-id: BillCustomerData
    BillDeleteParameters:
      title: BillDeleteParameters
      required:
        - AccessToken
        - BillIds
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        BillIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/#bill)s to be deleted.'
      additionalProperties: false
      x-schema-id: BillDeleteParameters
    BillEnterpriseData:
      title: Bill enterprise data
      type: object
      properties:
        AdditionalTaxIdentifier:
          type: string
          description: Enterprise additional tax identifier.
          nullable: true
        CompanyName:
          type: string
          description: Enterprise company name.
          nullable: true
        BankAccount:
          type: string
          description: Enterprise bank account.
          nullable: true
        BankName:
          type: string
          description: Enterprise bank name.
          nullable: true
        Iban:
          type: string
          description: Enterprise IBAN (International Bank Account Number).
          nullable: true
        Bic:
          type: string
          description: Enterprise BIC (Bank Identifier Code).
          nullable: true
      additionalProperties: false
      description: 'Additional information about the enterprise issuing the bill, including bank account details. Persisted at the time of closing of the bill.'
      x-schema-id: BillEnterpriseData
    BillExtent:
      title: Bill extent
      type: object
      properties:
        Items:
          type: boolean
          description: Whether the response should contain payments and revenue items.
          deprecated: true
          x-deprecatedMessage: Use `orderItems/getAll` and `payments/getAll` with `BillIds` filter instead.
      additionalProperties: false
      description: 'Extent of data to be returned. E.g. it is possible to specify that together with the bills, payments and revenue items should be also returned. **Deprecated!**'
      x-schema-id: BillExtent
    BillFilterParameters:
      title: BillFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        Extent:
          title: Bill extent
          allOf:
            - $ref: '#/components/schemas/BillExtent'
          description: 'Extent of data to be returned. E.g. it is possible to specify that together with the bills, payments and revenue items should be also returned.'
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `orderItems/getAll` and `payments/getAll` with `BillIds` filter instead.
        ClosedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Bill` was closed.
          nullable: true
          x-max-interval-in-months: 3
        PaidUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Bill` was paid.
          nullable: true
          x-max-interval-in-months: 3
        DueUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Bill` is due to be paid.
          nullable: true
          x-max-interval-in-months: 3
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Bill` was created.
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Bill` was updated.
          nullable: true
          x-max-interval-in-months: 3
        BillIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Bills`. Required if no other filter is provided.
          nullable: true
        CustomerIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Customers`.
          nullable: true
        State:
          anyOf:
            - $ref: '#/components/schemas/BillState'
          description: 'State the bills should be in. If not specified, `Open` and `Closed` bills are returned.'
          nullable: true
        CorrectionState:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BillCorrectionStateEnum'
          description: 'Whether to return regular bills, corrective bills, or both. If `BillIds` are specified, defaults to both, otherwise defaults to `Bill`.'
          nullable: true
      additionalProperties: false
      x-schema-id: BillFilterParameters
    BillFiscalMachineData:
      title: Fiscal machine data
      required:
        - Discriminator
        - Value
      type: object
      properties:
        Discriminator:
          title: Fiscal machine data discriminator
          allOf:
            - $ref: '#/components/schemas/BillFiscalMachineDataDiscriminatorEnum'
          description: "Discriminator of the object.\n\nItalianFiscalMachineData"
          x-enumNames:
            - ItalianFiscalMachineData
          x-enumDescriptions:
            - ''
        Value:
          title: Fiscal machine data for Italian fiscal machine
          allOf:
            - $ref: '#/components/schemas/ItalianFiscalMachineData'
          description: Structure of the object depends on `Discriminator` (currently only `ItalianFiscalMachineData` is supported).
      additionalProperties: false
      x-schema-id: BillFiscalMachineData
    BillFiscalMachineDataDiscriminatorEnum:
      title: Fiscal machine data discriminator
      enum:
        - ItalianFiscalMachineData
      type: string
      description: "\n\nItalianFiscalMachineData"
      x-enumNames:
        - ItalianFiscalMachineData
      x-enumDescriptions:
        - ''
    BillFiscalMachinePayloadData:
      title: Fiscal machine payload
      required:
        - Discriminator
        - Value
      type: object
      properties:
        Discriminator:
          title: Fiscal machine payload discriminator
          allOf:
            - $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminatorEnum'
          description: "Discriminator of the object.\n\nItalianFiscalMachine"
          x-enumNames:
            - ItalianFiscalMachine
          x-enumDescriptions:
            - ''
        Value:
          minLength: 1
          type: string
          description: Base64-encoded data of the file to be printed.
      additionalProperties: false
      x-schema-id: BillFiscalMachinePayloadData
    BillOptions:
      title: Bill options
      type: object
      properties:
        DisplayCustomer:
          type: boolean
          description: Display customer information on a bill.
        DisplayTaxation:
          type: boolean
          description: Display taxation detail on a bill.
        TrackReceivable:
          type: boolean
          description: 'Tracking of payments is enabled for bill, only applicable for `BillType` of `Invoice`.'
        DisplayCid:
          type: boolean
          description: 'Display CID number on bill, only applicable for `BillType` of `Invoice`.'
        Rebated:
          type: boolean
          description: Whether the bill is rebated (both fully or partially).
      additionalProperties: false
      description: Options of the bill.
      x-schema-id: BillOptions
    BillOptionsParameters:
      title: Bill options parameters
      required:
        - DisplayCustomer
        - DisplayTaxation
      type: object
      properties:
        DisplayCustomer:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Display customer information on a bill.
        DisplayTaxation:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Display taxation detail on a bill.
      additionalProperties: false
      description: ''
      x-schema-id: BillOptionsParameters
    BillPdfFile:
      title: Bill PDF file
      required:
        - Base64Data
      type: object
      properties:
        Base64Data:
          minLength: 1
          type: string
          description: Base64 encoded PDF file.
      additionalProperties: false
      x-schema-id: BillPdfFile
    BillPdfParameters:
      title: BillPdfParameters
      required:
        - AccessToken
        - BillId
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        BillId:
          type: string
          description: 'Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/#bill) to be printed.'
          format: uuid
        BillPrintEventId:
          type: string
          description: 'Unique identifier of the [Bill print event](https://mews-systems.gitbook.io/connector-api/operations/#bill-print-event) returned by previous invocation.'
          format: uuid
          nullable: true
        PdfTemplate:
          allOf:
            - $ref: '#/components/schemas/FinancialDocumentPdfTemplateTypeEnum'
          description: "Bill PDF template type. If not specified, the default template is used.\n\nDetailed (Detailed overview. Items are grouped by the reservation, item type and price, and consumption date.)\n\nConsumption (Overview by date (no reservation details). Items of the same type and price are grouped by consumption date.)\n\nReservation (Overview by reservation (no date). Items of the same type and price are grouped by reservation.)\n\nOrderItem (Consumption overview (not fiscal document). Items are grouped by the item type and price without reservation details and consumption date.)\n\nGuest (Overview by guest. Items are grouped by guest, reservation, consumption date, and item type.)"
          nullable: true
        PrintReason:
          maxLength: 255
          type: string
          description: The reason for reprinting the bill with different template. Required for France LE.
          nullable: true
      additionalProperties: false
      x-schema-id: BillPdfParameters
    BillPdfResult:
      title: BillPdfResult
      type: object
      properties:
        BillId:
          type: string
          description: Unique identifier of the printed bill.
          format: uuid
        Result:
          title: Bill PDF result discriminator
          type: object
          properties:
            Discriminator:
              $ref: '#/components/schemas/BillPdfResultDiscriminator'
            Value:
              oneOf:
                - $ref: '#/components/schemas/BillPdfFile'
                - $ref: '#/components/schemas/BillPrintEvent'
          x-coproduct: true
          x-schema-id: BillPdfResultResultCoproductOfBillPdfResultDiscriminator
      additionalProperties: false
      x-schema-id: BillPdfResult
    BillPdfResultDiscriminator:
      title: Bill PDF result discriminator
      enum:
        - BillPdfFile
        - BillPrintEvent
      type: string
      description: The result of operation.
      x-enumDescriptions:
        - 'PDF version of a `Bill` was successfully created, `Value` is `BillPdfFile`.'
        - 'PDF version of a `Bill` couldn''t be created at this moment (for example bill haven''t been reported to authorities yet), `Value` is `BillPrintEvent`'
    BillPrintEvent:
      title: Bill print event
      type: object
      properties:
        BillPrintEventId:
          type: string
          description: Unique identifier of print event. Must be used in retry calls to retrieve the PDF.
          format: uuid
      additionalProperties: false
      x-schema-id: BillPrintEvent
    BillState:
      title: Bill state
      enum:
        - Open
        - Closed
      type: string
      description: Whether the bill is `Open` or `Closed`.
    BillType:
      title: Bill type
      enum:
        - Receipt
        - Invoice
      type: string
      description: 'After a bill is closed, the Bill Type is set to `Receipt` or `Invoice`. `Receipt` indicates that the bill has been fully paid and the balance is zero. `Invoice` indicates that the bill has not yet been fully paid but an invoice has been issued. Prior to closing, Bill Type should not be used.'
      x-enumDescriptions:
        - Default; the bill has been paid in full; only applicable after the bill is closed.
        - Bill has not been paid in full but an invoice has been issued to request payment.
    BillUpdateParameters:
      title: Bill update parameters
      required:
        - BillId
      type: object
      properties:
        BillId:
          type: string
          description: Unique identifier of the bill to update.
          format: uuid
        AccountId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidUpdateValue'
          description: Unique identifier of the account (`Customer` or `Company`) the bill is issued to (or null if the account should not be updated).
          nullable: true
        AssociatedAccountIds:
          title: Associated account IDs update parameters
          allOf:
            - $ref: '#/components/schemas/AssociatedAccountIdsUpdate'
          description: Unique identifiers of the `Customer` or `Company` that are associated to the bill (or null if the account should not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: BillUpdateParameters
    BillV20250623:
      title: Bill (ver 2025-06-23)
      required:
        - AccountId
        - AssociatedAccountIds
        - CorrectionState
        - CreatedUtc
        - EnterpriseId
        - Id
        - State
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the bill.
          format: uuid
        Name:
          type: string
          description: Name of the bill.
          nullable: true
        EnterpriseId:
          type: string
          description: Unique identifier of the `Enterprise`.
          format: uuid
        AccountId:
          type: string
          description: Unique identifier of the account (`Customer` or `Company`) the bill is issued to.
          format: uuid
        AssociatedAccountIds:
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Customers` or `Companies` that are associated to the bill.
          nullable: true
        CounterId:
          type: string
          description: Unique identifier of the bill `Counter`.
          format: uuid
          nullable: true
        State:
          $ref: '#/components/schemas/BillState'
        Type:
          $ref: '#/components/schemas/BillType'
        Number:
          type: string
          description: Number of the bill.
          nullable: true
        VariableSymbol:
          type: string
          description: Variable symbol of the bill.
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Date and time of the bill creation in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: 'Date and time when the bill was last updated, in UTC timezone in ISO 8601 format.'
          format: date-time
        IssuedUtc:
          type: string
          description: Date and time of the bill issuance in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        TaxedUtc:
          type: string
          description: Taxation date of the bill in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        PaidUtc:
          type: string
          description: Date when the bill was paid in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        DueUtc:
          type: string
          description: Bill due date and time in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        LastReminderDateUtc:
          type: string
          description: 'Date and time when an email reminder to pay an invoice was last sent, in UTC timezone in ISO 8601 format.'
          format: date-time
          nullable: true
        PurchaseOrderNumber:
          type: string
          description: Unique number of the purchase order from the buyer.
          nullable: true
        Notes:
          type: string
          description: Additional notes.
          nullable: true
        Options:
          title: Bill options
          allOf:
            - $ref: '#/components/schemas/BillOptions'
          description: Options of the bill.
          nullable: true
        Owner:
          title: Bill owner data
          allOf:
            - $ref: '#/components/schemas/BillAccountData'
          description: Additional information about owner of the bill. Can be a `Customer` or `Company`. Persisted at the time of closing of the bill.
          nullable: true
        AssociatedAccountsData:
          type: array
          items:
            $ref: '#/components/schemas/BillAccountData'
          description: 'Additional information about the associated account of the bill. Can be a `Customer` or `Company`. Persisted at the time of closing of the bill. Currently only one account can be associated with a bill, but this may be extended in future.'
          nullable: true
        EnterpriseData:
          title: Bill enterprise data
          allOf:
            - $ref: '#/components/schemas/BillEnterpriseData'
          description: 'Additional information about the enterprise issuing the bill, including bank account details. Persisted at the time of closing of the bill.'
          nullable: true
        CorrectionState:
          title: Bill correction state
          allOf:
            - $ref: '#/components/schemas/BillCorrectionStateEnum'
          description: "Whether the bill is a regular bill or a corrective bill.\n\nBill (Regular bill.)\n\nCorrectiveBill (Corrective bill, i.e. the `CorrectionType` is either `Edit`, `Cancellation`, or `ReceivablePaymentsBalance`.)"
          x-enumNames:
            - Bill
            - CorrectiveBill
          x-enumDescriptions:
            - Regular bill.
            - 'Corrective bill, i.e. the `CorrectionType` is either `Edit`, `Cancellation`, or `ReceivablePaymentsBalance`.'
        CorrectionType:
          allOf:
            - $ref: '#/components/schemas/BillCorrectionTypeEnum'
          description: "Type of correction.\n\nCancellation\n\nEdit\n\nCreditNote\n\nReinstatement\n\nReceivablePaymentsBalance"
          nullable: true
        CorrectedBillId:
          type: string
          description: 'The ID of the bill that the corrective bill corrects. If the corrected bill was deleted, this field is `null`.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: BillV20250623
    BillingAutomation:
      title: Billing automation
      required:
        - AssignmentTargetType
        - BillAggregationType
        - CompaniesWithRelations
        - CreatedUtc
        - EnterpriseId
        - Id
        - Name
        - Prepayment
        - TriggerType
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the billing automation.
          format: uuid
        EnterpriseId:
          type: string
          description: Unique identifier of the enterprise.
          format: uuid
        Name:
          minLength: 1
          type: string
          description: Name of the billing automation.
        Description:
          type: string
          description: Description of the billing automation.
          nullable: true
        CompaniesWithRelations:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/CompanyWithBillingAutomationRelation'
          description: List of companies with relations to the billing automation.
        Prepayment:
          title: Billing automation prepayment type
          allOf:
            - $ref: '#/components/schemas/BillingAutomationPrepaymentEnum'
          description: "Type of prepayment.\n\nAll (All)\n\nPrepaid (Prepaid)"
          x-enumNames:
            - All
            - Prepaid
          x-enumDescriptions:
            - All
            - Prepaid
        AssignmentTargetType:
          title: Billing automation assignment target type
          allOf:
            - $ref: '#/components/schemas/BillingAutomationAssignmentTargetTypeEnum'
          description: "Type of target company and customer assignment behavior.\n\nCompanyAsDetails (The company will be the associated account in the resulting routed bill, and the customer is the owner.)\n\nCompanyAsOwner (The company will be the owner in the resulting routed bill, and the customer might be the associated account.)\n\nNoCompany (The customer will be owner of the bill.)"
          x-enumNames:
            - CompanyAsDetails
            - CompanyAsOwner
            - NoCompany
          x-enumDescriptions:
            - 'The company will be the associated account in the resulting routed bill, and the customer is the owner.'
            - 'The company will be the owner in the resulting routed bill, and the customer might be the associated account.'
            - The customer will be owner of the bill.
        TriggerType:
          title: Billing automation trigger type
          allOf:
            - $ref: '#/components/schemas/BillingAutomationTriggerTypeEnum'
          description: "Trigger type of billing automation.\n\nContinuous (Billing automation is continuously triggered by reservation actions, such as creation, updates, and rebates.)\n\nRecurring (Billing automation is executed monthly.)\n\nLegacy (Billing automation is executed on reservation creation only. Items added later are not transfered to any bill.)"
          x-enumNames:
            - Continuous
            - Recurring
            - Legacy
          x-enumDescriptions:
            - 'Billing automation is continuously triggered by reservation actions, such as creation, updates, and rebates.'
            - Billing automation is executed monthly.
            - Billing automation is executed on reservation creation only. Items added later are not transfered to any bill.
        BillAggregationType:
          title: Billing automation bill aggregation type
          allOf:
            - $ref: '#/components/schemas/BillingAutomationBillAggregationTypeEnum'
          description: "Type of bill aggregation.\n\nOnePerReservation (Create a separate bill for each reservation.)\n\nAggregateByCustomer (Create a separate bill for each reservation owner.)\n\nAggregateAll (Group all moved items on one bill.)\n\nAggregatePerReservationGroup (Create a separate bill for each reservation group.)"
          x-enumNames:
            - OnePerReservation
            - AggregateByCustomer
            - AggregateAll
            - AggregatePerReservationGroup
          x-enumDescriptions:
            - Create a separate bill for each reservation.
            - Create a separate bill for each reservation owner.
            - Group all moved items on one bill.
            - Create a separate bill for each reservation group.
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the billing automation in UTC timezone in ISO 8601 format.
          format: date-time
        ProcessingStartOffset:
          type: string
          description: Processing start offset. Applicable only if the billing automation `TriggerType` is set to `Reccuring`.
          nullable: true
        OrderItemConsumptionPeriod:
          allOf:
            - $ref: '#/components/schemas/BillingAutomationOrderItemConsumptionPeriodTypeEnum'
          description: "Specifies the type of order item consumption period for the billing automation. This value is applicable only when the `TriggerType` is set to `Reccuring`.\n\nMonthBefore (Only items with a consumption date within the previous month will be routed.)\n\nSameMonthAndMonthBefore (Only items with a consumption date within this and the previous month will be routed.)\n\nSameMonth (Only items with a consumption date within this month will be routed.)\n\nSameMonthAndMonthAfter (Only items with a consumption date within this and the next month will be routed.)\n\nMonthAfter (Only items with a consumption date within the next month will be routed.)"
          nullable: true
        Assignments:
          maxItems: 20
          type: array
          items:
            $ref: '#/components/schemas/BillingAutomationAssignment'
          description: List of billing automation assignments.
          nullable: true
      additionalProperties: false
      x-schema-id: BillingAutomation
    BillingAutomationAccountingCategoryAssignment:
      title: Billing automation accounting category assignment
      required:
        - AccountingCategoryId
        - ItemTypes
      type: object
      properties:
        AccountingCategoryId:
          type: string
          description: Unique identifier of the accounting category.
          format: uuid
        ItemTypes:
          title: Accounting category routed item types
          allOf:
            - $ref: '#/components/schemas/AccountingCategoryRoutedItemTypes'
          description: Type of the accounting category routed item.
      additionalProperties: false
      x-schema-id: BillingAutomationAccountingCategoryAssignment
    BillingAutomationAccountingCategoryAssignmentIEnumerableUpdateValue:
      title: Billing automation accounting category assignment array update value
      type: object
      properties:
        Value:
          type: array
          items:
            $ref: '#/components/schemas/BillingAutomationAccountingCategoryAssignment'
          description: Value which is to be updated.
          nullable: true
      additionalProperties: false
      x-schema-id: BillingAutomationAccountingCategoryAssignmentIEnumerableUpdateValue
    BillingAutomationAddParameters:
      title: Billing automation add parameters
      required:
        - Assignments
        - AssignmentTargetType
        - BillAggregationType
        - Name
        - Prepayment
        - TriggerType
      type: object
      properties:
        Name:
          maxLength: 255
          minLength: 1
          type: string
          description: Name of the billing automation.
        Description:
          maxLength: 1000
          type: string
          description: Description of the billing automation.
          nullable: true
        CompaniesWithRelations:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/CompanyWithBillingAutomationRelation'
          description: List of companies with relations indicating whether the company is considered a travel agency or a company in the reservation. Can only be empty if `AssignmentTargetType` is `CompanyAsDetails` or `NoCompany`.
          nullable: true
        Prepayment:
          title: Billing automation prepayment type
          allOf:
            - $ref: '#/components/schemas/BillingAutomationPrepaymentEnum'
          description: "Type of prepayment.\n\nAll (All)\n\nPrepaid (Prepaid)"
          x-enumNames:
            - All
            - Prepaid
          x-enumDescriptions:
            - All
            - Prepaid
        AssignmentTargetType:
          title: Billing automation assignment target type
          allOf:
            - $ref: '#/components/schemas/BillingAutomationAssignmentTargetTypeEnum'
          description: "Specifies the type of company assignment to the bill. If set to `NoCompany`, the `BillAggregationType` must be `AggregateByCustomer`.\n\nCompanyAsDetails (The company will be the associated account in the resulting routed bill, and the customer is the owner.)\n\nCompanyAsOwner (The company will be the owner in the resulting routed bill, and the customer might be the associated account.)\n\nNoCompany (The customer will be owner of the bill.)"
          x-enumNames:
            - CompanyAsDetails
            - CompanyAsOwner
            - NoCompany
          x-enumDescriptions:
            - 'The company will be the associated account in the resulting routed bill, and the customer is the owner.'
            - 'The company will be the owner in the resulting routed bill, and the customer might be the associated account.'
            - The customer will be owner of the bill.
        TriggerType:
          title: Billing automation trigger type
          allOf:
            - $ref: '#/components/schemas/BillingAutomationTriggerTypeEnum'
          description: "Trigger type of billing automation.\n\nContinuous (Billing automation is continuously triggered by reservation actions, such as creation, updates, and rebates.)\n\nRecurring (Billing automation is executed monthly.)\n\nLegacy (Billing automation is executed on reservation creation only. Items added later are not transfered to any bill.)"
          x-enumNames:
            - Continuous
            - Recurring
            - Legacy
          x-enumDescriptions:
            - 'Billing automation is continuously triggered by reservation actions, such as creation, updates, and rebates.'
            - Billing automation is executed monthly.
            - Billing automation is executed on reservation creation only. Items added later are not transfered to any bill.
        BillAggregationType:
          title: Billing automation bill aggregation type
          allOf:
            - $ref: '#/components/schemas/BillingAutomationBillAggregationTypeEnum'
          description: "Specifies the type of bill aggregation. If the value is not `AggregateByCustomer`, the `AssignmentTargetType` must be `CompanyAsOwner`.\n\nOnePerReservation (Create a separate bill for each reservation.)\n\nAggregateByCustomer (Create a separate bill for each reservation owner.)\n\nAggregateAll (Group all moved items on one bill.)\n\nAggregatePerReservationGroup (Create a separate bill for each reservation group.)"
          x-enumNames:
            - OnePerReservation
            - AggregateByCustomer
            - AggregateAll
            - AggregatePerReservationGroup
          x-enumDescriptions:
            - Create a separate bill for each reservation.
            - Create a separate bill for each reservation owner.
            - Group all moved items on one bill.
            - Create a separate bill for each reservation group.
        OrderItemConsumptionPeriod:
          allOf:
            - $ref: '#/components/schemas/BillingAutomationOrderItemConsumptionPeriodTypeEnum'
          description: "Specifies the order item consumption period type for the billing automation. This is required if the `TriggerType` is set to `Reccuring`.\n\nMonthBefore (Only items with a consumption date within the previous month will be routed.)\n\nSameMonthAndMonthBefore (Only items with a consumption date within this and the previous month will be routed.)\n\nSameMonth (Only items with a consumption date within this month will be routed.)\n\nSameMonthAndMonthAfter (Only items with a consumption date within this and the next month will be routed.)\n\nMonthAfter (Only items with a consumption date within the next month will be routed.)"
          nullable: true
        ProcessingStartOffset:
          maxLength: 20
          type: string
          description: Specifies the processing start offset. This is required if the billing automation `TriggerType` is set to `Reccuring`.
          nullable: true
        Assignments:
          maxItems: 20
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BillingAutomationAssignmentAddParameters'
          description: List of billing automation assignments.
      additionalProperties: false
      x-schema-id: BillingAutomationAddParameters
    BillingAutomationAssignment:
      title: Billing automation assignment
      required:
        - BillingAutomationId
        - Id
        - RoutedItemTypes
        - ServiceId
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the billing automation assignment.
          format: uuid
        BillingAutomationId:
          type: string
          description: Unique identifier of the billing automation.
          format: uuid
        ServiceId:
          type: string
          description: Unique identifier of the related service.
          format: uuid
        RoutedItemTypes:
          title: Billing automation item types parameters
          allOf:
            - $ref: '#/components/schemas/BillingAutomationItemTypesParameters'
          description: Type of items that are going to be routed.
        RateIds:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Rates` used in billing automation conditions.
          nullable: true
        ProductCategoryIds:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Product Categories` used in billing automation conditions.
          nullable: true
        ProductIds:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Products` used in billing automation conditions.
          nullable: true
        AccountingCategoryAssignments:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/BillingAutomationAccountingCategoryAssignment'
          description: List of accounting category assignments used in billing automation conditions.
          nullable: true
      additionalProperties: false
      x-schema-id: BillingAutomationAssignment
    BillingAutomationAssignmentAddParameters:
      title: Billing automation assignment add parameters
      required:
        - RoutedItemTypes
        - ServiceId
      type: object
      properties:
        ServiceId:
          type: string
          description: Unique identifier of the related service.
          format: uuid
        RoutedItemTypes:
          title: Billing automation item types parameters
          allOf:
            - $ref: '#/components/schemas/BillingAutomationItemTypesParameters'
          description: Type of items that are going to be routed.
        RateIds:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Rates` that will be applied as billing automation condition.
          nullable: true
        ProductCategoryIds:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Product Categories` that will be applied as billing automation condition.
          nullable: true
        ProductIds:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Products` that will be applied as billing automation condition.
          nullable: true
        AccountingCategories:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/BillingAutomationAccountingCategoryAssignment'
          description: List of accounting categories that will be applied as billing automation condition.
          nullable: true
      additionalProperties: false
      x-schema-id: BillingAutomationAssignmentAddParameters
    BillingAutomationAssignmentTargetTypeEnum:
      title: Billing automation assignment target type
      enum:
        - CompanyAsDetails
        - CompanyAsOwner
        - NoCompany
      type: string
      description: "\n\nCompanyAsDetails (The company will be the associated account in the resulting routed bill, and the customer is the owner.)\n\nCompanyAsOwner (The company will be the owner in the resulting routed bill, and the customer might be the associated account.)\n\nNoCompany (The customer will be owner of the bill.)"
      x-enumNames:
        - CompanyAsDetails
        - CompanyAsOwner
        - NoCompany
      x-enumDescriptions:
        - 'The company will be the associated account in the resulting routed bill, and the customer is the owner.'
        - 'The company will be the owner in the resulting routed bill, and the customer might be the associated account.'
        - The customer will be owner of the bill.
    BillingAutomationAssignmentTargetTypeUpdateValue:
      title: Billing automation assignment target type update value
      type: object
      properties:
        Value:
          title: Billing automation assignment target type
          allOf:
            - $ref: '#/components/schemas/BillingAutomationAssignmentTargetTypeEnum'
          description: Value which is to be updated.
          x-enumNames:
            - CompanyAsDetails
            - CompanyAsOwner
            - NoCompany
          x-enumDescriptions:
            - 'The company will be the associated account in the resulting routed bill, and the customer is the owner.'
            - 'The company will be the owner in the resulting routed bill, and the customer might be the associated account.'
            - The customer will be owner of the bill.
      additionalProperties: false
      x-schema-id: BillingAutomationAssignmentTargetTypeUpdateValue
    BillingAutomationAssignmentUpdateParameters:
      title: Billing automation assignment update parameters
      required:
        - BillingAutomationAssignmentId
      type: object
      properties:
        BillingAutomationAssignmentId:
          type: string
          description: Unique identifier of the billing automation assignment.
          format: uuid
        RoutedItemTypes:
          title: Billing automation item types update parameters
          allOf:
            - $ref: '#/components/schemas/BillingAutomationItemTypesUpdateParameters'
          description: Type of items that are going to be routed (or `null` should it not be updated).
          nullable: true
        RateIds:
          title: Guid array update value
          maxLength: 100
          allOf:
            - $ref: '#/components/schemas/GuidIEnumerableUpdateValue'
          description: Unique identifiers of `Rates` that will be applied as billing automation condition (or `null` should it not be updated).
          nullable: true
        ProductCategoryIds:
          title: Guid array update value
          maxLength: 100
          allOf:
            - $ref: '#/components/schemas/GuidIEnumerableUpdateValue'
          description: Unique identifiers of `Product Categories` that will be applied as billing automation condition (or `null` should it not be updated).
          nullable: true
        ProductIds:
          title: Guid array update value
          maxLength: 100
          allOf:
            - $ref: '#/components/schemas/GuidIEnumerableUpdateValue'
          description: Unique identifiers of `Products` that will be applied as billing automation condition (or `null` should it not be updated).
          nullable: true
        AccountingCategories:
          title: Billing automation accounting category assignment array update value
          maxLength: 100
          allOf:
            - $ref: '#/components/schemas/BillingAutomationAccountingCategoryAssignmentIEnumerableUpdateValue'
          description: List of `Accounting Categories` with their `ItemTypes` that will be applied as billing automation condition (or `null` should it not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: BillingAutomationAssignmentUpdateParameters
    BillingAutomationAssignmentsUpdateParameters:
      title: Billing automation assignments update parameters
      required:
        - AccessToken
        - BillingAutomationId
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        BillingAutomationId:
          type: string
          description: Unique identifier of the billing automation.
          format: uuid
        AssignmentsToAdd:
          maxItems: 20
          type: array
          items:
            $ref: '#/components/schemas/BillingAutomationAssignmentAddParameters'
          description: Parameters for adding new assignments (or null if not being updated).
          nullable: true
        AssignmentsToUpdate:
          maxItems: 20
          type: array
          items:
            $ref: '#/components/schemas/BillingAutomationAssignmentUpdateParameters'
          description: List of parameters for updating existing assignments (or null if not being updated).
          nullable: true
        AssignmentIdsToRemove:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
          description: List of unique identifiers for assignments to be removed (or null if not being updated).
          nullable: true
      additionalProperties: false
      x-schema-id: BillingAutomationAssignmentsUpdateParameters
    BillingAutomationBillAggregationTypeEnum:
      title: Billing automation bill aggregation type
      enum:
        - OnePerReservation
        - AggregateByCustomer
        - AggregateAll
        - AggregatePerReservationGroup
      type: string
      description: "\n\nOnePerReservation (Create a separate bill for each reservation.)\n\nAggregateByCustomer (Create a separate bill for each reservation owner.)\n\nAggregateAll (Group all moved items on one bill.)\n\nAggregatePerReservationGroup (Create a separate bill for each reservation group.)"
      x-enumNames:
        - OnePerReservation
        - AggregateByCustomer
        - AggregateAll
        - AggregatePerReservationGroup
      x-enumDescriptions:
        - Create a separate bill for each reservation.
        - Create a separate bill for each reservation owner.
        - Group all moved items on one bill.
        - Create a separate bill for each reservation group.
    BillingAutomationBillAggregationTypeUpdateValue:
      title: Billing automation bill aggregation type update value
      type: object
      properties:
        Value:
          title: Billing automation bill aggregation type
          allOf:
            - $ref: '#/components/schemas/BillingAutomationBillAggregationTypeEnum'
          description: Value which is to be updated.
          x-enumNames:
            - OnePerReservation
            - AggregateByCustomer
            - AggregateAll
            - AggregatePerReservationGroup
          x-enumDescriptions:
            - Create a separate bill for each reservation.
            - Create a separate bill for each reservation owner.
            - Group all moved items on one bill.
            - Create a separate bill for each reservation group.
      additionalProperties: false
      x-schema-id: BillingAutomationBillAggregationTypeUpdateValue
    BillingAutomationDeleteParameters:
      title: Billing automation delete parameters
      required:
        - AccessToken
        - BillingAutomationIds
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        BillingAutomationIds:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifier of the billing automations to be deleted.
      additionalProperties: false
      x-schema-id: BillingAutomationDeleteParameters
    BillingAutomationFilterParameters:
      title: Billing automation filter parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        CompanyIds:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Company` associated with the billing automations.
          nullable: true
        BillingAutomationIds:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of specific `Billing automation` items.
          nullable: true
      additionalProperties: false
      x-schema-id: BillingAutomationFilterParameters
    BillingAutomationItemTypesParameters:
      title: Billing automation item types parameters
      required:
        - AdditionalExpenses
        - AllCustomItems
        - AllProducts
        - CityTax
        - Deposits
        - SpaceOrder
      type: object
      properties:
        SpaceOrder:
          type: boolean
          description: Space order
        CityTax:
          type: boolean
          description: City tax
        AllProducts:
          type: boolean
          description: All products
        Deposits:
          type: boolean
          description: Deposits
        AdditionalExpenses:
          type: boolean
          description: Additional expenses
        AllCustomItems:
          type: boolean
          description: All custom items
      additionalProperties: false
      x-schema-id: BillingAutomationItemTypesParameters
    BillingAutomationItemTypesUpdateParameters:
      title: Billing automation item types update parameters
      type: object
      properties:
        SpaceOrder:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Space order (or `null` should it not be updated).
          nullable: true
        CityTax:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: City tax (or `null` should it not be updated).
          nullable: true
        AllProducts:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Products (or `null` should it not be updated).
          nullable: true
        Deposits:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Deposits(or `null` should it not be updated).
          nullable: true
        AdditionalExpenses:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Additional expenses (or `null` should it not be updated).
          nullable: true
        AllCustomItems:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Custom items (or `null` should it not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: BillingAutomationItemTypesUpdateParameters
    BillingAutomationModificationResult:
      title: Billing automation modification result
      type: object
      properties:
        BillingAutomations:
          type: array
          items:
            $ref: '#/components/schemas/BillingAutomation'
          description: Billing automations affected by the operation.
          nullable: true
      additionalProperties: false
      x-schema-id: BillingAutomationModificationResult
    BillingAutomationOrderItemConsumptionPeriodTypeEnum:
      title: Billing automation order item consumption period type
      enum:
        - MonthBefore
        - SameMonthAndMonthBefore
        - SameMonth
        - SameMonthAndMonthAfter
        - MonthAfter
      type: string
      description: "\n\nMonthBefore (Only items with a consumption date within the previous month will be routed.)\n\nSameMonthAndMonthBefore (Only items with a consumption date within this and the previous month will be routed.)\n\nSameMonth (Only items with a consumption date within this month will be routed.)\n\nSameMonthAndMonthAfter (Only items with a consumption date within this and the next month will be routed.)\n\nMonthAfter (Only items with a consumption date within the next month will be routed.)"
      x-enumNames:
        - MonthBefore
        - SameMonthAndMonthBefore
        - SameMonth
        - SameMonthAndMonthAfter
        - MonthAfter
      x-enumDescriptions:
        - Only items with a consumption date within the previous month will be routed.
        - Only items with a consumption date within this and the previous month will be routed.
        - Only items with a consumption date within this month will be routed.
        - Only items with a consumption date within this and the next month will be routed.
        - Only items with a consumption date within the next month will be routed.
    BillingAutomationOrderItemConsumptionPeriodTypeUpdateValue:
      title: Billing automation order item consumption period type update value
      type: object
      properties:
        Value:
          title: Billing automation order item consumption period type
          allOf:
            - $ref: '#/components/schemas/BillingAutomationOrderItemConsumptionPeriodTypeEnum'
          description: Value which is to be updated.
          x-enumNames:
            - MonthBefore
            - SameMonthAndMonthBefore
            - SameMonth
            - SameMonthAndMonthAfter
            - MonthAfter
          x-enumDescriptions:
            - Only items with a consumption date within the previous month will be routed.
            - Only items with a consumption date within this and the previous month will be routed.
            - Only items with a consumption date within this month will be routed.
            - Only items with a consumption date within this and the next month will be routed.
            - Only items with a consumption date within the next month will be routed.
      additionalProperties: false
      x-schema-id: BillingAutomationOrderItemConsumptionPeriodTypeUpdateValue
    BillingAutomationPrepaymentEnum:
      title: Billing automation prepayment type
      enum:
        - All
        - Prepaid
      type: string
      description: "\n\nAll (All)\n\nPrepaid (Prepaid)"
      x-enumNames:
        - All
        - Prepaid
      x-enumDescriptions:
        - All
        - Prepaid
    BillingAutomationPrepaymentUpdateValue:
      title: Billing automation prepayment type update value
      type: object
      properties:
        Value:
          title: Billing automation prepayment type
          allOf:
            - $ref: '#/components/schemas/BillingAutomationPrepaymentEnum'
          description: Value which is to be updated.
          x-enumNames:
            - All
            - Prepaid
          x-enumDescriptions:
            - All
            - Prepaid
      additionalProperties: false
      x-schema-id: BillingAutomationPrepaymentUpdateValue
    BillingAutomationResult:
      title: Billing automation result
      type: object
      properties:
        BillingAutomations:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/BillingAutomation'
          description: The list of filtered billing automations.
          nullable: true
        Cursor:
          type: string
          description: Unique identifier of the last returned billing automation. This can be used in Limitation in a subsequent request to fetch the next batch of billing automations.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: BillingAutomationResult
    BillingAutomationTriggerTypeEnum:
      title: Billing automation trigger type
      enum:
        - Continuous
        - Recurring
        - Legacy
      type: string
      description: "\n\nContinuous (Billing automation is continuously triggered by reservation actions, such as creation, updates, and rebates.)\n\nRecurring (Billing automation is executed monthly.)\n\nLegacy (Billing automation is executed on reservation creation only. Items added later are not transfered to any bill.)"
      x-enumNames:
        - Continuous
        - Recurring
        - Legacy
      x-enumDescriptions:
        - 'Billing automation is continuously triggered by reservation actions, such as creation, updates, and rebates.'
        - Billing automation is executed monthly.
        - Billing automation is executed on reservation creation only. Items added later are not transfered to any bill.
    BillingAutomationUpdateParameters:
      title: Billing automation update parameters
      required:
        - BillingAutomationId
      type: object
      properties:
        BillingAutomationId:
          type: string
          description: Unique identifier of the billing automation.
          format: uuid
        Name:
          title: String update value
          maxLength: 255
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Name of the billing automation (or null should it not be updated).
          nullable: true
        Description:
          title: String update value
          maxLength: 1000
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Description of the billing automation (or null should it not be updated).
          nullable: true
        Companies:
          title: Company with billing automation relation array update value
          maxLength: 1000
          allOf:
            - $ref: '#/components/schemas/CompanyWithBillingAutomationRelationIEnumerableUpdateValue'
          description: List of companies with relations indicating whether the company should be considered as a travel agency or a company in the reservation. This list can only be empty if the `AssignmentTargetType` is `CompanyAsDetails` or `NoCompany`. Set to null if the value is not updated.
          nullable: true
        Prepayment:
          title: Billing automation prepayment type update value
          allOf:
            - $ref: '#/components/schemas/BillingAutomationPrepaymentUpdateValue'
          description: Type of prepayment (or null should it not be updated).
          nullable: true
        AssignmentTargetType:
          title: Billing automation assignment target type update value
          allOf:
            - $ref: '#/components/schemas/BillingAutomationAssignmentTargetTypeUpdateValue'
          description: 'Specifies the type of company assignment to the bill. If set to `NoCompany`, the `BillAggregationType` must be `AggregateByCustomer`. Set to null if the value is not updated.'
          nullable: true
        BillAggregationType:
          title: Billing automation bill aggregation type update value
          allOf:
            - $ref: '#/components/schemas/BillingAutomationBillAggregationTypeUpdateValue'
          description: 'Defines the aggregation target type for billing automation. If not `AggregateByCustomer`, the `AssignmentTargetType` must be `CompanyAsOwner`. Set to null if the value is not updated.'
          nullable: true
        OrderItemConsumptionPeriod:
          title: Billing automation order item consumption period type update value
          allOf:
            - $ref: '#/components/schemas/BillingAutomationOrderItemConsumptionPeriodTypeUpdateValue'
          description: Specifies the order item consumption period type for the billing automation. Required if the `TriggerType` is recurring. Can be null if the value is not updated.
          nullable: true
        ProcessingStartOffset:
          title: String update value
          maxLength: 20
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Processing start offset. Required if the billing automation `TriggerType` is recurring (or null should it not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: BillingAutomationUpdateParameters
    BillsAddResult:
      title: BillsAddResult
      required:
        - Bills
      type: object
      properties:
        Bills:
          type: array
          items:
            $ref: '#/components/schemas/Bill'
          description: The created bills.
      additionalProperties: false
      x-schema-id: BillsAddResult
    BillsCloseResult:
      title: BillsCloseResult
      required:
        - Bills
      type: object
      properties:
        Bills:
          type: array
          items:
            $ref: '#/components/schemas/Bill'
          description: The closed bills.
      additionalProperties: false
      x-schema-id: BillsCloseResult
    BillsResult:
      title: BillsResult
      required:
        - Bills
      type: object
      properties:
        Bills:
          type: array
          items:
            $ref: '#/components/schemas/Bill'
          description: The filtered bills.
        Cursor:
          type: string
          description: Unique identifier of the last and hence oldest bill returned. This can be used in `Limitation` in a subsequent request to fetch the next batch of older bills.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: BillsResult
    BillsUpdateResult:
      title: BillsUpdateResult
      required:
        - Bills
      type: object
      properties:
        Bills:
          type: array
          items:
            $ref: '#/components/schemas/Bill'
          description: Updated bills.
      additionalProperties: false
      x-schema-id: BillsUpdateResult
    BookableServiceData:
      title: Bookable service data
      required:
        - EndOffset
        - OccupancyEndOffset
        - OccupancyStartOffset
        - StartOffset
        - TimeUnit
        - TimeUnitPeriod
      type: object
      properties:
        StartOffset:
          minLength: 1
          type: string
          description: 'Offset from the start of the [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/) which defines the default start of the service; expressed in ISO 8601 duration format.'
        EndOffset:
          minLength: 1
          type: string
          description: 'Offset from the end of the [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/) which defines the default end of the service; expressed in ISO 8601 duration format.'
        OccupancyStartOffset:
          minLength: 1
          type: string
          description: 'Offset from the start of the [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/) which defines the occupancy start of the service; expressed in ISO 8601 duration format. ''Occupancy start'' is used for availability and reporting purposes, it implies the time at which the booked resource is considered occupied.'
        OccupancyEndOffset:
          minLength: 1
          type: string
          description: 'Offset from the end of the [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/) which defines the occupancy end of the service; expressed in ISO 8601 duration format. ''Occupancy end'' is used for availability and reporting purposes, it implies the time at which the booked resource is no longer considered occupied.'
        TimeUnit:
          title: Time unit period
          allOf:
            - $ref: '#/components/schemas/TimeUnitPeriodEnum'
          description: "\n\nDay\n\nMonth\n\nHour"
          deprecated: true
          x-enumNames:
            - Day
            - Month
            - Hour
          x-enumDescriptions:
            - ''
            - ''
            - ''
          x-deprecatedMessage: Use `TimeUnitPeriod` instead.
        TimeUnitPeriod:
          title: Time unit period
          allOf:
            - $ref: '#/components/schemas/TimeUnitPeriodEnum'
          description: "The length of time or period represented by a [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/), for which the service can be booked.\n\nDay\n\nMonth\n\nHour"
          x-enumNames:
            - Day
            - Month
            - Hour
          x-enumDescriptions:
            - ''
            - ''
            - ''
      additionalProperties: false
      x-schema-id: BookableServiceData
    BooleanNullableUpdateValue:
      title: Boolean update value
      type: object
      properties:
        Value:
          type: boolean
          description: Value which is to be updated.
          nullable: true
      additionalProperties: false
      x-schema-id: BooleanNullableUpdateValue
    BooleanUpdateValue:
      title: Boolean update value
      type: object
      properties:
        Value:
          type: boolean
          description: Value which is to be updated.
      additionalProperties: false
      x-schema-id: BooleanUpdateValue
    BusinessSegment:
      title: Business segment
      required:
        - CreatedUtc
        - Id
        - IsActive
        - Name
        - ServiceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the business segment.
          format: uuid
        ServiceId:
          type: string
          description: Unique identifier of the `Service`.
          format: uuid
        IsActive:
          type: boolean
          description: Whether the business segment is still active.
        Name:
          minLength: 1
          type: string
          description: Name of the business segment.
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the business segment in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the business segment in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: BusinessSegment
    BusinessSegmentFilterParameters:
      title: BusinessSegmentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        Ids:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the requested `Business segment`.
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Services` from which the business segments are requested.
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval of `Business segment` last update date and time.
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: BusinessSegmentFilterParameters
    BusinessSegmentResult:
      title: BusinessSegmentResult
      required:
        - BusinessSegments
      type: object
      properties:
        BusinessSegments:
          type: array
          items:
            $ref: '#/components/schemas/BusinessSegment'
          description: Business segments.
        Cursor:
          type: string
          description: Unique identifier of the last and hence oldest business segment item returned. This can be used in Limitation in a subsequent request to fetch the next batch of older business segment.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: BusinessSegmentResult
    CancelOrderItemParameters:
      title: CancelOrderItemParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - OrderItemIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        OrderItemIds:
          maxItems: 10
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `OrderItems` to cancel.
      additionalProperties: false
      x-schema-id: CancelOrderItemParameters
    CancellationFeeExtent:
      title: Cancellation Fee Extent
      enum:
        - TimeUnits
        - Products
      type: string
      description: 'Extent for the cancellation fee, i.e. what should be in scope for the automatic payment.'
    CancellationFeeExtentEnum:
      title: Cancellation Fee Extent
      enum:
        - Nothing
        - TimeUnits
        - Products
        - Everything
      type: string
      description: "Extent for the cancellation fee, i.e. what should be in scope for the automatic payment.\n\nNothing\n\nTimeUnits\n\nProducts\n\nEverything"
      x-enumNames:
        - Nothing
        - TimeUnits
        - Products
        - Everything
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
    CancellationPolicy:
      title: Cancellation Policy
      required:
        - AbsoluteFee
        - Applicability
        - ApplicabilityOffset
        - CreatedUtc
        - FeeExtent
        - Id
        - IsActive
        - RateGroupId
        - RelativeFee
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the cancellation policy.
          format: uuid
        RateGroupId:
          type: string
          description: Unique identifier of the rate group the cancellation policy belongs to.
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          description: Date and time of the cancellation policy creation in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Date and time of the cancellation policy update in UTC timezone in ISO 8601 format.
          format: date-time
        Applicability:
          $ref: '#/components/schemas/CancellationPolicyApplicability'
        FeeExtent:
          type: array
          items:
            $ref: '#/components/schemas/CancellationFeeExtent'
          description: 'Extent for the cancellation fee, i.e. what should be in scope for the automatic payment.'
        ApplicabilityOffset:
          minLength: 1
          type: string
          description: Offset for order start (assuming Applicability is set to Start) from which the fee is applied.
        FeeMaximumTimeUnits:
          type: integer
          description: Maximum number of time units the cancellation fee is applicable to.
          format: int32
          nullable: true
        AbsoluteFee:
          title: Currency value (ver 2023-02-02)
          allOf:
            - $ref: '#/components/schemas/CurrencyValue'
          description: Absolute value of the fee.
        RelativeFee:
          type: number
          description: 'Relative value of the fee, as a percentage of the reservation price.'
          format: double
        IsActive:
          type: boolean
          description: Whether the cancellation policy is still active.
      additionalProperties: false
      x-schema-id: CancellationPolicy
    CancellationPolicyApplicability:
      title: Cancellation Policy Applicability
      enum:
        - Creation
        - Start
        - StartDate
      type: string
      description: Applicability mode of the cancellation policy.
    CancellationPolicyApplicabilityEnum:
      title: Cancellation Policy Applicability
      enum:
        - Creation
        - Start
        - StartDate
      type: string
      description: "Applicability mode of the cancellation policy.\n\nCreation\n\nStart\n\nStartDate"
      x-enumNames:
        - Creation
        - Start
        - StartDate
      x-enumDescriptions:
        - ''
        - ''
        - ''
    CancellationPolicyByRate:
      title: Cancellation policy data grouped by rate
      required:
        - Policies
        - RateId
      type: object
      properties:
        RateId:
          type: string
          description: Unique identifier of the `Rate`.
          format: uuid
        Policies:
          type: array
          items:
            $ref: '#/components/schemas/CancellationPolicyData'
          description: Collection of cancellation policy data.
      additionalProperties: false
      x-schema-id: CancellationPolicyByRate
    CancellationPolicyByRateParameters:
      title: CancellationPolicyByRateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - RateIds
        - ReservationEndUtc
        - ReservationStartUtc
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        RateIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Rate`.
        ReservationStartUtc:
          minLength: 1
          type: string
          description: Start of the reservation interval in UTC timezone in ISO 8601 format.
          format: date-time
        ReservationEndUtc:
          minLength: 1
          type: string
          description: End of the reservation interval in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: CancellationPolicyByRateParameters
    CancellationPolicyByRateResult:
      title: CancellationPolicyByRateResult
      required:
        - CancellationPolicies
      type: object
      properties:
        CancellationPolicies:
          maxItems: 1300
          type: array
          items:
            $ref: '#/components/schemas/CancellationPolicyByRate'
          description: List of cancellation policies data grouped by rate.
      additionalProperties: false
      x-schema-id: CancellationPolicyByRateResult
    CancellationPolicyByReservation:
      title: Cancellation policy data grouped by reservation
      required:
        - Policies
        - ReservationId
      type: object
      properties:
        ReservationId:
          type: string
          description: Unique identifier of the reservation.
          format: uuid
        Policies:
          type: array
          items:
            $ref: '#/components/schemas/CancellationPolicyData'
          description: Collection of cancellation policy data.
      additionalProperties: false
      x-schema-id: CancellationPolicyByReservation
    CancellationPolicyByReservationParameters:
      title: CancellationPolicyByReservationParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ReservationIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Reservation`.
      additionalProperties: false
      x-schema-id: CancellationPolicyByReservationParameters
    CancellationPolicyByReservationResult:
      title: CancellationPolicyByReservationResult
      required:
        - CancellationPolicies
      type: object
      properties:
        CancellationPolicies:
          maxItems: 1300
          type: array
          items:
            $ref: '#/components/schemas/CancellationPolicyByReservation'
          description: List of cancellation policies data grouped by reservation.
      additionalProperties: false
      x-schema-id: CancellationPolicyByReservationResult
    CancellationPolicyData:
      title: Cancellation policy data
      required:
        - AbsoluteFee
        - Applicability
        - ApplicabilityOffset
        - FeeExtents
        - RelativeFee
      type: object
      properties:
        Applicability:
          title: Cancellation Policy Applicability
          allOf:
            - $ref: '#/components/schemas/CancellationPolicyApplicabilityEnum'
          description: "Applicability mode of the cancellation policy.\n\nCreation\n\nStart\n\nStartDate"
          x-enumNames:
            - Creation
            - Start
            - StartDate
          x-enumDescriptions:
            - ''
            - ''
            - ''
        FeeExtents:
          type: array
          items:
            $ref: '#/components/schemas/CancellationFeeExtentEnum'
          description: 'Extent for the cancellation fee, i.e. what should be in scope for the automatic payment.'
        ApplicabilityOffset:
          minLength: 1
          type: string
          description: Offset for order start (assuming Applicability is set to Start) from which the fee is applied in ISO 8601 duration format.
        FeeMaximumTimeUnits:
          type: integer
          description: Maximum number of time units the cancellation fee is applicable to.
          format: int32
          nullable: true
        AbsoluteFee:
          title: Currency value (ver 2023-02-02)
          allOf:
            - $ref: '#/components/schemas/CurrencyValue'
          description: Absolute value of the fee.
        RelativeFee:
          type: number
          description: 'Relative value of the fee, as a percentage of the reservation price.'
          format: double
      additionalProperties: false
      x-schema-id: CancellationPolicyData
    CancellationPolicyFilterParameters:
      title: CancellationPolicyFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ServiceIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).'
        CancellationPolicyIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Cancellation Policy](https://mews-systems.gitbook.io/connector-api/operations/#cancellationpolicy). Required if no other filter is provided.'
          nullable: true
        RateGroupIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Rate group](https://mews-systems.gitbook.io/connector-api/operations/rates/#rategroup). Required if no other filter is provided.'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the Cancellation Policy was updated. Required if no other filter is provided.
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted, or both types of record. If not specified, only active records will be returned.'
          nullable: true
      additionalProperties: false
      x-schema-id: CancellationPolicyFilterParameters
    CancellationPolicyResult:
      title: CancellationPolicyResult
      required:
        - CancellationPolicies
      type: object
      properties:
        CancellationPolicies:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/CancellationPolicy'
          description: The filtered cancellation policies.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest cancellation policy returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older cancellation policies.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CancellationPolicyResult
    CancellationReason:
      enum:
        - Other
        - ConfirmationMissed
        - BookedElsewhere
        - ForceMajeure
        - GuestComplaint
        - NoShow
        - PriceTooHigh
        - ServiceNotAvailable
        - InputError
        - InvalidPayment
        - TravelAgency
        - RequestedByGuest
        - Update
        - BookingAbandoned
        - RequestedByBooker
      type: string
    Cashier:
      title: Cashier
      required:
        - CreatedUtc
        - EnterpriseId
        - Id
        - IsActive
        - Name
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the cashier.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        IsActive:
          type: boolean
          description: Whether the cashier is still active.
        Name:
          minLength: 1
          type: string
          description: Name of the cashier.
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the `Cashier` in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the `Cashier` in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: Cashier
    CashierParameters:
      title: CashierParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        Ids:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the requested [Cashier](https://mews-systems.gitbook.io/connector-api/operations/#cashier).'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which `Cashier` was updated.
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: CashierParameters
    CashierResult:
      title: CashierResult
      required:
        - Cashiers
      type: object
      properties:
        Cashiers:
          type: array
          items:
            $ref: '#/components/schemas/Cashier'
          description: Cashiers in the enterprise.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CashierResult
    CashierTransaction:
      title: Cashier transaction
      required:
        - Amount
        - CashierId
        - CreatedUtc
        - EnterpriseId
        - Id
        - Number
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the transaction.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        CashierId:
          type: string
          description: 'Unique identifier of the [Cashier](https://mews-systems.gitbook.io/connector-api/operations/cashiers/#cashier).'
          format: uuid
        PaymentId:
          type: string
          description: 'Unique identifier of the corresponding payment [Payment item](https://mews-systems.gitbook.io/connector-api/operations/accountingitems/#payment-item).'
          format: uuid
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the transaction.
        Number:
          minLength: 1
          type: string
          description: Number of the transaction.
        Notes:
          type: string
          description: Additional notes of the transaction.
          nullable: true
        Amount:
          title: Currency value (ver 2018-06-07)
          allOf:
            - $ref: '#/components/schemas/CurrencyValueOld'
          description: Total price of the transaction
      additionalProperties: false
      x-schema-id: CashierTransaction
    CashierTransactionParameters:
      title: CashierTransactionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        CashierTransactionIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the Cashier transactions.
          nullable: true
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which Cashier transaction was created.
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: CashierTransactionParameters
    CashierTransactionResult:
      title: CashierTransactionResult
      required:
        - CashierTransactions
      type: object
      properties:
        CashierTransactions:
          type: array
          items:
            $ref: '#/components/schemas/CashierTransaction'
          description: The collection of cashier transactions.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CashierTransactionResult
    CategoryAdjustment:
      title: Resource category adjustment
      required:
        - AbsoluteValue
        - CategoryId
        - RelativeValue
      type: object
      properties:
        CategoryId:
          type: string
          description: Unique identifier of the adjustment category.
          format: uuid
        ParentCategoryId:
          type: string
          description: Unique identifier of the parent category that serves as a base price for the current category.
          format: uuid
          nullable: true
        AbsoluteValue:
          type: number
          description: Absolute value of the adjustment (e.g. `50` represents 50 EUR in case the rate currency is `EUR`).
          format: double
        RelativeValue:
          type: number
          description: Relative value of the adjustment (e.g. `0.5` represents 50% increase).
          format: double
      additionalProperties: false
      x-schema-id: CategoryAdjustment
    CategoryAvailability:
      title: Resource category availability
      required:
        - Adjustments
        - Availabilities
        - CategoryId
      type: object
      properties:
        CategoryId:
          type: string
          description: 'Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources#resource-category).'
          format: uuid
        Availabilities:
          type: array
          items:
            type: integer
            format: int32
          description: Absolute availabilities of the resource category in the covered dates.
        Adjustments:
          type: array
          items:
            type: integer
            format: int32
          description: Relative availability adjustments set for resource category in the covered dates.
      additionalProperties: false
      x-schema-id: CategoryAvailability
    CategoryPricing:
      title: Resource category pricing
      required:
        - AmountPrices
        - CategoryId
        - Prices
      type: object
      properties:
        CategoryId:
          type: string
          description: Unique identifier of the category.
          format: uuid
        Prices:
          type: array
          items:
            type: number
            format: double
          description: Prices of the rate for the resource category in the covered dates.
          deprecated: true
          x-deprecatedMessage: Use `AmountPrices` instead.
        AmountPrices:
          type: array
          items:
            $ref: '#/components/schemas/Amount'
          description: Prices of the rate for the resource category in the covered dates.
      additionalProperties: false
      x-schema-id: CategoryPricing
    ChannelManagerDetails:
      title: Reservation channel manager details
      required:
        - CreatedUtc
        - RequestedRateCode
        - ReservationId
      type: object
      properties:
        ReservationId:
          type: string
          description: Unique identifier of the `Reservation`.
          format: uuid
        RequestedRateCode:
          minLength: 1
          type: string
          description: Rate code requested by the channel manager for this reservation.
        ChannelManagerName:
          type: string
          description: Name of the Channel Manager associated with this reservation.
          nullable: true
        ChannelNumber:
          type: string
          description: 'Number of the reservation within the Channel (i.e. OTA, GDS, CRS, etc) in case the reservation group originates there (e.g. Booking.com confirmation number).'
          nullable: true
        ChannelManagerGroupNumber:
          type: string
          description: Number of the reservation group within a Channel Manager.
          nullable: true
        ChannelManagerNumber:
          type: string
          description: Unique number of the reservation within the reservation group.
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: The timestamp when the Channel Manager reservation was created.
          format: date-time
      additionalProperties: false
      x-schema-id: ChannelManagerDetails
    ChannelManagerReservation:
      title: ChannelManagerReservation
      type: object
      properties:
        ReservationId:
          type: string
          format: uuid
        RequestedRateCode:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ChannelManagerReservation
    ChargeCreditCardParameters:
      title: CreditCard payment data
      required:
        - AccessToken
        - Amount
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        BillId:
          type: string
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          description: 'Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category).'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the reservation the payment belongs to.
          format: uuid
          nullable: true
        Amount:
          title: Amount parameters
          allOf:
            - $ref: '#/components/schemas/ExtendedAmountParameters'
          description: Amount of the credit card payment.
        Notes:
          type: string
          description: Additional payment notes.
          nullable: true
        CreditCardId:
          type: string
          description: 'Unique identifier of the [Credit card](https://mews-systems.gitbook.io/connector-api/operations/#credit-card).'
          format: uuid
        ReceiptIdentifier:
          type: string
          description: Identifier of the payment receipt.
          nullable: true
      additionalProperties: false
      x-schema-id: ChargeCreditCardParameters
    ChargeCreditCardResult:
      title: ChargeCreditCardResult
      type: object
      properties:
        PaymentId:
          type: string
          description: 'Unique identifier of the [Payment item](https://mews-systems.gitbook.io/connector-api/operations/accountingitems/#payment-item).'
          format: uuid
      additionalProperties: false
      x-schema-id: ChargeCreditCardResult
    ChargeableCustomer:
      title: Customer search result
      required:
        - Customer
      type: object
      properties:
        Customer:
          allOf:
            - $ref: '#/components/schemas/Customer'
          description: The found customer.
        Reservation:
          title: Reservation (ver 2017-04-12)
          allOf:
            - $ref: '#/components/schemas/ReservationOld'
          description: Reservation of the customer in case they are currently staying in the property.
          nullable: true
      additionalProperties: false
      x-schema-id: ChargeableCustomer
    ClearRestrictionParameters:
      title: ClearRestrictionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Data
        - ServiceId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ServiceId:
          minLength: 1
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services#service) to which the restrictions apply.'
          x-schema-id: HybridIdentifier
        Data:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RestrictionClearData'
          description: Details of the matching conditions and time intervals for clearing restrictions.
      additionalProperties: false
      x-schema-id: ClearRestrictionParameters
    CommandsGetAllFilterByCommandIdParameters:
      title: Get all commands by unique identifiers
      required:
        - CommandIds
      type: object
      allOf:
        - $ref: '#/components/schemas/CommandsGetAllFilterParameters'
      properties:
        CommandIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the commands to filter by.
      additionalProperties: false
      description: Filter commands by their unique identifiers.
      x-schema-id: CommandsGetAllFilterByCommandIdParameters
    CommandsGetAllFilterByStatesParameters:
      title: Get all commands by device identifiers and states
      required:
        - DeviceIds
        - States
      type: object
      allOf:
        - $ref: '#/components/schemas/CommandsGetAllFilterParameters'
      properties:
        DeviceIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Device` to filter by.
        States:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DeviceCommandStateEnum'
          description: States of the commands to filter by.
        UpdatedUtc:
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the commands were updated.
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      description: 'Filter commands by the unique identifiers of `Device` and states, with optional filtering by update interval.'
      x-schema-id: CommandsGetAllFilterByStatesParameters
    CommandsGetAllFilterParameters:
      title: Get all commands filter parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
      additionalProperties: false
      x-schema-id: CommandsGetAllFilterParameters
    Companionship:
      title: Companionship
      type: object
      properties:
        Id:
          type: string
          description: 'Unique identifier of [Companionship](https://mews-systems.gitbook.io/connector-api/operations/#companionship).'
          format: uuid
        CustomerId:
          type: string
          description: 'Unique identifier of [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).'
          format: uuid
        ReservationGroupId:
          type: string
          description: 'Unique identifier of [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).'
          format: uuid
        ReservationId:
          type: string
          description: Unique identifier of reservation.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: Companionship
    CompanionshipAddParameters:
      title: CompanionshipAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerId
        - ReservationId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the `Reservation`.
          format: uuid
        CustomerId:
          type: string
          description: Unique identifier of the `Customer`.
          format: uuid
      additionalProperties: false
      x-schema-id: CompanionshipAddParameters
    CompanionshipAddResult:
      title: CompanionshipAddResult
      required:
        - CompanionshipId
      type: object
      properties:
        CompanionshipId:
          type: string
          description: Identifier of the created `Companionship` entity.
          format: uuid
      additionalProperties: false
      x-schema-id: CompanionshipAddResult
    CompanionshipDeleteParameters:
      title: CompanionshipDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerId
        - ReservationId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the `Reservation`.
          format: uuid
        CustomerId:
          type: string
          description: Unique identifier of the `Customer`.
          format: uuid
      additionalProperties: false
      x-schema-id: CompanionshipDeleteParameters
    CompanionshipExtent:
      title: CompanionshipExtent
      type: object
      properties:
        Reservations:
          type: boolean
        ReservationGroups:
          type: boolean
        Customers:
          type: boolean
      additionalProperties: false
      description: 'Extent of data to be returned. E.g. it is possible to specify that together with the companionships, customers, reservations, and reservation groups should be also returned.'
      x-schema-id: CompanionshipExtent
    CompanionshipFilterParameters:
      title: CompanionshipFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        CompanionshipIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Companionship](https://mews-systems.gitbook.io/connector-api/operations/#companionship).'
          nullable: true
        Extent:
          title: CompanionshipExtent
          allOf:
            - $ref: '#/components/schemas/CompanionshipExtent'
          description: 'Extent of data to be returned. E.g. it is possible to specify that together with the companionships, customers, reservations, and reservation groups should be also returned.'
        ReservationIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of reservations.
          nullable: true
        CustomerIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).'
          nullable: true
        ReservationGroupIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Reservation groups](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: CompanionshipFilterParameters
    CompanionshipResult:
      title: CompanionshipResult
      type: object
      properties:
        Companionships:
          type: array
          items:
            $ref: '#/components/schemas/Companionship'
          description: Companionships.
          nullable: true
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/ReservationOld'
          description: The accompanied reservations.
          nullable: true
        ReservationGroups:
          type: array
          items:
            $ref: '#/components/schemas/ReservationGroupOld'
          description: The accompanied reservation groups.
          nullable: true
        Customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          description: Customers that belong to the companionships.
          nullable: true
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CompanionshipResult
    Company:
      title: Company
      required:
        - ChainId
        - CreditRating
        - Id
        - IsActive
        - Name
        - Number
        - Options
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the company.
          format: uuid
        ChainId:
          type: string
          description: Unique identifier of the chain.
          format: uuid
        Name:
          minLength: 1
          type: string
          description: Name of the company.
        MotherCompanyId:
          type: string
          description: Unique identifier of mother company.
          format: uuid
          nullable: true
        InvoicingEmail:
          type: string
          description: Email for issuing invoices to the company.
          format: email
          nullable: true
        WebsiteUrl:
          type: string
          description: The website url of the company.
          format: uri
          nullable: true
        InvoiceDueInterval:
          type: string
          description: 'The maximum time, when the invoice has to be be paid in ISO 8601 duration format.'
          nullable: true
        Options:
          title: Company Options
          allOf:
            - $ref: '#/components/schemas/CompanyOptions'
          description: Options of the company.
        CreditRating:
          title: Credit Rating
          allOf:
            - $ref: '#/components/schemas/CreditRating'
          description: Credit rating to define creditworthiness of the company.
        Department:
          type: string
          description: 'The internal segmentation of a company, e.g. sales department.'
          nullable: true
        DunsNumber:
          type: string
          description: The Dun & Bradstreet unique 9-digit DUNS number.
          nullable: true
        ReferenceIdentifier:
          type: string
          description: External system identifier - custom identifier used by an external system such as an external database.
          nullable: true
        AccountingCode:
          type: string
          description: Accounting code of the company.
          nullable: true
        AdditionalTaxIdentifier:
          type: string
          description: Additional tax identifier of the company.
          nullable: true
        BillingCode:
          type: string
          description: Billing code of the company.
          nullable: true
        Contact:
          type: string
          description: 'Other contact details, such as telephone, email or similar.'
          nullable: true
        ContactPerson:
          type: string
          description: Contact person of the company.
          nullable: true
        ElectronicInvoiceIdentifier:
          type: string
          description: Electronic invoice identifier of the company.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AdditionalTaxIdentifier` instead.
        Identifier:
          type: string
          description: Fiscal or legal identifier of the company.
          nullable: true
        Iata:
          type: string
          description: Iata of the company.
          nullable: true
        IsActive:
          type: boolean
          description: Whether the company is still active.
        Notes:
          type: string
          description: Additional notes.
          nullable: true
        Number:
          type: integer
          description: Unique number of the company.
          format: int64
        TaxIdentifier:
          type: string
          description: Tax identification number of the company.
          nullable: true
        Telephone:
          type: string
          description: Contact telephone number.
          format: tel
          nullable: true
        CreatedUtc:
          type: string
          description: 'Date of [Company](https://mews-systems.gitbook.io/connector-api/operations/#company) creation date and time.'
          format: date-time
          nullable: true
        UpdatedUtc:
          type: string
          description: 'Date of [Company](https://mews-systems.gitbook.io/connector-api/operations/#company) last update date and time.'
          format: date-time
          nullable: true
        Address:
          title: Address
          allOf:
            - $ref: '#/components/schemas/OldAddress'
          description: ''
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use AddressId instead.
        AddressId:
          type: string
          description: 'Unique identifier of the company [Address](https://mews-systems.gitbook.io/connector-api/operations/addresses/#account-address).'
          format: uuid
          nullable: true
        MergeTargetId:
          type: string
          description: Unique identifier of the account (Customer) to which this company is linked.
          format: uuid
          nullable: true
        TaxIdentificationNumber:
          type: string
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use TaxIdentifier instead.
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of company from external system.
          nullable: true
      additionalProperties: false
      x-schema-id: Company
    CompanyAccount:
      title: Company
      required:
        - ChainId
        - Classifications
        - CreatedUtc
        - Name
        - Options
        - UpdatedUtc
        - UpdaterProfileId
      type: object
      properties:
        ChainId:
          type: string
          description: Unique identifier of the chain.
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the `Company` in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the `Company` in UTC timezone in ISO 8601 format.
          format: date-time
        UpdaterProfileId:
          type: string
          description: Unique identifier of the user who updated the company.
          format: uuid
        Email:
          type: string
          description: Email address of the company.
          format: email
          nullable: true
        TaxIdentifier:
          type: string
          description: Tax identification number of the company.
          nullable: true
        BillingCode:
          type: string
          description: Billing code of the company.
          nullable: true
        AccountingCode:
          type: string
          description: Accounting code of the company.
          nullable: true
        Notes:
          type: string
          description: Additional notes.
          nullable: true
        Name:
          minLength: 1
          type: string
          description: Name of the company.
        MotherCompanyId:
          type: string
          description: Unique identifier of mother company.
          format: uuid
          nullable: true
        WebsiteUrl:
          type: string
          description: The website url of the company.
          format: uri
          nullable: true
        InvoiceDueInterval:
          type: string
          description: 'The maximum time (in ISO 8601 duration format), when the invoice has to be be paid.'
          nullable: true
        CreditRatingBasic:
          allOf:
            - $ref: '#/components/schemas/CreditRatingBasicEnum'
          description: "Credit rating to define credit worthiness of the company.\n\nCreditOk (Company can book services.)\n\nPaymentRequiredUpfront (Company must pay upfront.)\n\nLocalDecisionRequired (Requires local approval.)"
          nullable: true
        Department:
          type: string
          description: 'The internal segmentation of a company, e.g. sales department.'
          nullable: true
        DunsNumber:
          type: string
          description: The Dun & Bradstreet unique 9-digit DUNS number.
          nullable: true
        ReferenceId:
          type: string
          description: External system identifier - custom identifier used by an external system such as an external database.
          nullable: true
        ExternalIdentifier:
          type: string
          description: Identifier of company from external system.
          nullable: true
        AdditionalTaxIdentifier:
          type: string
          description: Additional tax identifier of the company.
          nullable: true
        Contact:
          type: string
          description: 'Other contact details, such as telephone, email or similar.'
          nullable: true
        ContactPerson:
          type: string
          description: Contact person of the company.
          nullable: true
        FiscalIdentifier:
          type: string
          description: Fiscal identifier of the company.
          nullable: true
        Iata:
          type: string
          description: Iata of the company.
          nullable: true
        Telephone:
          type: string
          description: Contact telephone number.
          nullable: true
        SourceId:
          type: string
          description: Unique identifier of the `Source`.
          format: uuid
          nullable: true
        Classifications:
          title: Company classifications
          allOf:
            - $ref: '#/components/schemas/CompanyAccountClassifications'
          description: Classifications of the company.
        Options:
          title: Company options
          allOf:
            - $ref: '#/components/schemas/CompanyAccountOptions'
          description: Options of the company.
      additionalProperties: false
      description: ''
      x-schema-id: CompanyAccount
    CompanyAccountClassifications:
      title: Company classifications
      type: object
      properties:
        Corporate:
          type: boolean
          description: Corporate.
        Internal:
          type: boolean
          description: Internal.
        Private:
          type: boolean
          description: Private.
        OnlineTravelAgency:
          type: boolean
          description: Online travel agency.
        GlobalDistributionSystem:
          type: boolean
          description: Global distribution system.
        Marketing:
          type: boolean
          description: Marketing.
        Inactive:
          type: boolean
          description: Inactive.
        GovernmentEntity:
          type: boolean
          description: Government Entity
      additionalProperties: false
      x-schema-id: CompanyAccountClassifications
    CompanyAccountOptions:
      title: Company options
      type: object
      properties:
        Invoiceable:
          type: boolean
          description: Whether the company is invoiceable or not.
        AddFeesToInvoices:
          type: boolean
          description: Whether the company has an additional fee applied for invoicing or not.
        AddTaxDeductedPaymentToInvoices:
          type: boolean
          description: Whether tax-deducted payments should be automatically added to invoices.
      additionalProperties: false
      x-schema-id: CompanyAccountOptions
    CompanyAddParameters:
      title: CompanyAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Name
        - Options
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        Name:
          minLength: 1
          type: string
          description: Name of the company.
        MotherCompanyId:
          type: string
          description: Unique identifier of the mother company.
          format: uuid
          nullable: true
        InvoicingEmail:
          type: string
          description: Email for issuing invoices to the company.
          format: email
          nullable: true
        WebsiteUrl:
          type: string
          description: The website url of the company.
          format: uri
          nullable: true
        InvoiceDueInterval:
          type: string
          description: 'The maximum time, when the invoice has to be be paid in ISO 8601 duration format.'
          nullable: true
        Options:
          title: Company Options Parameters
          allOf:
            - $ref: '#/components/schemas/CompanyOptionsParameters'
          description: Options of the company.
        CreditRating:
          title: Credit rating parameters
          allOf:
            - $ref: '#/components/schemas/CreditRatingParameters'
          description: Credit rating to define creditworthiness of the company.
          nullable: true
        Department:
          type: string
          description: 'The internal segmentation of a company, e.g. sales department.'
          nullable: true
        DunsNumber:
          type: string
          description: The Dun & Bradstreet unique 9-digit DUNS number.
          nullable: true
        ReferenceIdentifier:
          type: string
          description: External system identifier - custom identifier used by an external system such as an external database.
          nullable: true
        AccountingCode:
          type: string
          description: Accounting code of the company.
          nullable: true
        AdditionalTaxIdentifier:
          type: string
          description: Additional tax identifer of the company.
          nullable: true
        BillingCode:
          type: string
          description: Billing code of the company.
          nullable: true
        Contact:
          type: string
          description: 'Other contact details, such as telephone, email or similar.'
          nullable: true
        ContactPerson:
          type: string
          description: Contact person of the company.
          nullable: true
        Identifier:
          type: string
          description: Fiscal or legal identifier of the company.
          nullable: true
        Iata:
          type: string
          description: Iata of the company.
          nullable: true
        Notes:
          type: string
          description: Notes of the company.
          nullable: true
        TaxIdentifier:
          type: string
          description: Tax identification number of the company.
          nullable: true
        Telephone:
          type: string
          description: Contact telephone number.
          format: tel
          nullable: true
        Address:
          title: Address parameters
          allOf:
            - $ref: '#/components/schemas/AddressParameters'
          description: New address details.
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the company from external system.
          nullable: true
      additionalProperties: false
      x-schema-id: CompanyAddParameters
    CompanyClassificationUpdateParameters:
      title: Company update classifications
      type: object
      properties:
        Corporate:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Corporate (or `null` if the value should not be updated).
          nullable: true
        Internal:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Internal (or `null` if the value should not be updated).
          nullable: true
        Private:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Private (or `null` if the value should not be updated).
          nullable: true
        OnlineTravelAgency:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Online travel agency (or `null` if the value should not be updated).
          nullable: true
        GlobalDistributionSystem:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Global distribution system (or `null` if the value should not be updated).
          nullable: true
        Marketing:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Marketing (or `null` if the value should not be updated).
          nullable: true
        Inactive:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Inactive (or `null` if the value should not be updated).
          nullable: true
        GovernmentEntity:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Government Entity (or `null` if the value should not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: CompanyClassificationUpdateParameters
    CompanyClassifications:
      title: CompanyClassifications
      type: object
      properties:
        Corporate:
          type: boolean
        Internal:
          type: boolean
        Private:
          type: boolean
        OnlineTravelAgency:
          type: boolean
        GlobalDistributionSystem:
          type: boolean
        Marketing:
          type: boolean
        Inactive:
          type: boolean
        GovernmentEntity:
          type: boolean
      additionalProperties: false
      x-schema-id: CompanyClassifications
    CompanyClassificationsParameters:
      title: CompanyClassificationsParameters
      type: object
      properties:
        Corporate:
          type: boolean
        Internal:
          type: boolean
        Private:
          type: boolean
        OnlineTravelAgency:
          type: boolean
        GlobalDistributionSystem:
          type: boolean
        Marketing:
          type: boolean
        Inactive:
          type: boolean
        GovernmentEntity:
          type: boolean
      additionalProperties: false
      x-schema-id: CompanyClassificationsParameters
    CompanyContractFilterParameters:
      title: CompanyContractFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        CompanyContractIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifier of the Travel agency contract to fetch.
          nullable: true
        CompanyIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) assigned with Travel agency contracts.'
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) where the Travel agency contract belong to.'
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
      additionalProperties: false
      x-schema-id: CompanyContractFilterParameters
    CompanyExtent:
      title: Company Extent
      type: object
      properties:
        Inactive:
          type: boolean
      additionalProperties: false
      x-schema-id: CompanyExtent
    CompanyFilterParameters:
      title: CompanyFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the chain. If not specified, the operation returns data for all chains within scope of the Access Token.'
          nullable: true
        MotherCompanyIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of mother `Company`.
          nullable: true
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        TimeFilter:
          anyOf:
            - $ref: '#/components/schemas/CompanyTimeFilter'
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use CreatedUtc or UpdatedUtc instead.
        StartUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use CreatedUtc or UpdatedUtc instead.
        EndUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use CreatedUtc or UpdatedUtc instead.
        Ids:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Companies](https://mews-systems.gitbook.io/connector-api/operations/#company).'
          nullable: true
        ExternalIdentifiers:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: 'Identifiers of [Company](https://mews-systems.gitbook.io/connector-api/operations/#company) from external system.'
          nullable: true
        Names:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: 'Names of [Companies](https://mews-systems.gitbook.io/connector-api/operations/#company).'
          nullable: true
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted, or both types of record. If not specified, both active and deleted records will be returned.'
          nullable: true
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
          nullable: true
      additionalProperties: false
      x-schema-id: CompanyFilterParameters
    CompanyOptionUpdateParameters:
      title: Company update options
      type: object
      properties:
        Invoiceable:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Whether the company is invoiceable or not (or `null` if the `Invoiceable` field should not be updated).
          nullable: true
        AddFeesToInvoices:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Whether the company has an additional fee applied for invoicing or not (or `null` if the `AddFeesToInvoices` field should not be updated).
          nullable: true
        AddTaxDeductedPaymentToInvoices:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Whether tax-deducted payments should be automatically added to invoices (or `null` if the `AddTaxDeductedPaymentToInvoices` field should not be updated).
          nullable: true
      additionalProperties: false
      description: Options of the company.
      x-schema-id: CompanyOptionUpdateParameters
    CompanyOptions:
      title: Company Options
      type: object
      properties:
        Invoiceable:
          type: boolean
          description: Whether the company is invoiceable or not.
        AddFeesToInvoices:
          type: boolean
          description: Whether the company has an additional fee applied for invoicing or not.
        AddTaxDeductedPaymentToInvoices:
          type: boolean
          description: Whether tax-deducted payments should be automatically added to invoices.
      additionalProperties: false
      description: Options of the company.
      x-schema-id: CompanyOptions
    CompanyOptionsParameters:
      title: Company Options Parameters
      type: object
      properties:
        Invoiceable:
          type: boolean
          description: Whether the company is invoiceable or not.
        AddFeesToInvoices:
          type: boolean
          description: Whether the company has an additional fee applied for invoicing or not.
        AddTaxDeductedPaymentToInvoices:
          type: boolean
          description: Whether tax-deducted payments should be automatically added to invoices.
      additionalProperties: false
      description: Options of the company.
      x-schema-id: CompanyOptionsParameters
    CompanyRelationsParameters:
      title: Company with relations parameters
      type: object
      properties:
        PartnerCompany:
          type: boolean
          description: Indicates whether the billing automation will apply if the company added to a reservation is a partner company.
        TravelAgency:
          type: boolean
          description: Indicates whether the billing automation will apply if the company added to a reservation is a travel agency.
      additionalProperties: false
      x-schema-id: CompanyRelationsParameters
    CompanyResult:
      title: CompanyResult
      required:
        - Companies
      type: object
      properties:
        Companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
          description: The company profiles of the enterprise.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest company item returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older companies. If [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) is specified in the request message, then Cursor will always be included in the response message; this is true even when using Extents set to false so that no actual data is returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CompanyResult
    CompanyTimeFilter:
      title: Company Time Filter
      enum:
        - Created
        - Updated
      type: string
    CompanyUpdateParameters:
      title: CompanyUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CompanyId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        CompanyId:
          type: string
          description: 'Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/#company).'
          format: uuid
        Name:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Name of the company (or `null` if the name should not be updated).
          nullable: true
        MotherCompanyId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Unique identifier of the mother company (or `null` if the mother company should not be updated).
          nullable: true
        InvoicingEmail:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Email for issuing invoices to the company  (or `null` if the email for issuing invoices should not be updated).
          format: email
          nullable: true
        WebsiteUrl:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: The website url of the company (or `null` if the website url should not be updated).
          format: uri
          nullable: true
        InvoiceDueInterval:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: 'The maximum time, when the invoice has to be be paid in ISO 8601 duration format (or `null` if the interval should not be updated).'
          nullable: true
        Options:
          title: Company update options
          allOf:
            - $ref: '#/components/schemas/CompanyOptionUpdateParameters'
          description: Options of the company (or `null` if the company options should not be updated).
          nullable: true
        CreditRating:
          title: Credit rating update parameters
          allOf:
            - $ref: '#/components/schemas/CreditRatingUpdateParameters'
          description: Credit rating to define creditworthiness of the company (or `null` if the credit rating should not be updated).
          nullable: true
        Department:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: 'The internal segmentation of a company, e.g. sales department (or `null` if the department should not be updated).'
          nullable: true
        DunsNumber:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: The Dun & Bradstreet unique 9-digit DUNS number (or `null` if the Duns number should not be updated).
          nullable: true
        ReferenceIdentifier:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: External system identifier - custom identifier used by an external system such as an external database (or `null` if the identifier should not be updated).
          nullable: true
        AccountingCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Accounting code of the company (or `null` if the accounting code should not be updated).
          nullable: true
        AdditionalTaxIdentifier:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Additional tax identifier of the company (or `null` if the additional tax identifier should not be updated).
          nullable: true
        BillingCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Billing code of the company (or `null` if the billing code should not be updated).
          nullable: true
        Contact:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: 'Other contact details, such as telephone, email or similar (or `null` if the contact should not be updated).'
          nullable: true
        ContactPerson:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Contact person of the company (or `null` if the contact person should not be updated).
          nullable: true
        Identifier:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Fiscal or legal identifier of the company (or `null` if the identifier should not be updated).
          nullable: true
        Iata:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Iata of the company (or `null` if the Iata should not be updated).
          nullable: true
        Notes:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Notes of the company (or `null` if the notes should not be updated).
          nullable: true
        TaxIdentifier:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Tax identification number of the company (or `null` if the tax identifier should not be updated).
          nullable: true
        Telephone:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Contact telephone number (or `null` if the telephone number should not be updated).
          format: tel
          nullable: true
        ExternalIdentifier:
          title: String update value
          maxLength: 255
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Identifier of the company from external system (or `null` if the External Identifier should not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: CompanyUpdateParameters
    CompanyWithBillingAutomationRelation:
      title: Company with billing automation relation
      required:
        - CompanyId
        - CompanyRelations
      type: object
      properties:
        CompanyId:
          type: string
          description: Unique identifier of the company.
          format: uuid
        CompanyRelations:
          title: Company with relations parameters
          allOf:
            - $ref: '#/components/schemas/CompanyRelationsParameters'
          description: Company relations.
      additionalProperties: false
      x-schema-id: CompanyWithBillingAutomationRelation
    CompanyWithBillingAutomationRelationIEnumerableUpdateValue:
      title: Company with billing automation relation array update value
      type: object
      properties:
        Value:
          type: array
          items:
            $ref: '#/components/schemas/CompanyWithBillingAutomationRelation'
          description: Value which is to be updated.
          nullable: true
      additionalProperties: false
      x-schema-id: CompanyWithBillingAutomationRelationIEnumerableUpdateValue
    Configuration:
      title: Configuration
      required:
        - Enterprise
        - NowUtc
      type: object
      properties:
        NowUtc:
          minLength: 1
          type: string
          description: Current server date and time in UTC timezone in ISO 8601 format.
          format: date-time
        Enterprise:
          title: Enterprise
          allOf:
            - $ref: '#/components/schemas/Enterprise'
          description: 'The enterprise (e.g. hotel, hostel) associated with the access token.'
        Service:
          allOf:
            - $ref: '#/components/schemas/Service'
          description: 'The reservable service (e.g. accommodation, parking) associated with the access token of the service scoped integration.'
          nullable: true
        PaymentCardStorage:
          title: Payment card storage
          allOf:
            - $ref: '#/components/schemas/PaymentCardStorage'
          description: Contains information about payment card storage.
          nullable: true
        IsIdentityDocumentNumberRequired:
          type: boolean
          description: 'Whether the identity documents for this enterprise include the value of identity document number as required by the legal environment. When `false`, the number is not required, and an empty string can be used in write operations. In read operations, an empty string is returned when an empty string was provided for the number.'
      additionalProperties: false
      x-schema-id: Configuration
    ConfigurationFilterParameters:
      title: ConfigurationFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/#enterprise), defaults to the enterprise associated with the given access token.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ConfigurationFilterParameters
    ConfirmReservationParameters:
      title: ConfirmReservationParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ReservationIds:
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifier of the reservations to confirm.
        SendConfirmationEmail:
          type: boolean
          description: Wheter the confirmation email is sent. Default value is true.
          nullable: true
      additionalProperties: false
      x-schema-id: ConfirmReservationParameters
    ConnectorApiExceptionResult:
      title: ConnectorApiExceptionResult
      type: object
      properties:
        Message:
          type: string
          nullable: true
        RequestId:
          type: string
          nullable: true
        Details:
          nullable: true
      additionalProperties: false
      x-schema-id: ConnectorApiExceptionResult
    ContractResult:
      title: ContractResult
      required:
        - TravelAgencyContracts
      type: object
      properties:
        TravelAgencyContracts:
          type: array
          items:
            $ref: '#/components/schemas/TravelAgencyContract'
          description: The updated travel agency contracts.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest contract returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older messages.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ContractResult
    Coproduct:
      title: Coproduct
      required:
        - Discriminator
        - Value
      type: object
      properties:
        Discriminator:
          minLength: 1
          type: string
        Value: { }
      additionalProperties: false
      x-schema-id: Coproduct
    CoproductParameters:
      title: CoproductParameters
      type: object
      properties:
        Discriminator:
          type: string
          nullable: true
        Value:
          allOf:
            - $ref: '#/components/schemas/JToken'
          nullable: true
      additionalProperties: false
      x-schema-id: CoproductParameters
    CostParameters:
      title: CostParameters
      required:
        - Amount
        - Currency
        - Tax
      type: object
      properties:
        Amount:
          type: number
          format: double
        Currency:
          minLength: 1
          type: string
          format: currency
        Tax:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: CostParameters
    Counter:
      title: Counter
      required:
        - CreatedUtc
        - EnterpriseId
        - Format
        - Id
        - IsDefault
        - Name
        - Type
        - UpdatedUtc
        - Value
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the counter.
          format: uuid
        EnterpriseId:
          type: string
          description: Unique identifier of the enterprise to which the counter belongs.
          format: uuid
        Name:
          minLength: 1
          type: string
          description: Name of the counter.
        IsDefault:
          type: boolean
          description: Whether the counter is used by default.
        Value:
          type: integer
          description: Current value of the counter.
          format: int64
        Format:
          minLength: 1
          type: string
          description: Display format of the counter.
        Type:
          $ref: '#/components/schemas/EnterpriseScopeCounterDiscriminator'
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the counter in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the counter in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: Counter
    CounterFilterParameters:
      title: CounterFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        CounterIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the counters. If not specified, the operation returns all counters.'
          nullable: true
        Type:
          anyOf:
            - $ref: '#/components/schemas/EnterpriseScopeCounterDiscriminator'
          description: 'Type of the counter. If not specified, the operation returns all types.'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which `Counter` was updated.
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: CounterFilterParameters
    CounterResult:
      title: CounterResult
      required:
        - BillCounters
        - BillPreviewCounters
        - Counters
        - ProformaCounters
        - RegistrationCardCounters
        - ServiceOrderCounters
      type: object
      properties:
        Counters:
          type: array
          items:
            $ref: '#/components/schemas/Counter'
          description: All types of counters.
        BillCounters:
          type: array
          items:
            $ref: '#/components/schemas/Counter'
          description: The counters used to count closed `Bills`.
          deprecated: true
          x-deprecatedMessage: Use `Counters` instead.
        ProformaCounters:
          type: array
          items:
            $ref: '#/components/schemas/Counter'
          description: The counters used to count Pro Forma invoices for `Bills`.
          deprecated: true
          x-deprecatedMessage: Use `Counters` instead.
        BillPreviewCounters:
          type: array
          items:
            $ref: '#/components/schemas/Counter'
          description: The counters used to count bill previews for `Bills`.
          deprecated: true
          x-deprecatedMessage: Use `Counters` instead.
        ServiceOrderCounters:
          type: array
          items:
            $ref: '#/components/schemas/Counter'
          description: The counters used to count service orders (for example reservations).
          deprecated: true
          x-deprecatedMessage: Use `Counters` instead.
        RegistrationCardCounters:
          type: array
          items:
            $ref: '#/components/schemas/Counter'
          description: The counters used to count registration cards.
          deprecated: true
          x-deprecatedMessage: Use `Counters` instead.
        Cursor:
          type: string
          description: Unique identifier of the last returned counter in `Counters`. This can be used in Limitation in a subsequent request to fetch the next batch of counters.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CounterResult
    Country:
      title: Country
      required:
        - Code
        - EnglishName
        - SovereignCountryCode
      type: object
      properties:
        Code:
          minLength: 1
          type: string
          description: 'ISO 3166-1 alpha-2 code, e.g. `CZ` or `SK`.'
        SovereignCountryCode:
          minLength: 1
          type: string
          description: ISO 3166-1 alpha-2 code of the sovereign country. May differ from `Code` for dependent territories.
        EnglishName:
          minLength: 1
          type: string
          description: English name of the country.
      additionalProperties: false
      x-schema-id: Country
    CountryGroup:
      title: Country group
      required:
        - Code
        - CountryCodes
        - EnglishName
      type: object
      properties:
        Code:
          minLength: 1
          type: string
          description: 'Group code, e.g. `EU`, `SCHENGEN`, `NORDIC`...'
        EnglishName:
          minLength: 1
          type: string
          description: English name of the country group.
        CountryCodes:
          type: array
          items:
            type: string
          description: 'Codes of countries included in the group, in ISO 3166-1 alpha-2 format.'
      additionalProperties: false
      x-schema-id: CountryGroup
    CountryResult:
      title: CountryResult
      required:
        - Countries
        - CountryGroups
        - CountryRules
        - CountrySubdivisions
      type: object
      properties:
        Countries:
          type: array
          items:
            $ref: '#/components/schemas/Country'
          description: The supported countries.
        CountrySubdivisions:
          type: array
          items:
            $ref: '#/components/schemas/CountrySubdivision'
          description: The supported country subdivisions.
        CountryRules:
          type: array
          items:
            $ref: '#/components/schemas/CountryRule'
          description: Country-specific rules
        CountryGroups:
          title: Country group
          type: array
          items:
            $ref: '#/components/schemas/CountryGroup'
          description: The supported country groups.
      additionalProperties: false
      x-schema-id: CountryResult
    CountryRule:
      title: Country rules
      required:
        - CountryCode
        - DriverLicenceExpirationDateNotRequired
        - IdentityCardExpirationDateNotRequired
      type: object
      properties:
        CountryCode:
          minLength: 1
          type: string
          description: 'ISO 3166-1 alpha-2 code, e.g. US or GB.'
        IdentityCardExpirationDateNotRequired:
          type: boolean
          description: Whether the country requires expiration date for identity card.
        DriverLicenceExpirationDateNotRequired:
          type: boolean
          description: Whether the country requires expiration date for driver's license.
      additionalProperties: false
      description: Country-specific rules
      x-schema-id: CountryRule
    CountrySubdivision:
      title: Country subdivision
      required:
        - Code
        - CountryCode
        - EnglishName
      type: object
      properties:
        Code:
          minLength: 1
          type: string
          description: 'ISO 3166-2 code of the administrative division, e.g AU-QLD.'
        CountryCode:
          minLength: 1
          type: string
          description: 'ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries#country).'
        EnglishName:
          minLength: 1
          type: string
          description: English name of the country subdivision.
      additionalProperties: false
      x-schema-id: CountrySubdivision
    CreditCard:
      title: Credit card
      required:
        - CreatedUtc
        - CustomerId
        - Id
        - IsActive
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the credit card.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
          nullable: true
        CustomerId:
          type: string
          description: 'Unique identifier of the credit card [owner](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).'
          format: uuid
        IsActive:
          type: boolean
          description: Whether the credit card is still active.
        State:
          type: string
          description: State of the credit card.
          nullable: true
        Kind:
          type: string
          description: Kind of the credit card.
          nullable: true
        Format:
          type: string
          description: Format of the credit card.
          nullable: true
        Type:
          type: string
          description: Type of the credit card.
          nullable: true
        ObfuscatedNumber:
          type: string
          description: 'Obfuscated credit card number. At most first six digits and last four digits can be specified, otherwise the digits are replaced with *.'
          nullable: true
        Expiration:
          type: string
          description: Expiration of the credit card in format MM/YYYY.
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the credit card in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the credit card in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: CreditCard
    CreditCardData:
      title: CreditCardData
      required:
        - Expiration
        - StorageData
      type: object
      properties:
        MaskedStorageData:
          type: string
          nullable: true
          readOnly: true
        StorageData:
          minLength: 1
          type: string
        ObfuscatedNumber:
          type: string
          nullable: true
          deprecated: true
        Expiration:
          minLength: 1
          type: string
      additionalProperties: false
      description: Credit card details provided by PCI provider.
      x-schema-id: CreditCardData
    CreditCardFilterParameters:
      title: CreditCardFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        CreditCardIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Credit cards](https://mews-systems.gitbook.io/connector-api/operations/#credit-card). Required if no other filter is provided.'
          nullable: true
        CustomerIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: CreditCardFilterParameters
    CreditCardParameters:
      title: Credit card parameters
      required:
        - Name
        - Number
        - Type
      type: object
      properties:
        Type:
          minLength: 1
          type: string
          description: 'Type of the credit card, one of: `Visa`, `MasterCard`, `Amex`, `Discover`, `DinersClub`, `Jcb`, `EnRoute`, `Maestro`, `UnionPay`.'
        Number:
          minLength: 1
          type: string
          description: 'Obfuscated credit card number. At most first six digits and last four digits can be specified, the digits in between should be replaced with `*`. It is possible to provide even more obfuscated number or just last four digits. **Never provide full credit card number**. For example `411111******1111`.'
        Expiration:
          type: string
          description: 'Expiration of the credit card in format `MM/YYYY`, e.g. `12/2016` or `04/2017`.'
          nullable: true
        Name:
          minLength: 1
          type: string
          description: Name of the card holder.
      additionalProperties: false
      description: ''
      x-schema-id: CreditCardParameters
    CreditCardPaymentParameters:
      title: CreditCardPaymentParameters
      required:
        - AccessToken
        - Amount
        - Client
        - ClientToken
        - CreditCard
        - CustomerId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        BillId:
          type: string
          description: Unique identifier of an open bill of the customer where to assign the payment.
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          description: 'Unique identifier of an [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category) to be assigned to the credit card payment.'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the reservation the payment belongs to.
          format: uuid
          nullable: true
        Amount:
          title: Amount parameters
          allOf:
            - $ref: '#/components/schemas/ExtendedAmountParameters'
          description: Amount of the credit card payment.
        Notes:
          type: string
          description: Additional payment notes.
          nullable: true
        CustomerId:
          type: string
          description: 'Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).'
          format: uuid
        CreditCard:
          title: Credit card parameters
          allOf:
            - $ref: '#/components/schemas/CreditCardParameters'
          description: ''
        ReceiptIdentifier:
          type: string
          description: Identifier of the payment receipt.
          nullable: true
      additionalProperties: false
      x-schema-id: CreditCardPaymentParameters
    CreditCardResult:
      title: CreditCardResult
      type: object
      properties:
        CreditCards:
          type: array
          items:
            $ref: '#/components/schemas/CreditCard'
          description: The credit cards.
          nullable: true
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CreditCardResult
    CreditCardTransaction:
      title: Credit card transaction
      required:
        - ChargedAmount
        - PaymentId
      type: object
      properties:
        PaymentId:
          type: string
          description: Unique identifier of the `PaymentItem`.
          format: uuid
        SettlementId:
          type: string
          description: Identifier of the settlement.
          nullable: true
        SettledUtc:
          type: string
          description: Settlement date and time in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        Fee:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: Transaction fee - this includes an estimate of bank charges.
          nullable: true
        AdjustedFee:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: 'Transaction fee (adjusted) - this is the final confirmed transaction fee, including confirmed bank charges.'
          nullable: true
        ChargedAmount:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: Charged amount of the transaction.
        SettledAmount:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: Settled amount of the transaction.
          nullable: true
      additionalProperties: false
      x-schema-id: CreditCardTransaction
    CreditRating:
      title: Credit Rating
      type: object
      properties:
        Basic:
          allOf:
            - $ref: '#/components/schemas/CreditRatingBasicEnum'
          description: "Indicates the credit status of a company.\n\nCreditOk (Company can book services.)\n\nPaymentRequiredUpfront (Company must pay upfront.)\n\nLocalDecisionRequired (Requires local approval.)"
          nullable: true
      additionalProperties: false
      description: Credit rating to define creditworthiness of the company.
      x-schema-id: CreditRating
    CreditRatingBasic:
      title: Credit rating basic
      enum:
        - CreditOk
        - PaymentRequiredUpfront
        - LocalDecisionRequired
      type: string
      x-enumDescriptions:
        - Company can book services.
        - Company must pay upfront.
        - Requires local approval.
    CreditRatingBasicEnum:
      title: Credit rating basic
      enum:
        - CreditOk
        - PaymentRequiredUpfront
        - LocalDecisionRequired
      type: string
      description: "\n\nCreditOk (Company can book services.)\n\nPaymentRequiredUpfront (Company must pay upfront.)\n\nLocalDecisionRequired (Requires local approval.)"
      x-enumNames:
        - CreditOk
        - PaymentRequiredUpfront
        - LocalDecisionRequired
      x-enumDescriptions:
        - Company can book services.
        - Company must pay upfront.
        - Requires local approval.
    CreditRatingBasicUpdateValue:
      title: Credit rating basic update value
      type: object
      properties:
        Value:
          title: Credit rating basic
          allOf:
            - $ref: '#/components/schemas/CreditRatingBasicEnum'
          description: Value which is to be updated.
          x-enumNames:
            - CreditOk
            - PaymentRequiredUpfront
            - LocalDecisionRequired
          x-enumDescriptions:
            - Company can book services.
            - Company must pay upfront.
            - Requires local approval.
      additionalProperties: false
      x-schema-id: CreditRatingBasicUpdateValue
    CreditRatingParameters:
      title: Credit rating parameters
      type: object
      properties:
        Basic:
          allOf:
            - $ref: '#/components/schemas/CreditRatingBasicEnum'
          description: "Indicates the credit status of a company.\n\nCreditOk (Company can book services.)\n\nPaymentRequiredUpfront (Company must pay upfront.)\n\nLocalDecisionRequired (Requires local approval.)"
          nullable: true
      additionalProperties: false
      description: Credit rating to define creditworthiness of the company.
      x-schema-id: CreditRatingParameters
    CreditRatingUpdateParameters:
      title: Credit rating update parameters
      type: object
      properties:
        Basic:
          title: Credit rating basic update value
          allOf:
            - $ref: '#/components/schemas/CreditRatingBasicUpdateValue'
          description: Credit status of a company (or `null` if the credit status should not be updated).
          nullable: true
      additionalProperties: false
      description: Credit rating to define creditworthiness of the company.
      x-schema-id: CreditRatingUpdateParameters
    Currency:
      title: Currency
      required:
        - Code
        - Precision
      type: object
      properties:
        Code:
          minLength: 1
          type: string
          description: 'ISO-4217 three-letter code, e.g. USD or GBP.'
        Precision:
          type: integer
          description: Precision of the currency (count of decimal places).
          format: int32
      additionalProperties: false
      x-schema-id: Currency
    CurrencyAcceptance:
      title: Accepted currency
      required:
        - Currency
        - IsDefault
        - IsEnabled
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          description: ISO-4217 code of the `Currency`.
          format: currency
        IsDefault:
          type: boolean
          description: Whether the currency is a default accounting currency.
        IsEnabled:
          type: boolean
          description: Whether the currency is enabled for usage.
      additionalProperties: false
      x-schema-id: CurrencyAcceptance
    CurrencyAcceptanceFilterParameters:
      title: CurrencyAcceptanceFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Ids:
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Exchange Rates. If not specified, the operation returns all exchange rates.'
          nullable: true
        EnterpriseIds:
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/configuration/#enterprise). If not specified, the operation returns the exchange rates for all enterprises within scope of the Access Token.'
          nullable: true
      additionalProperties: false
      x-schema-id: CurrencyAcceptanceFilterParameters
    CurrencyResult:
      title: CurrencyResult
      required:
        - Currencies
      type: object
      properties:
        Currencies:
          type: array
          items:
            $ref: '#/components/schemas/Currency'
          description: The supported currencies.
      additionalProperties: false
      x-schema-id: CurrencyResult
    CurrencyValue:
      title: Currency value (ver 2023-02-02)
      required:
        - Currency
        - Value
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          format: currency
        Value:
          type: number
          format: double
      additionalProperties: false
      description: Absolute value of the fee.
      x-schema-id: CurrencyValue
    CurrencyValueOld:
      title: Currency value (ver 2018-06-07)
      required:
        - Currency
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          format: currency
        Value:
          type: number
          format: double
          nullable: true
        Net:
          type: number
          format: double
          nullable: true
          deprecated: true
        Tax:
          type: number
          format: double
          nullable: true
          deprecated: true
        TaxRate:
          type: number
          format: double
          nullable: true
          deprecated: true
      additionalProperties: false
      description: Total price of the reservation.
      x-schema-id: CurrencyValueOld
    Customer:
      title: Customer
      required:
        - ChainId
        - Classifications
        - CreatedUtc
        - CreatorProfileId
        - Id
        - IsActive
        - LastName
        - Number
        - Options
        - PreferredSpaceFeatures
        - UpdatedUtc
        - UpdaterProfileId
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the customer.
          format: uuid
        ChainId:
          type: string
          description: Unique identifier of the chain.
          format: uuid
        Number:
          minLength: 1
          type: string
          description: Number of the customer.
        Title:
          allOf:
            - $ref: '#/components/schemas/Title'
          description: "Title of the customer.\n\nMister (Mr.)\n\nMiss (Ms.)\n\nMisses (Mrs.)"
          nullable: true
        Sex:
          allOf:
            - $ref: '#/components/schemas/SexEnum'
          description: "Sex of the customer.\n\nMale\n\nFemale"
          nullable: true
        FirstName:
          type: string
          description: First name of the customer.
          nullable: true
        LastName:
          minLength: 1
          type: string
          description: Last name of the customer.
        SecondLastName:
          type: string
          description: Second last name of the customer.
          nullable: true
        NationalityCode:
          type: string
          description: 'ISO 3166-1 code of the [Country](https://mews-systems.gitbook.io/connector-api/operations/countries/#country).'
          nullable: true
        PreferredLanguageCode:
          type: string
          description: 'Language and culture code of the customer''s preferred language, according to their profile. For example: `en-GB`, `fr-CA`.'
          nullable: true
        LanguageCode:
          type: string
          description: 'Language and culture code of the customer''s language, based on multiple sources. These sources include the preferred language specified in internal data based on previous bookings, and the preferred language of the customer specified in their profile. If neither of these sources are present, we use the native language based on the customer''s nationality. The format is, for example, `en-US` or `fr-FR`.'
          nullable: true
        BirthDate:
          type: string
          description: Date of birth in ISO 8601 format.
          nullable: true
        BirthPlace:
          type: string
          description: Place of birth.
          nullable: true
        Occupation:
          type: string
          description: Occupation of the customer.
          nullable: true
        Email:
          type: string
          description: Email address of the customer.
          nullable: true
        HasOtaEmail:
          type: boolean
          description: 'Whether the customer''s email address is a temporary email address from an OTA. For more details, see the [product documentation](https://help.mews.com/s/article/how-to-maintain-ota-guest-profiles-with-verified-email-addresses-obtained-from-the-guest-portal).'
        Phone:
          type: string
          description: Phone number of the customer (possibly mobile).
          nullable: true
        TaxIdentificationNumber:
          type: string
          description: Tax identification number of the customer.
          nullable: true
        LoyaltyCode:
          type: string
          description: Loyalty code of the customer.
          nullable: true
        AccountingCode:
          type: string
          description: Accounting code of the customer.
          nullable: true
        BillingCode:
          type: string
          description: Billing code of the customer.
          nullable: true
        Notes:
          type: string
          description: Internal notes about the customer.
          nullable: true
        CarRegistrationNumber:
          maxLength: 255
          type: string
          description: Registration number of the customer's car.
          nullable: true
        DietaryRequirements:
          maxLength: 255
          type: string
          description: 'Customer''s dietary requirements, e.g. Vegan, Halal.'
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the customer in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the customer in UTC timezone in ISO 8601 format.
          format: date-time
        Passport:
          title: Identity document
          allOf:
            - $ref: '#/components/schemas/IdentityDocument'
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Get all identity documents](https://mews-systems.gitbook.io/connector-api/operations/identitydocuments#get-all-identity-documents) to fetch identity documents.'
        IdentityCard:
          title: Identity document
          allOf:
            - $ref: '#/components/schemas/IdentityDocument'
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Get all identity documents](https://mews-systems.gitbook.io/connector-api/operations/identitydocuments#get-all-identity-documents) to fetch identity documents.'
        Visa:
          title: Identity document
          allOf:
            - $ref: '#/components/schemas/IdentityDocument'
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Get all identity documents](https://mews-systems.gitbook.io/connector-api/operations/identitydocuments#get-all-identity-documents) to fetch identity documents.'
        DriversLicense:
          title: Identity document
          allOf:
            - $ref: '#/components/schemas/IdentityDocument'
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Get all identity documents](https://mews-systems.gitbook.io/connector-api/operations/identitydocuments#get-all-identity-documents) to fetch identity documents.'
        Address:
          title: Address
          allOf:
            - $ref: '#/components/schemas/OldAddress'
          description: ''
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AddressId` instead.
        AddressId:
          type: string
          description: Unique identifier of the `Address` of the customer.
          format: uuid
          nullable: true
        Classifications:
          type: array
          items:
            $ref: '#/components/schemas/CustomerClassificationsEnum'
          description: Classifications of the customer.
        Options:
          type: array
          items:
            $ref: '#/components/schemas/CustomerOptionsEnum'
          description: Options of the customer.
        ItalianDestinationCode:
          type: string
          description: Value of Italian destination code.
          nullable: true
        ItalianFiscalCode:
          type: string
          description: Value of Italian fiscal code.
          nullable: true
        CompanyId:
          type: string
          description: 'Unique identifier of [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) the customer is associated with.'
          format: uuid
          nullable: true
        MergeTargetId:
          type: string
          description: 'Unique identifier of the account ([Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer)) to which this customer is linked.'
          format: uuid
          nullable: true
        ActivityState:
          type: string
          description: '[Activity State](https://mews-systems.gitbook.io/connector-api/operations/#activity-state) of customer record, i.e. whether active or deleted.'
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `IsActive` instead.
        IsActive:
          type: boolean
          description: Whether the customer record is still active.
        PreferredSpaceFeatures:
          type: array
          items:
            $ref: '#/components/schemas/ResourceFeatureClassification'
          description: 'A list of room preferences, such as view type, bed type, and amenities.'
        CreatorProfileId:
          type: string
          description: Unique identifier of the user who created the customer.
          format: uuid
        UpdaterProfileId:
          type: string
          description: Unique identifier of the user who last updated the customer.
          format: uuid
      additionalProperties: false
      x-schema-id: Customer
    CustomerAccount:
      title: Customer
      required:
        - ChainId
        - Classifications
        - CreatedUtc
        - LastName
        - LegalEntityIdentifiers
        - Options
        - UpdatedUtc
        - UpdaterProfileId
      type: object
      properties:
        ChainId:
          type: string
          description: Unique identifier of the chain.
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the customer in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the customer in UTC timezone in ISO 8601 format.
          format: date-time
        UpdaterProfileId:
          type: string
          description: Unique identifier of the user who updated the customer.
          format: uuid
        Email:
          type: string
          description: Email address of the customer.
          format: email
          nullable: true
        TaxIdentifier:
          type: string
          description: Tax identification number of the customer.
          nullable: true
        BillingCode:
          type: string
          description: Billing code of the customer.
          nullable: true
        AccountingCode:
          type: string
          description: Accounting code of the customer.
          nullable: true
        Notes:
          type: string
          description: Internal notes about the customer.
          nullable: true
        LastName:
          minLength: 1
          type: string
          description: Last name of the customer.
        FirstName:
          type: string
          description: First name of the customer.
          nullable: true
        SecondLastName:
          type: string
          description: Second last name of the customer.
          nullable: true
        BirthPlace:
          type: string
          description: Place of birth.
          nullable: true
        Telephone:
          type: string
          description: Telephone number of the customer (possibly mobile).
          nullable: true
        Occupation:
          type: string
          description: Occupation of the customer.
          nullable: true
        CarRegistrationNumber:
          maxLength: 255
          type: string
          description: Registration number of the customer's car.
          nullable: true
        DietaryRequirements:
          maxLength: 255
          type: string
          description: Dietary requirements of the customer.
          nullable: true
        LoyaltyCode:
          type: string
          description: Loyalty code of the customer.
          nullable: true
        NationalityCode:
          type: string
          description: ISO 3166-1 code of the `Country`.
          nullable: true
        CompanyId:
          type: string
          description: Unique identifier of `Company` the customer is associated with.
          format: uuid
          nullable: true
        BirthDate:
          type: string
          description: Date of birth in ISO 8601 format.
          format: date-time
          nullable: true
        Sex:
          type: string
          description: Sex of the customer.
          nullable: true
        Title:
          allOf:
            - $ref: '#/components/schemas/Title'
          description: "Title prefix of the customer.\n\nMister (Mr.)\n\nMiss (Ms.)\n\nMisses (Mrs.)"
          nullable: true
        PreferredLanguageCode:
          type: string
          description: Language and culture code of the customer's preferred language. E.g. `en-US` or `fr-FR`.
          nullable: true
        Options:
          title: Customer options
          allOf:
            - $ref: '#/components/schemas/CustomerAccountOptions'
          description: Options of the customer.
        Classifications:
          title: Customer classifications
          allOf:
            - $ref: '#/components/schemas/CustomerAccountClassifications'
          description: Classifications of the customer.
        LegalEntityIdentifiers:
          title: Customer legal identifiers
          allOf:
            - $ref: '#/components/schemas/LegalEntityIdentifiers'
          description: Legal entity identifiers of the customer.
      additionalProperties: false
      description: Updated customer data.
      x-schema-id: CustomerAccount
    CustomerAccountClassifications:
      title: Customer classifications
      type: object
      properties:
        PaymasterAccount:
          type: boolean
          description: Paymaster account.
        Blacklist:
          type: boolean
          description: Blacklist.
        Media:
          type: boolean
          description: Media.
        LoyaltyProgram:
          type: boolean
          description: Loyalty program.
        PreviousComplaint:
          type: boolean
          description: Previous complaint.
        Returning:
          type: boolean
          description: Returning.
        Staff:
          type: boolean
          description: Staff.
        FriendOrFamily:
          type: boolean
          description: Friend or family.
        TopManagement:
          type: boolean
          description: Top management.
        Important:
          type: boolean
          description: Important.
        VeryImportant:
          type: boolean
          description: Very important.
        Problematic:
          type: boolean
          description: Problematic.
        Cashlist:
          type: boolean
          description: Cash list.
        DisabledPerson:
          type: boolean
          description: Disabled person.
        Military:
          type: boolean
          description: Military.
        Airline:
          type: boolean
          description: Airline.
        HealthCompliant:
          type: boolean
          description: Health compliant.
        InRoom:
          type: boolean
          description: In room.
        WaitingForRoom:
          type: boolean
          description: Waiting for room.
        Student:
          type: boolean
          description: Student.
      additionalProperties: false
      x-schema-id: CustomerAccountClassifications
    CustomerAccountOptions:
      title: Customer options
      type: object
      properties:
        SendMarketingEmails:
          type: boolean
          description: Send marketing emails.
        Invoiceable:
          type: boolean
          description: Invoiceable.
        BillAddressObjection:
          type: boolean
          description: Bill address objection.
      additionalProperties: false
      x-schema-id: CustomerAccountOptions
    CustomerAddFileResult:
      title: CustomerAddFileResult
      required:
        - FileId
      type: object
      properties:
        FileId:
          type: string
          description: Unique identifier of the uploaded file.
          format: uuid
      additionalProperties: false
      x-schema-id: CustomerAddFileResult
    CustomerAddParameters:
      title: CustomerAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LastName
        - OverwriteExisting
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Title:
          anyOf:
            - $ref: '#/components/schemas/Title'
          description: Title prefix of the customer.
          nullable: true
        FirstName:
          type: string
          description: First name of the customer.
          nullable: true
        LastName:
          minLength: 1
          type: string
          description: Last name of the customer.
        SecondLastName:
          type: string
          description: Second last name of the customer.
          nullable: true
        NationalityCode:
          type: string
          description: ISO 3166-1 code of the `Country`.
          nullable: true
        Sex:
          anyOf:
            - $ref: '#/components/schemas/Sex'
          description: Sex of the customer.
          nullable: true
        BirthDate:
          type: string
          description: Date of birth in ISO 8601 format.
          format: date
          nullable: true
        BirthPlace:
          type: string
          description: Place of birth.
          nullable: true
        Occupation:
          type: string
          description: Occupation of the customer.
          nullable: true
        Email:
          type: string
          description: Email address of the customer.
          format: email
          nullable: true
        Phone:
          type: string
          description: Phone number of the customer (possibly mobile).
          format: tel
          nullable: true
        LoyaltyCode:
          type: string
          description: Loyalty code of the customer.
          nullable: true
        Notes:
          type: string
          description: Internal notes about the customer.
          nullable: true
        CarRegistrationNumber:
          maxLength: 255
          type: string
          description: Registration number of the customer's car.
          nullable: true
        DietaryRequirements:
          maxLength: 255
          type: string
          description: 'Customer''s dietary requirements, e.g. Vegan, Halal.'
          nullable: true
        TaxIdentificationNumber:
          type: string
          description: Tax identification number of the customer.
          nullable: true
        CompanyId:
          type: string
          description: Unique identifier of `Company` the customer is associated with.
          format: uuid
          nullable: true
        Address:
          title: Address parameters
          allOf:
            - $ref: '#/components/schemas/AddressParameters'
          description: Address of the customer.
          nullable: true
        IdentityCard:
          title: Identity document parameters
          allOf:
            - $ref: '#/components/schemas/DocumentParameters'
          description: Identity card details of the customer.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Add identity documents](https://github.com/MewsSystems/gitbook-connector-api/pull/identitydocuments.md#add-identity-documents) to add document.'
        Passport:
          title: Identity document parameters
          allOf:
            - $ref: '#/components/schemas/DocumentParameters'
          description: Passport details of the customer.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Add identity documents](https://github.com/MewsSystems/gitbook-connector-api/pull/identitydocuments.md#add-identity-documents) to add document.'
        Visa:
          title: Identity document parameters
          allOf:
            - $ref: '#/components/schemas/DocumentParameters'
          description: Visa details of the customer.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Add identity documents](https://github.com/MewsSystems/gitbook-connector-api/pull/identitydocuments.md#add-identity-documents) to add document.'
        DriversLicense:
          title: Identity document parameters
          allOf:
            - $ref: '#/components/schemas/DocumentParameters'
          description: Drivers license details of the customer.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Add identity documents](https://github.com/MewsSystems/gitbook-connector-api/pull/identitydocuments.md#add-identity-documents) to add document.'
        Classifications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CustomerClassificationEnum'
          description: Classifications of the customer.
          nullable: true
        Options:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CustomerOptionEnum'
          description: Options of the customer.
          nullable: true
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using `PortfolioAccessTokens`, ignored otherwise.'
          format: uuid
          nullable: true
        OverwriteExisting:
          type: boolean
          description: 'Whether an existing customer should be overwritten in case of duplicity. This applies only to basic personal information (`Title`, `FirstName`, `LastName`, ...).'
        ItalianDestinationCode:
          type: string
          description: Value of Italian destination code.
          nullable: true
        ItalianFiscalCode:
          type: string
          description: Value of Italian fiscal code.
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerAddParameters
    CustomerClassificationEnum:
      title: Customer classification
      enum:
        - PaymasterAccount
        - Blacklist
        - Media
        - LoyaltyProgram
        - PreviousComplaint
        - Returning
        - Staff
        - FriendOrFamily
        - TopManagement
        - Important
        - VeryImportant
        - Problematic
        - Cashlist
        - DisabledPerson
        - Military
        - Airline
        - HealthCompliant
        - InRoom
        - WaitingForRoom
        - Student
      type: string
      description: "\n\nPaymasterAccount\n\nBlacklist\n\nMedia\n\nLoyaltyProgram\n\nPreviousComplaint\n\nReturning\n\nStaff\n\nFriendOrFamily\n\nTopManagement\n\nImportant\n\nVeryImportant\n\nProblematic\n\nCashlist\n\nDisabledPerson\n\nMilitary\n\nAirline\n\nHealthCompliant\n\nInRoom\n\nWaitingForRoom\n\nStudent"
      x-enumNames:
        - PaymasterAccount
        - Blacklist
        - Media
        - LoyaltyProgram
        - PreviousComplaint
        - Returning
        - Staff
        - FriendOrFamily
        - TopManagement
        - Important
        - VeryImportant
        - Problematic
        - Cashlist
        - DisabledPerson
        - Military
        - Airline
        - HealthCompliant
        - InRoom
        - WaitingForRoom
        - Student
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
    CustomerClassificationUpdateParameters:
      title: Customer update classifications
      type: object
      properties:
        PaymasterAccount:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Paymaster account (or `null` if the value should not be updated).
          nullable: true
        Blacklist:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Blacklist (or `null` if the value should not be updated).
          nullable: true
        Media:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Media (or `null` if the value should not be updated).
          nullable: true
        LoyaltyProgram:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Loyalty program (or `null` if the value should not be updated).
          nullable: true
        PreviousComplaint:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Previous complaint (or `null` if the value should not be updated).
          nullable: true
        Returning:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Returning (or `null` if the value should not be updated).
          nullable: true
        Staff:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Staff (or `null` if the value should not be updated).
          nullable: true
        FriendOrFamily:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Friend or family (or `null` if the value should not be updated).
          nullable: true
        TopManagement:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Top management (or `null` if the value should not be updated).
          nullable: true
        Important:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Important (or `null` if the value should not be updated).
          nullable: true
        VeryImportant:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Very important (or `null` if the value should not be updated).
          nullable: true
        Problematic:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Problematic (or `null` if the value should not be updated).
          nullable: true
        Cashlist:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Cashlist (or `null` if the value should not be updated).
          nullable: true
        DisabledPerson:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Disabled person (or `null` if the value should not be updated).
          nullable: true
        Military:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Military (or `null` if the value should not be updated).
          nullable: true
        Airline:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Airline (or `null` if the value should not be updated).
          nullable: true
        HealthCompliant:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Health compliant (or `null` if the value should not be updated).
          nullable: true
        InRoom:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: In room (or `null` if the value should not be updated).
          nullable: true
        WaitingForRoom:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Waiting for room (or `null` if the value should not be updated).
          nullable: true
        Student:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Student (or `null` if the value should not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerClassificationUpdateParameters
    CustomerClassificationsEnum:
      title: Customer classification
      enum:
        - None
        - PaymasterAccount
        - Blacklist
        - Media
        - LoyaltyProgram
        - PreviousComplaint
        - Returning
        - Staff
        - FriendOrFamily
        - TopManagement
        - Important
        - VeryImportant
        - Problematic
        - Cashlist
        - DisabledPerson
        - Military
        - Airline
        - HealthCompliant
        - InRoom
        - WaitingForRoom
        - Student
      type: string
      description: "\n\nNone\n\nPaymasterAccount\n\nBlacklist\n\nMedia\n\nLoyaltyProgram\n\nPreviousComplaint\n\nReturning\n\nStaff\n\nFriendOrFamily\n\nTopManagement\n\nImportant\n\nVeryImportant\n\nProblematic\n\nCashlist\n\nDisabledPerson\n\nMilitary\n\nAirline\n\nHealthCompliant\n\nInRoom\n\nWaitingForRoom\n\nStudent"
      x-enumNames:
        - None
        - PaymasterAccount
        - Blacklist
        - Media
        - LoyaltyProgram
        - PreviousComplaint
        - Returning
        - Staff
        - FriendOrFamily
        - TopManagement
        - Important
        - VeryImportant
        - Problematic
        - Cashlist
        - DisabledPerson
        - Military
        - Airline
        - HealthCompliant
        - InRoom
        - WaitingForRoom
        - Student
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
    CustomerExtent:
      title: Customer extent
      type: object
      properties:
        Customers:
          type: boolean
          description: Whether the response should contain information about customers.
          nullable: true
        Documents:
          type: boolean
          description: Whether the response should contain identity documents of customers.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Get all identity documents](https://mews-systems.gitbook.io/connector-api/operations/identitydocuments#get-all-identity-documents) instead.'
        Addresses:
          type: boolean
          description: Whether the response should contain addresses of customers.
          nullable: true
      additionalProperties: false
      description: ''
      x-schema-id: CustomerExtent
    CustomerFileParameters:
      title: CustomerFileParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerId
        - Data
        - Name
        - Type
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        CustomerId:
          type: string
          description: 'Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).'
          format: uuid
        Name:
          minLength: 1
          type: string
          description: Name of the file.
        Type:
          minLength: 1
          type: string
          description: MIME type of the file (e.g. `application/pdf`).
        Data:
          minLength: 1
          type: string
          description: Base64-encoded data of the file.
      additionalProperties: false
      x-schema-id: CustomerFileParameters
    CustomerFilterParameters:
      title: CustomerFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the chains. Required when using Portfolio Access Tokens, ignored otherwise.'
          nullable: true
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which Customer was created.
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which Customer was updated.
          nullable: true
          x-max-interval-in-months: 3
        Extent:
          title: Customer extent
          allOf:
            - $ref: '#/components/schemas/CustomerExtent'
          description: Extent of data to be returned.
        DeletedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which Customer was deleted. `ActivityStates` value `Deleted` should be provided with this filter to get expected results.
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
        CustomerIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of Customers. Required if no other filter is provided.
          nullable: true
        CompanyIds:
          maxItems: 1
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifier of the Company the customer is associated with.
          nullable: true
        Emails:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: 'Emails of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).'
          nullable: true
        FirstNames:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: 'First names of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).'
          nullable: true
        LastNames:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: 'Last names of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).'
          nullable: true
        LoyaltyCodes:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: 'Loyalty codes of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).'
          nullable: true
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
      additionalProperties: false
      x-schema-id: CustomerFilterParameters
    CustomerItemParameters:
      title: CustomerItemParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        CustomerIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/#customer).'
        Currency:
          type: string
          description: 'ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency) the item costs should be converted to.'
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerItemParameters
    CustomerItemResult:
      title: CustomerItemResult
      type: object
      properties:
        Customers:
          type: array
          items:
            $ref: '#/components/schemas/CustomerItems'
          description: The customers with their items.
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerItemResult
    CustomerItems:
      title: Customer items
      required:
        - CustomerId
        - Items
        - OrderItems
        - PaymentItems
      type: object
      properties:
        CustomerId:
          type: string
          description: Unique identifier of the `Customer`.
          format: uuid
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItem'
          deprecated: true
          x-deprecatedMessage: Use `OrderItems` and `PaymentItems` instead.
        OrderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemOld'
          description: The open order items (consumed items such as nights or products).
        PaymentItems:
          type: array
          items:
            $ref: '#/components/schemas/PaymentItemOld'
          description: 'The open payment items (such as cash, credit card payments or invoices).'
      additionalProperties: false
      x-schema-id: CustomerItems
    CustomerMergeParameters:
      title: CustomerMergeParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - SourceCustomerId
        - TargetCustomerId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        SourceCustomerId:
          type: string
          description: 'Unique identifier of the source [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).'
          format: uuid
        TargetCustomerId:
          type: string
          description: 'Unique identifier of the target [Customer](https://mews-systems.gitbook.io/connector-api/operations/#customer).'
          format: uuid
      additionalProperties: false
      x-schema-id: CustomerMergeParameters
    CustomerOptionEnum:
      title: Customer option
      enum:
        - SendMarketingEmails
        - Invoiceable
        - BillAddressObjection
        - SendMarketingPostalMail
        - SendPartnerMarketingEmails
        - SendPartnerMarketingPostalMail
        - WithdrawCardConsent
        - GuestPhotoConsent
        - IdPhotosConsent
      type: string
      description: "\n\nSendMarketingEmails\n\nInvoiceable\n\nBillAddressObjection\n\nSendMarketingPostalMail\n\nSendPartnerMarketingEmails\n\nSendPartnerMarketingPostalMail\n\nWithdrawCardConsent\n\nGuestPhotoConsent (Whether to ask for consent to take a guest photo.)\n\nIdPhotosConsent (Whether to ask for consent to take identity document photos.)"
      x-enumNames:
        - SendMarketingEmails
        - Invoiceable
        - BillAddressObjection
        - SendMarketingPostalMail
        - SendPartnerMarketingEmails
        - SendPartnerMarketingPostalMail
        - WithdrawCardConsent
        - GuestPhotoConsent
        - IdPhotosConsent
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - Whether to ask for consent to take a guest photo.
        - Whether to ask for consent to take identity document photos.
    CustomerOptionUpdateParameters:
      title: Customer update options
      type: object
      properties:
        SendMarketingEmails:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Send marketing email (or `null` if the value should not be updated).
          nullable: true
        Invoiceable:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Invoiceable (or `null` if the value should not be updated).
          nullable: true
        BillAddressObjection:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Bill address objection (or `null` if the value should not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerOptionUpdateParameters
    CustomerOptionsEnum:
      title: Customer option
      enum:
        - None
        - SendMarketingEmails
        - Invoiceable
        - BillAddressObjection
        - SendMarketingPostalMail
        - SendPartnerMarketingEmails
        - SendPartnerMarketingPostalMail
        - WithdrawCardConsent
        - GuestPhotoConsent
        - IdPhotosConsent
      type: string
      description: "\n\nNone\n\nSendMarketingEmails\n\nInvoiceable\n\nBillAddressObjection\n\nSendMarketingPostalMail\n\nSendPartnerMarketingEmails\n\nSendPartnerMarketingPostalMail\n\nWithdrawCardConsent\n\nGuestPhotoConsent\n\nIdPhotosConsent"
      x-enumNames:
        - None
        - SendMarketingEmails
        - Invoiceable
        - BillAddressObjection
        - SendMarketingPostalMail
        - SendPartnerMarketingEmails
        - SendPartnerMarketingPostalMail
        - WithdrawCardConsent
        - GuestPhotoConsent
        - IdPhotosConsent
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
    CustomerResult:
      title: CustomerResult
      required:
        - Customers
      type: object
      properties:
        Customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          description: The customers.
        Documents:
          type: array
          items:
            $ref: '#/components/schemas/IdentityDocument'
          description: The identity documents of customers.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Get all identity documents](https://mews-systems.gitbook.io/connector-api/operations/identitydocuments#get-all-identity-documents) to fetch identity documents.'
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest customer item returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older customers. If [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) is specified in the request message, then Cursor will always be included in the response message; this is true even when using Extents set to false so that no actual data is returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerResult
    CustomerSearchParameters:
      title: CustomerSearchParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Name:
          type: string
          description: 'Name to search by (applies to first name, last name, and full name).'
          nullable: true
        ResourceId:
          type: string
          description: 'Identifier of [Resource](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource) to search by (members of reservation assigned there will be returned).'
          format: uuid
          nullable: true
        Extent:
          title: Customer extent
          allOf:
            - $ref: '#/components/schemas/CustomerExtent'
          description: Extent of data to be returned.
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerSearchParameters
    CustomerSearchResult:
      title: CustomerSearchResult
      required:
        - Customers
      type: object
      properties:
        Customers:
          type: array
          items:
            $ref: '#/components/schemas/ChargeableCustomer'
          description: The customer search results.
        Documents:
          type: array
          items:
            $ref: '#/components/schemas/IdentityDocument'
          description: The identity documents of customers.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Get all identity documents](https://mews-systems.gitbook.io/connector-api/operations/identitydocuments#get-all-identity-documents) to fetch identity documents.'
      additionalProperties: false
      x-schema-id: CustomerSearchResult
    CustomerUpdateParameters:
      title: CustomerUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using `PortfolioAccessTokens`, ignored otherwise.'
          format: uuid
          nullable: true
        CustomerId:
          type: string
          description: Unique identifier of the `Customer` to be updated.
          format: uuid
        Title:
          allOf:
            - $ref: '#/components/schemas/Title'
          description: "New title.\n\nMister (Mr.)\n\nMiss (Ms.)\n\nMisses (Mrs.)"
          nullable: true
        FirstName:
          type: string
          description: New first name.
          nullable: true
        LastName:
          type: string
          description: New last name.
          nullable: true
        SecondLastName:
          type: string
          description: New second last name.
          nullable: true
        NationalityCode:
          type: string
          description: New nationality code as ISO 3166-1 code of the `Country`.
          nullable: true
        Sex:
          allOf:
            - $ref: '#/components/schemas/SexEnum'
          description: "Sex of the customer.\n\nMale\n\nFemale"
          nullable: true
        BirthDate:
          type: string
          description: New birth date in ISO 8601 format.
          format: date
          nullable: true
        BirthPlace:
          type: string
          description: New birth place.
          nullable: true
        Occupation:
          type: string
          description: Occupation of the customer.
          nullable: true
        Email:
          type: string
          description: New email address.
          format: email
          nullable: true
        Phone:
          type: string
          description: New phone number.
          format: tel
          nullable: true
        LoyaltyCode:
          type: string
          description: Loyalty code of the customer.
          nullable: true
        Notes:
          type: string
          description: Internal notes about the customer. Old value will be overwritten.
          nullable: true
        CarRegistrationNumber:
          maxLength: 255
          type: string
          description: New registration number of the customer's car.
          nullable: true
        DietaryRequirements:
          maxLength: 255
          type: string
          description: 'Customer''s dietary requirements, e.g. Vegan, Halal.'
          nullable: true
        TaxIdentificationNumber:
          type: string
          description: New tax identification number of the customer.
          nullable: true
        CompanyId:
          type: string
          description: Unique identifier of `Company` the customer is associated with.
          format: uuid
          nullable: true
        Address:
          title: Address parameters
          allOf:
            - $ref: '#/components/schemas/AddressParameters'
          description: New address details.
          nullable: true
        IdentityCard:
          title: Identity document parameters
          allOf:
            - $ref: '#/components/schemas/DocumentParameters'
          description: New identity card details.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Update identity documents](https://github.com/MewsSystems/gitbook-connector-api/pull/identitydocuments.md#update-identity-documents) to update document.'
        Passport:
          title: Identity document parameters
          allOf:
            - $ref: '#/components/schemas/DocumentParameters'
          description: New passport details.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Update identity documents](https://github.com/MewsSystems/gitbook-connector-api/pull/identitydocuments.md#update-identity-documents) to update document.'
        Visa:
          title: Identity document parameters
          allOf:
            - $ref: '#/components/schemas/DocumentParameters'
          description: New visa details.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Update identity documents](https://github.com/MewsSystems/gitbook-connector-api/pull/identitydocuments.md#update-identity-documents) to update document.'
        DriversLicense:
          title: Identity document parameters
          allOf:
            - $ref: '#/components/schemas/DocumentParameters'
          description: New drivers license details.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use [Update identity documents](https://github.com/MewsSystems/gitbook-connector-api/pull/identitydocuments.md#update-identity-documents) to update document.'
        Classifications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CustomerClassificationEnum'
          description: New classifications of the customer.
          nullable: true
        Options:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CustomerOptionEnum'
          description: Options of the customer.
          nullable: true
        ItalianDestinationCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: New Italian destination code of customer.
          nullable: true
        ItalianFiscalCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: New Italian fiscal code of customer.
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerUpdateParameters
    DateFilterInterval:
      title: DateFilterInterval
      required:
        - End
        - Start
      type: object
      properties:
        Start:
          minLength: 1
          type: string
          format: date
        End:
          minLength: 1
          type: string
          format: date
      additionalProperties: false
      x-schema-id: DateFilterInterval
    DateRestriction:
      title: Date restriction
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the rate restriction.
          format: uuid
        RateId:
          type: string
          description: Unique identifier of the rate.
          format: uuid
        IsInherited:
          type: boolean
          description: Whether the rate restriction is inherited from the parent rate.
        StartUtc:
          type: string
          description: Start of the rate restriction in UTC timezone in ISO 8601 format.
          nullable: true
        EndUtc:
          type: string
          description: End of the rate restriction in UTC timezone in ISO 8601 format.
          nullable: true
        Days:
          type: array
          items:
            type: string
          description: The restricted days of week.
          nullable: true
        ExternalIdentifier:
          type: string
          description: Identifiers of from external systems.
          nullable: true
      additionalProperties: false
      x-schema-id: DateRestriction
    DateTimeIntervalUtc:
      title: DateTimeIntervalUtc
      type: object
      properties:
        StartUtc:
          type: string
          nullable: true
        EndUtc:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: DateTimeIntervalUtc
    DaysParameters:
      title: Days parameters
      required:
        - Friday
        - Monday
        - Saturday
        - Sunday
        - Thursday
        - Tuesday
        - Wednesday
      type: object
      properties:
        Monday:
          type: boolean
          description: Monday enabled
        Tuesday:
          type: boolean
          description: Tuesday enabled
        Wednesday:
          type: boolean
          description: Wednesday enabled
        Thursday:
          type: boolean
          description: Thursday enabled
        Friday:
          type: boolean
          description: Friday enabled
        Saturday:
          type: boolean
          description: Saturday enabled
        Sunday:
          type: boolean
          description: Sunday enabled
      additionalProperties: false
      x-schema-id: DaysParameters
    DecimalNullableUpdateValue:
      title: Decimal update value
      type: object
      properties:
        Value:
          type: number
          description: Value which is to be updated.
          format: double
          nullable: true
      additionalProperties: false
      x-schema-id: DecimalNullableUpdateValue
    DecimalUpdateValue:
      title: Decimal update value
      type: object
      properties:
        Value:
          type: number
          description: Value which is to be updated.
          format: double
      additionalProperties: false
      x-schema-id: DecimalUpdateValue
    DeleteRestrictionParameters:
      title: DeleteRestrictionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - RestrictionIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        RestrictionIds:
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Restriction`.
      additionalProperties: false
      x-schema-id: DeleteRestrictionParameters
    Department:
      title: Department
      required:
        - CreatedUtc
        - EnterpriseId
        - Id
        - IsActive
        - Name
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the department.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        IsActive:
          type: boolean
          description: Whether the department is still active.
        Name:
          minLength: 1
          type: string
          description: Name of the department.
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the department in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the department in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: Department
    DepartmentFilterParameters:
      title: DepartmentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        DepartmentIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Department](https://mews-systems.gitbook.io/connector-api/operations/#department).'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which `Department` was updated.
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: DepartmentFilterParameters
    DepartmentResult:
      title: DepartmentResult
      required:
        - Departments
      type: object
      properties:
        Departments:
          type: array
          items:
            $ref: '#/components/schemas/Department'
          description: The departments of the enterprise.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: DepartmentResult
    DependentRatePricingData:
      title: Dependent rate pricing
      required:
        - AbsoluteAdjustment
        - BaseRateId
        - RelativeAdjustment
      type: object
      properties:
        BaseRateId:
          type: string
          description: Unique identifier of the base rate.
          format: uuid
        RelativeAdjustment:
          type: number
          description: Specific amount which shows the difference between this rate and the base rate.
          format: double
        AbsoluteAdjustment:
          type: number
          description: Relative amount which shows the difference between this rate and the base rate.
          format: double
      additionalProperties: false
      x-schema-id: DependentRatePricingData
    DependentRatePricingParameters:
      title: Dependent rate pricing parameters
      required:
        - BaseRateId
      type: object
      properties:
        BaseRateId:
          minLength: 1
          type: string
          description: Unique identifier of the base rate.
          x-schema-id: HybridIdentifier
        RelativeAdjustment:
          type: number
          description: Relative amount which shows the difference between this rate and the base rate.
          format: double
        AbsoluteAdjustment:
          type: number
          description: Specific amount which shows the difference between this rate and the base rate.
          format: double
      additionalProperties: false
      x-schema-id: DependentRatePricingParameters
    DependentTaxRateStrategy:
      title: DependentTaxRateStrategy
      type: object
      properties:
        Value:
          type: number
          format: double
        BaseTaxationCodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-schema-id: DependentTaxRateStrategy
    Device:
      title: Device
      required:
        - Id
        - Name
        - Type
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the device.
          format: uuid
        Type:
          title: Device type
          allOf:
            - $ref: '#/components/schemas/DeviceTypeEnum'
          description: "Type of the device.\n\nPrinter ([Printer command data](https://mews-systems.gitbook.io/connector-api/operations/commands#printer-command-data))\n\nPaymentTerminal ([Payment terminal command data](https://mews-systems.gitbook.io/connector-api/operations/commands#payment-terminal-command-data))\n\nKeyCutter ([Key cutter command data](https://mews-systems.gitbook.io/connector-api/operations/commands#key-cutter-command-data))\n\nFiscalMachine ([Fiscal machine command data](https://mews-systems.gitbook.io/connector-api/operations/commands#fiscal-machine-command-data))\n\nPassportScanner ([Passport scanner command data](https://mews-systems.gitbook.io/connector-api/operations/commands#passport-scanner-command-data))"
          x-enumNames:
            - Printer
            - PaymentTerminal
            - KeyCutter
            - FiscalMachine
            - PassportScanner
          x-enumDescriptions:
            - '[Printer command data](https://mews-systems.gitbook.io/connector-api/operations/commands#printer-command-data)'
            - '[Payment terminal command data](https://mews-systems.gitbook.io/connector-api/operations/commands#payment-terminal-command-data)'
            - '[Key cutter command data](https://mews-systems.gitbook.io/connector-api/operations/commands#key-cutter-command-data)'
            - '[Fiscal machine command data](https://mews-systems.gitbook.io/connector-api/operations/commands#fiscal-machine-command-data)'
            - '[Passport scanner command data](https://mews-systems.gitbook.io/connector-api/operations/commands#passport-scanner-command-data)'
        Name:
          minLength: 1
          type: string
          description: Name of the device.
        Identifier:
          type: string
          description: Device identifier (for internal purposes).
          nullable: true
      additionalProperties: false
      x-schema-id: Device
    DeviceCommand:
      title: Command
      required:
        - CreatedUtc
        - Data
        - Device
        - Id
        - State
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the command.
          format: uuid
        State:
          title: Command state
          allOf:
            - $ref: '#/components/schemas/DeviceCommandStateEnum'
          description: "State of the command.\n\nPending (Created in Mews, but not yet received by the client application.)\n\nReceived (Received by the client application.)\n\nProcessing (Being processed by the client application.)\n\nProcessed (Successfully processed command.)\n\nCancelled (A command whose execution has been canceled before (or during) processing.)\n\nError (A command whose execution or processing was terminated by an error.)"
          x-enumNames:
            - Pending
            - Received
            - Processing
            - Processed
            - Cancelled
            - Error
          x-enumDescriptions:
            - 'Created in Mews, but not yet received by the client application.'
            - Received by the client application.
            - Being processed by the client application.
            - Successfully processed command.
            - A command whose execution has been canceled before (or during) processing.
            - A command whose execution or processing was terminated by an error.
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the command.
          format: date-time
        Creator:
          title: User
          allOf:
            - $ref: '#/components/schemas/DeviceCommandCreator'
          description: Creator of the command.
          nullable: true
        Device:
          allOf:
            - $ref: '#/components/schemas/Device'
          description: Device that the command should be executed on.
        Data:
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
          description: 'Structure of the object depends on [Device type](https://mews-systems.gitbook.io/connector-api/operations/devices#device-type).'
      additionalProperties: false
      x-schema-id: DeviceCommand
    DeviceCommandAddResult:
      title: DeviceCommandAddResult
      required:
        - CommandId
      type: object
      properties:
        CommandId:
          type: string
          description: Unique identifier of the created `Command`.
          format: uuid
      additionalProperties: false
      x-schema-id: DeviceCommandAddResult
    DeviceCommandCreator:
      title: User
      required:
        - LastName
      type: object
      properties:
        FirstName:
          type: string
          description: First name of the user.
          nullable: true
        LastName:
          minLength: 1
          type: string
          description: Last name of the user.
        ImageUrl:
          type: string
          description: URL of the profile image.
          format: uri
          nullable: true
      additionalProperties: false
      x-schema-id: DeviceCommandCreator
    DeviceCommandData:
      type: object
      additionalProperties: false
    DeviceCommandFilterParameters:
      title: DeviceCommandFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CommandIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        CommandIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Commands](https://mews-systems.gitbook.io/connector-api/operations/#command) to be returned.'
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
          nullable: true
      additionalProperties: false
      x-schema-id: DeviceCommandFilterParameters
    DeviceCommandResult:
      title: DeviceCommandResult
      required:
        - Commands
      type: object
      properties:
        Commands:
          type: array
          items:
            $ref: '#/components/schemas/DeviceCommand'
          description: The active commands.
        Cursor:
          type: string
          description: Unique identifier of the last returned command. This can be used in Limitation in a subsequent request to fetch the next batch of commands.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: DeviceCommandResult
    DeviceCommandResultDiscriminator:
      enum:
        - ItalianFiscalMachine
        - SaltoMobileKeyDto
      type: string
    DeviceCommandStateEnum:
      title: Command state
      enum:
        - Pending
        - Received
        - Processing
        - Processed
        - Cancelled
        - Error
      type: string
      description: "\n\nPending (Created in Mews, but not yet received by the client application.)\n\nReceived (Received by the client application.)\n\nProcessing (Being processed by the client application.)\n\nProcessed (Successfully processed command.)\n\nCancelled (A command whose execution has been canceled before (or during) processing.)\n\nError (A command whose execution or processing was terminated by an error.)"
      x-enumNames:
        - Pending
        - Received
        - Processing
        - Processed
        - Cancelled
        - Error
      x-enumDescriptions:
        - 'Created in Mews, but not yet received by the client application.'
        - Received by the client application.
        - Being processed by the client application.
        - Successfully processed command.
        - A command whose execution has been canceled before (or during) processing.
        - A command whose execution or processing was terminated by an error.
    DeviceCommandUpdateParameters:
      title: DeviceCommandUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CommandId
        - State
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        CommandId:
          type: string
          description: Identifier of the `Command` to be updated.
          format: uuid
        State:
          allOf:
            - $ref: '#/components/schemas/DeviceCommandStateEnum'
          description: "New state of the command.\n\nPending (Created in Mews, but not yet received by the client application.)\n\nReceived (Received by the client application.)\n\nProcessing (Being processed by the client application.)\n\nProcessed (Successfully processed command.)\n\nCancelled (A command whose execution has been canceled before (or during) processing.)\n\nError (A command whose execution or processing was terminated by an error.)"
        Progress:
          type: number
          description: 'Progress of the command processing. Only used if the `State` is `Processing`, otherwise ignored.'
          format: double
          nullable: true
        Notes:
          type: string
          description: 'Notes about command execution. Only used if the `State` is `Processed`, `Cancelled` or `Error`, otherwise ignored.'
          nullable: true
      additionalProperties: false
      x-schema-id: DeviceCommandUpdateParameters
    DeviceResult:
      title: DeviceResult
      required:
        - Devices
      type: object
      properties:
        Devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
          description: The devices.
      additionalProperties: false
      x-schema-id: DeviceResult
    DeviceTypeEnum:
      title: Device type
      enum:
        - Printer
        - PaymentTerminal
        - KeyCutter
        - FiscalMachine
        - PassportScanner
      type: string
      description: "Type of the device.\n\nPrinter ([Printer command data](https://mews-systems.gitbook.io/connector-api/operations/commands#printer-command-data))\n\nPaymentTerminal ([Payment terminal command data](https://mews-systems.gitbook.io/connector-api/operations/commands#payment-terminal-command-data))\n\nKeyCutter ([Key cutter command data](https://mews-systems.gitbook.io/connector-api/operations/commands#key-cutter-command-data))\n\nFiscalMachine ([Fiscal machine command data](https://mews-systems.gitbook.io/connector-api/operations/commands#fiscal-machine-command-data))\n\nPassportScanner ([Passport scanner command data](https://mews-systems.gitbook.io/connector-api/operations/commands#passport-scanner-command-data))"
      x-enumNames:
        - Printer
        - PaymentTerminal
        - KeyCutter
        - FiscalMachine
        - PassportScanner
      x-enumDescriptions:
        - '[Printer command data](https://mews-systems.gitbook.io/connector-api/operations/commands#printer-command-data)'
        - '[Payment terminal command data](https://mews-systems.gitbook.io/connector-api/operations/commands#payment-terminal-command-data)'
        - '[Key cutter command data](https://mews-systems.gitbook.io/connector-api/operations/commands#key-cutter-command-data)'
        - '[Fiscal machine command data](https://mews-systems.gitbook.io/connector-api/operations/commands#fiscal-machine-command-data)'
        - '[Passport scanner command data](https://mews-systems.gitbook.io/connector-api/operations/commands#passport-scanner-command-data)'
    DisableCreditCardParameters:
      title: DisableCreditCardParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CreditCardId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        CreditCardId:
          type: string
          description: Unique identifier of the `CreditCard` to disable.
          format: uuid
      additionalProperties: false
      x-schema-id: DisableCreditCardParameters
    DocumentParameters:
      title: Identity document parameters
      type: object
      properties:
        Number:
          type: string
          description: Number of the document (e.g. passport number).
          nullable: true
        Expiration:
          type: string
          description: Expiration date in ISO 8601 format.
          format: date
          nullable: true
        Issuance:
          type: string
          description: Date of issuance in ISO 8601 format.
          format: date
          nullable: true
        IssuingCountryCode:
          type: string
          description: ISO 3166-1 code of the `Country`.
          nullable: true
        IssuingCity:
          type: string
          description: City from which document issued
          nullable: true
      additionalProperties: false
      description: ''
      x-schema-id: DocumentParameters
    EarlinessRestriction:
      title: Earliness restriction
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the rate restriction.
          format: uuid
        RateId:
          type: string
          description: Unique identifier of the rate.
          format: uuid
        IsInherited:
          type: boolean
          description: Whether the rate restriction is inherited from the parent rate.
        StartUtc:
          type: string
          description: Start of the rate restriction in UTC timezone in ISO 8601 format.
          nullable: true
        EndUtc:
          type: string
          description: End of the rate restriction in UTC timezone in ISO 8601 format.
          nullable: true
        Days:
          type: array
          items:
            type: string
          description: The restricted days of week.
          nullable: true
        ExternalIdentifier:
          type: string
          description: Identifiers of from external systems.
          nullable: true
        MinAdvance:
          type: string
          description: 'The minimum time before the reservation starts, you can reserve in ISO 8601 duration format.'
          nullable: true
        MaxAdvance:
          type: string
          description: 'The maximum time before the reservation starts, you can reserve in ISO 8601 duration format.'
          nullable: true
      additionalProperties: false
      x-schema-id: EarlinessRestriction
    Enterprise:
      title: Enterprise
      required:
        - AccommodationEnvironmentCode
        - AccountingEditableHistoryInterval
        - AccountingEnvironmentCode
        - Address
        - AddressId
        - ChainId
        - ChainName
        - CreatedUtc
        - Currencies
        - DefaultLanguageCode
        - EditableHistoryInterval
        - GroupNames
        - Id
        - LegalEnvironmentCode
        - Name
        - OperationalEditableHistoryInterval
        - Pricing
        - Subscription
        - TaxEnvironmentCode
        - TimeZoneIdentifier
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the enterprise.
          format: uuid
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the enterprise from external system.
          nullable: true
        HoldingKey:
          maxLength: 255
          type: string
          description: Identifies an enterprise in the external system of a holding company. The holding company may administer multiple portfolios.
          nullable: true
        ChainId:
          type: string
          description: Unique identifier of the chain to which the enterprise belongs.
          format: uuid
        ChainName:
          minLength: 1
          type: string
          description: Name of the `Chain` to which the enterprise belongs.
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the enterprise in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the enterprise in UTC timezone in ISO 8601 format.
          format: date-time
        Name:
          minLength: 1
          type: string
          description: Name of the enterprise.
        TimeZoneIdentifier:
          minLength: 1
          type: string
          description: IANA timezone identifier of the enterprise.
        LegalEnvironmentCode:
          minLength: 1
          type: string
          description: Unique identifier of the legal environment where the enterprise resides.
        AccommodationEnvironmentCode:
          minLength: 1
          type: string
          description: Unique code of the accommodation environment where the enterprise resides.
        AccountingEnvironmentCode:
          minLength: 1
          type: string
          description: Unique code of the accounting environment where the enterprise resides.
        TaxEnvironmentCode:
          minLength: 1
          type: string
          description: Unique code of the tax environment where the enterprise resides.
        DefaultLanguageCode:
          minLength: 1
          type: string
          description: Language-culture codes of the enterprise default `Language`.
        EditableHistoryInterval:
          minLength: 1
          type: string
          deprecated: true
          x-deprecatedMessage: Use `AccountingEditableHistoryInterval` and `OperationalEditableHistoryInterval` instead.
        AccountingEditableHistoryInterval:
          minLength: 1
          type: string
          description: Editable history interval for accounting data in ISO 8601 duration format.
        OperationalEditableHistoryInterval:
          minLength: 1
          type: string
          description: Editable history interval for operational data in ISO 8601 duration format.
        WebsiteUrl:
          type: string
          description: URL of the enterprise website.
          format: uri
          nullable: true
        Email:
          type: string
          description: Email address of the enterprise.
          format: email
          nullable: true
        Phone:
          type: string
          description: Phone number of the enterprise.
          format: tel
          nullable: true
        LogoImageId:
          type: string
          description: Unique identifier of the `Image` of the enterprise logo.
          format: uuid
          nullable: true
        CoverImageId:
          type: string
          description: Unique identifier of the `Image` of the enterprise cover.
          format: uuid
          nullable: true
        Pricing:
          title: Pricing
          allOf:
            - $ref: '#/components/schemas/PricingModeEnum'
          description: "Pricing of the enterprise.\n\nGross (The enterprise shows amount with gross prices.)\n\nNet (The enterprise shows amount with net prices.)"
          x-enumNames:
            - Gross
            - Net
          x-enumDescriptions:
            - The enterprise shows amount with gross prices.
            - The enterprise shows amount with net prices.
        TaxPrecision:
          type: integer
          description: 'Tax precision used for financial calculations in the enterprise. If `null`, `Currency` precision is used.'
          format: int32
          nullable: true
        AddressId:
          type: string
          description: Unique identifier of the `Address` of the enterprise.
          format: uuid
        Address:
          title: Address
          allOf:
            - $ref: '#/components/schemas/OldAddress'
          description: Address of the enterprise.
        GroupNames:
          type: array
          items:
            type: string
          description: A list of the group names of the enterprise.
        Subscription:
          title: Enterprise subscription
          allOf:
            - $ref: '#/components/schemas/EnterpriseSubscription'
          description: Subscription information of the enterprise.
        Currencies:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyAcceptance'
          description: Currencies accepted by the enterprise.
        AccountingConfiguration:
          title: Accounting configuration
          allOf:
            - $ref: '#/components/schemas/AccountingConfiguration'
          description: Configuration information containing financial information about the property.
          nullable: true
        IsPortfolio:
          type: boolean
          description: 'Whether the enterprise is a Portfolio enterprise (see [Multi-property guidelines](https://mews-systems.gitbook.io/connector-api/guidelines/multi-property)).'
      additionalProperties: false
      description: ''
      x-schema-id: Enterprise
    EnterpriseFilterParameters:
      title: EnterpriseFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Enterprises](https://mews-systems.gitbook.io/connector-api/operations/#enterprise). If not specified, all enterprises within scope of the Access Token are returned.'
          nullable: true
        ExternalIdentifiers:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: 'Identifiers of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/#enterprise) from external system.'
          nullable: true
        LinkedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
      additionalProperties: false
      x-schema-id: EnterpriseFilterParameters
    EnterprisePortfolio:
      title: Enterprise
      required:
        - AccommodationEnvironmentCode
        - AccountingEditableHistoryInterval
        - AccountingEnvironmentCode
        - Address
        - AddressId
        - ChainId
        - ChainName
        - CreatedUtc
        - DefaultLanguageCode
        - EditableHistoryInterval
        - GroupNames
        - Id
        - LegalEnvironmentCode
        - LinkedUtc
        - Name
        - OperationalEditableHistoryInterval
        - Pricing
        - Subscription
        - TaxEnvironmentCode
        - TimeZoneIdentifier
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the enterprise.
          format: uuid
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the enterprise from external system.
          nullable: true
        HoldingKey:
          maxLength: 255
          type: string
          description: Identifies an enterprise in the external system of a holding company. The holding company may administer multiple portfolios.
          nullable: true
        ChainId:
          type: string
          description: Unique identifier of the chain to which the enterprise belongs.
          format: uuid
        ChainName:
          minLength: 1
          type: string
          description: Name of the `Chain` to which the enterprise belongs.
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the enterprise in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the enterprise in UTC timezone in ISO 8601 format.
          format: date-time
        Name:
          minLength: 1
          type: string
          description: Name of the enterprise.
        TimeZoneIdentifier:
          minLength: 1
          type: string
          description: IANA timezone identifier of the enterprise.
        LegalEnvironmentCode:
          minLength: 1
          type: string
          description: Unique identifier of the legal environment where the enterprise resides.
        AccommodationEnvironmentCode:
          minLength: 1
          type: string
          description: Unique code of the accommodation environment where the enterprise resides.
        AccountingEnvironmentCode:
          minLength: 1
          type: string
          description: Unique code of the accounting environment where the enterprise resides.
        TaxEnvironmentCode:
          minLength: 1
          type: string
          description: Unique code of the tax environment where the enterprise resides.
        DefaultLanguageCode:
          minLength: 1
          type: string
          description: Language-culture codes of the enterprise default `Language`.
        EditableHistoryInterval:
          minLength: 1
          type: string
          deprecated: true
          x-deprecatedMessage: Use `AccountingEditableHistoryInterval` and `OperationalEditableHistoryInterval` instead.
        AccountingEditableHistoryInterval:
          minLength: 1
          type: string
          description: Editable history interval for accounting data in ISO 8601 duration format.
        OperationalEditableHistoryInterval:
          minLength: 1
          type: string
          description: Editable history interval for operational data in ISO 8601 duration format.
        WebsiteUrl:
          type: string
          description: URL of the enterprise website.
          format: uri
          nullable: true
        Email:
          type: string
          description: Email address of the enterprise.
          format: email
          nullable: true
        Phone:
          type: string
          description: Phone number of the enterprise.
          format: tel
          nullable: true
        LogoImageId:
          type: string
          description: Unique identifier of the `Image` of the enterprise logo.
          format: uuid
          nullable: true
        CoverImageId:
          type: string
          description: Unique identifier of the `Image` of the enterprise cover.
          format: uuid
          nullable: true
        Pricing:
          title: Pricing
          allOf:
            - $ref: '#/components/schemas/PricingModeEnum'
          description: "Pricing of the enterprise.\n\nGross (The enterprise shows amount with gross prices.)\n\nNet (The enterprise shows amount with net prices.)"
          x-enumNames:
            - Gross
            - Net
          x-enumDescriptions:
            - The enterprise shows amount with gross prices.
            - The enterprise shows amount with net prices.
        TaxPrecision:
          type: integer
          description: 'Tax precision used for financial calculations in the enterprise. If `null`, `Currency` precision is used.'
          format: int32
          nullable: true
        AddressId:
          type: string
          description: Unique identifier of the `Address` of the enterprise.
          format: uuid
        Address:
          title: Address
          allOf:
            - $ref: '#/components/schemas/OldAddress'
          description: Address of the enterprise.
        GroupNames:
          type: array
          items:
            type: string
          description: A list of the group names of the enterprise.
        Subscription:
          title: Enterprise subscription
          allOf:
            - $ref: '#/components/schemas/EnterpriseSubscription'
          description: Subscription information of the enterprise.
        LinkedUtc:
          minLength: 1
          type: string
          description: Date and time when enterprise was added to the portfolio in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      description: ''
      x-schema-id: EnterprisePortfolio
    EnterpriseProfileData:
      title: Enterprise profile data
      required:
        - ProfileId
      type: object
      properties:
        ProfileId:
          type: string
          description: Unique identifier of the profile.
          format: uuid
      additionalProperties: false
      x-schema-id: EnterpriseProfileData
    EnterpriseResult:
      title: EnterpriseResult
      required:
        - Enterprises
      type: object
      properties:
        Enterprises:
          type: array
          items:
            $ref: '#/components/schemas/EnterprisePortfolio'
          description: The filtered enterprises.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest enterprise returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older enterprises.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: EnterpriseResult
    EnterpriseScopeCounterDiscriminator:
      title: Counter type discriminator
      enum:
        - Counter
        - AccountingCounter
        - AvailabilityBlockCounter
        - BillCounter
        - BillPreviewCounter
        - FiscalCounter
        - ProformaCounter
        - RegistrationCardCounter
        - ServiceOrderCounter
        - CorrectionBillCounter
        - PaymentConfirmationBillCounter
        - CreditNoteBillCounter
      type: string
      description: Type of the counter.
      x-enumDescriptions:
        - Any type of counter.
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
    EnterpriseSubscription:
      title: Enterprise subscription
      type: object
      properties:
        TaxIdentifier:
          type: string
          description: Tax identifier of the `Enterprise`.
          nullable: true
      additionalProperties: false
      description: ''
      x-schema-id: EnterpriseSubscription
    ExchangeRate:
      title: Exchange rate
      required:
        - EnterpriseId
        - Id
        - SourceCurrency
        - TargetCurrency
        - Value
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the Exchange Rate.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/configuration/#enterprise) to which the Exchange Rate belongs.'
          format: uuid
        SourceCurrency:
          minLength: 1
          type: string
          description: 'ISO-4217 code of the source [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).'
          format: currency
        TargetCurrency:
          minLength: 1
          type: string
          description: 'ISO-4217 code of the target [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).'
          format: currency
        Value:
          type: number
          description: The exchange rate from the source currency to the target currency.
          format: double
      additionalProperties: false
      x-schema-id: ExchangeRate
    ExchangeRateResult:
      title: ExchangeRateResult
      required:
        - ExchangeRates
      type: object
      properties:
        ExchangeRates:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeRate'
          description: The available exchange rates.
      additionalProperties: false
      x-schema-id: ExchangeRateResult
    Export:
      title: Export
      required:
        - EntityType
        - Files
        - Id
        - Status
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the export.
          format: uuid
        Status:
          $ref: '#/components/schemas/ExportStatus'
        EntityType:
          $ref: '#/components/schemas/ExportEntityType'
        Files:
          type: array
          items:
            $ref: '#/components/schemas/ExportFileEntry'
          description: Files with exported data. Empty if no files are available.
        ExpiresUtc:
          type: string
          description: Expiration date and time of the export in UTC timezone in ISO 8601 format. After this time the Exported files may no longer be available for download.
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: Export
    ExportAddParameters:
      title: ExportAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - EntityType
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EntityType:
          $ref: '#/components/schemas/ExportEntityType'
      additionalProperties: false
      x-schema-id: ExportAddParameters
    ExportAddResult:
      title: ExportAddResult
      required:
        - Export
      type: object
      properties:
        Export:
          allOf:
            - $ref: '#/components/schemas/Export'
          description: Added export.
      additionalProperties: false
      x-schema-id: ExportAddResult
    ExportDataFilters:
      title: ExportDataFilters
      type: object
      properties:
        UpdatedUtc:
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
      additionalProperties: false
      x-schema-id: ExportDataFilters
    ExportEntityType:
      title: Exported entity type
      enum:
        - OrderItem
        - Payment
        - Reservation
        - Customer
        - Company
        - Bill
        - AvailabilityAdjustment
        - AvailabilityBlock
        - ResourceBlock
        - LedgerEntry
      type: string
      description: Type of exported entities
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - Beta testing - subject to change
    ExportFileEntry:
      title: Export file entry
      required:
        - SizeInBytes
        - Url
      type: object
      properties:
        Url:
          minLength: 1
          type: string
          description: URL of the exported file for download in JSON Lines format.
          format: uri
        SizeInBytes:
          type: integer
          description: Total size of the exported file in bytes.
          format: int64
      additionalProperties: false
      x-schema-id: ExportFileEntry
    ExportFilterParameters:
      title: ExportFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ExportIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ExportIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Exports](https://mews-systems.gitbook.io/connector-api/operations/#export).'
      additionalProperties: false
      x-schema-id: ExportFilterParameters
    ExportLedgerEntryDataFilters:
      title: ExportLedgerEntryDataFilters
      type: object
      properties:
        Posting:
          allOf:
            - $ref: '#/components/schemas/DateFilterInterval'
          nullable: true
      additionalProperties: false
      x-schema-id: ExportLedgerEntryDataFilters
    ExportResult:
      title: ExportResult
      required:
        - Exports
      type: object
      properties:
        Exports:
          type: array
          items:
            $ref: '#/components/schemas/Export'
          description: Requested exports.
      additionalProperties: false
      x-schema-id: ExportResult
    ExportStatus:
      title: Export status
      enum:
        - Pending
        - Processing
        - Success
        - Failed
        - Expired
      type: string
      description: Current status of the export.
    ExtendedAmount:
      title: Extended amount
      required:
        - Breakdown
        - Currency
        - GrossValue
        - NetValue
        - TaxValues
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          description: 'ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).'
          format: currency
        NetValue:
          type: number
          description: Net value without taxes.
          format: double
        GrossValue:
          type: number
          description: Gross value including all taxes.
          format: double
        TaxValues:
          type: array
          items:
            $ref: '#/components/schemas/TaxValue'
          description: The tax values applied.
        Breakdown:
          title: Tax breakdown
          allOf:
            - $ref: '#/components/schemas/TaxBreakdown'
          description: Information about individual tax amounts.
        Value:
          type: number
          format: double
          nullable: true
        Net:
          type: number
          format: double
          nullable: true
        Tax:
          type: number
          format: double
          nullable: true
        TaxRate:
          type: number
          format: double
          nullable: true
      additionalProperties: false
      description: ''
      x-schema-id: ExtendedAmount
    ExtendedAmountParameters:
      title: Amount parameters
      required:
        - Currency
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          description: ISO-4217 code of the `Currency`.
          format: currency
        TaxCodes:
          type: array
          items:
            type: string
          description: The tax values applied.
          nullable: true
        NetValue:
          type: number
          description: Net value in case the item is taxed.
          format: double
          nullable: true
        GrossValue:
          type: number
          description: Gross value including all taxes.
          format: double
          nullable: true
      additionalProperties: false
      description: ''
      x-schema-id: ExtendedAmountParameters
    ExternalPaymentParameters:
      title: ExternalPaymentParameters
      required:
        - AccessToken
        - AccountId
        - Amount
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        AccountId:
          type: string
          description: 'Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company). Company billing may not be enabled for your integration.'
          format: uuid
        CustomerId:
          type: string
          description: 'Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer). **Deprecated!**'
          format: uuid
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AccountId`.
        BillId:
          type: string
          description: Unique identifier of an open bill of the customer where to assign the payment.
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          description: 'Unique identifier of an [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category) to be assigned to the external payment.'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the reservation the payment belongs to.
          format: uuid
          nullable: true
        Amount:
          title: Amount parameters
          allOf:
            - $ref: '#/components/schemas/ExtendedAmountParameters'
          description: Amount of the external card payment.
        Type:
          allOf:
            - $ref: '#/components/schemas/ExternalPaymentTypeEnum'
          description: "Type of the external payment. (Required for the enterprises based in the French Legal Environment where `Unspecified` is considered as fraud.)\n\nUnspecified (Unspecified (unavailable in French Legal Environment))\n\nBadDebts (Bad debts)\n\nBacs (Bacs payment)\n\nWireTransfer (Wire transfer)\n\nInvoice (Invoice)\n\nExchangeRateDifference (Exchange rate difference)\n\nComplimentary (Complimentary)\n\nReseller (Reseller)\n\nExchangeRoundingDifference (Exchange rounding difference)\n\nBarter (Barter)\n\nCommission (Commission)\n\nBankCharges (Bank charges)\n\nCrossSettlement (Cross settlement)\n\nCash (Cash)\n\nCreditCard (Credit card – deprecated, only for existing partners)\n\nPrepayment (Prepayment)\n\nCheque (Cheque)\n\nBancontact (Bancontact)\n\nIDeal (iDeal – deprecated, only for existing partners)\n\nPayPal (PayPal – deprecated, only for existing partners)\n\nGiftCard (Gift card)\n\nLoyaltyPoints (Loyalty points)\n\nChequeVacances (Chèque-Vacances)\n\nOnlinePayment (Online payment – deprecated, only for existing partners)\n\nCardCheck (Card check)\n\nPaymentHubRedirection (Payment hub redirection)\n\nVoucher (Voucher)\n\nMasterCard (MasterCard – deprecated, only for existing partners)\n\nVisa (Visa – deprecated, only for existing partners)\n\nAmex (American Express – deprecated, only for existing partners)\n\nDiscover (Discover – deprecated, only for existing partners)\n\nDinersClub (Diners Club – deprecated, only for existing partners)\n\nJcb (JCB – deprecated, only for existing partners)\n\nUnionPay (UnionPay – deprecated, only for existing partners)\n\nTwint (TWINT)\n\nReka (Reka)\n\nLoyaltyCard (Loyalty card)\n\nPosDiningAndSpaReward (POS Dining & Spa Reward)\n\nDirectDebit (Direct debit)\n\nDepositCheck (Deposit - check)\n\nDepositCash (Deposit - cash)\n\nDepositCreditCard (Deposit - credit card)\n\nDepositWireTransfer (Deposit - wire transfer)"
          nullable: true
        ExternalIdentifier:
          type: string
          description: Identifier of the payment from external system.
          nullable: true
        Notes:
          type: string
          description: Additional payment notes.
          nullable: true
      additionalProperties: false
      x-schema-id: ExternalPaymentParameters
    ExternalPaymentTypeEnum:
      title: External payment type
      enum:
        - Unspecified
        - BadDebts
        - Bacs
        - WireTransfer
        - Invoice
        - ExchangeRateDifference
        - Complimentary
        - Reseller
        - ExchangeRoundingDifference
        - Barter
        - Commission
        - BankCharges
        - CrossSettlement
        - Cash
        - CreditCard
        - Prepayment
        - Cheque
        - Bancontact
        - IDeal
        - PayPal
        - GiftCard
        - LoyaltyPoints
        - ChequeVacances
        - OnlinePayment
        - CardCheck
        - PaymentHubRedirection
        - Voucher
        - MasterCard
        - Visa
        - Amex
        - Discover
        - DinersClub
        - Jcb
        - UnionPay
        - Twint
        - Reka
        - LoyaltyCard
        - PosDiningAndSpaReward
        - DirectDebit
        - DepositCheck
        - DepositCash
        - DepositCreditCard
        - DepositWireTransfer
      type: string
      description: "\n\nUnspecified (Unspecified (unavailable in French Legal Environment))\n\nBadDebts (Bad debts)\n\nBacs (Bacs payment)\n\nWireTransfer (Wire transfer)\n\nInvoice (Invoice)\n\nExchangeRateDifference (Exchange rate difference)\n\nComplimentary (Complimentary)\n\nReseller (Reseller)\n\nExchangeRoundingDifference (Exchange rounding difference)\n\nBarter (Barter)\n\nCommission (Commission)\n\nBankCharges (Bank charges)\n\nCrossSettlement (Cross settlement)\n\nCash (Cash)\n\nCreditCard (Credit card – deprecated, only for existing partners)\n\nPrepayment (Prepayment)\n\nCheque (Cheque)\n\nBancontact (Bancontact)\n\nIDeal (iDeal – deprecated, only for existing partners)\n\nPayPal (PayPal – deprecated, only for existing partners)\n\nGiftCard (Gift card)\n\nLoyaltyPoints (Loyalty points)\n\nChequeVacances (Chèque-Vacances)\n\nOnlinePayment (Online payment – deprecated, only for existing partners)\n\nCardCheck (Card check)\n\nPaymentHubRedirection (Payment hub redirection)\n\nVoucher (Voucher)\n\nMasterCard (MasterCard – deprecated, only for existing partners)\n\nVisa (Visa – deprecated, only for existing partners)\n\nAmex (American Express – deprecated, only for existing partners)\n\nDiscover (Discover – deprecated, only for existing partners)\n\nDinersClub (Diners Club – deprecated, only for existing partners)\n\nJcb (JCB – deprecated, only for existing partners)\n\nUnionPay (UnionPay – deprecated, only for existing partners)\n\nTwint (TWINT)\n\nReka (Reka)\n\nLoyaltyCard (Loyalty card)\n\nPosDiningAndSpaReward (POS Dining & Spa Reward)\n\nDirectDebit (Direct debit)\n\nDepositCheck (Deposit - check)\n\nDepositCash (Deposit - cash)\n\nDepositCreditCard (Deposit - credit card)\n\nDepositWireTransfer (Deposit - wire transfer)"
      x-enumNames:
        - Unspecified
        - BadDebts
        - Bacs
        - WireTransfer
        - Invoice
        - ExchangeRateDifference
        - Complimentary
        - Reseller
        - ExchangeRoundingDifference
        - Barter
        - Commission
        - BankCharges
        - CrossSettlement
        - Cash
        - CreditCard
        - Prepayment
        - Cheque
        - Bancontact
        - IDeal
        - PayPal
        - GiftCard
        - LoyaltyPoints
        - ChequeVacances
        - OnlinePayment
        - CardCheck
        - PaymentHubRedirection
        - Voucher
        - MasterCard
        - Visa
        - Amex
        - Discover
        - DinersClub
        - Jcb
        - UnionPay
        - Twint
        - Reka
        - LoyaltyCard
        - PosDiningAndSpaReward
        - DirectDebit
        - DepositCheck
        - DepositCash
        - DepositCreditCard
        - DepositWireTransfer
      x-enumDescriptions:
        - Unspecified (unavailable in French Legal Environment)
        - Bad debts
        - Bacs payment
        - Wire transfer
        - Invoice
        - Exchange rate difference
        - Complimentary
        - Reseller
        - Exchange rounding difference
        - Barter
        - Commission
        - Bank charges
        - Cross settlement
        - Cash
        - 'Credit card – deprecated, only for existing partners'
        - Prepayment
        - Cheque
        - Bancontact
        - 'iDeal – deprecated, only for existing partners'
        - 'PayPal – deprecated, only for existing partners'
        - Gift card
        - Loyalty points
        - Chèque-Vacances
        - 'Online payment – deprecated, only for existing partners'
        - Card check
        - Payment hub redirection
        - Voucher
        - 'MasterCard – deprecated, only for existing partners'
        - 'Visa – deprecated, only for existing partners'
        - 'American Express – deprecated, only for existing partners'
        - 'Discover – deprecated, only for existing partners'
        - 'Diners Club – deprecated, only for existing partners'
        - 'JCB – deprecated, only for existing partners'
        - 'UnionPay – deprecated, only for existing partners'
        - TWINT
        - Reka
        - Loyalty card
        - POS Dining & Spa Reward
        - Direct debit
        - Deposit - check
        - Deposit - cash
        - Deposit - credit card
        - Deposit - wire transfer
    FinancialDocumentPdfTemplateTypeEnum:
      title: Bill PDF template type
      enum:
        - Detailed
        - Consumption
        - Reservation
        - OrderItem
        - Guest
      type: string
      description: "\n\nDetailed (Detailed overview. Items are grouped by the reservation, item type and price, and consumption date.)\n\nConsumption (Overview by date (no reservation details). Items of the same type and price are grouped by consumption date.)\n\nReservation (Overview by reservation (no date). Items of the same type and price are grouped by reservation.)\n\nOrderItem (Consumption overview (not fiscal document). Items are grouped by the item type and price without reservation details and consumption date.)\n\nGuest (Overview by guest. Items are grouped by guest, reservation, consumption date, and item type.)"
      x-enumNames:
        - Detailed
        - Consumption
        - Reservation
        - OrderItem
        - Guest
      x-enumDescriptions:
        - 'Detailed overview. Items are grouped by the reservation, item type and price, and consumption date.'
        - Overview by date (no reservation details). Items of the same type and price are grouped by consumption date.
        - Overview by reservation (no date). Items of the same type and price are grouped by reservation.
        - Consumption overview (not fiscal document). Items are grouped by the item type and price without reservation details and consumption date.
        - 'Overview by guest. Items are grouped by guest, reservation, consumption date, and item type.'
    FiscalMachineAdditionalData:
      title: FiscalMachineAdditionalData
      type: object
      properties:
        Discriminator:
          allOf:
            - $ref: '#/components/schemas/FiscalMachineDataDiscriminatorEnum'
          description: "Type of additional data for Italian fiscal machine.\n\nItalianFiscalMachineData\n\nItalianFiscalMachinePayload"
          nullable: true
        ItalianFiscalMachineData:
          title: Italian fiscal machine data
          allOf:
            - $ref: '#/components/schemas/ItalianFiscalMachineDataV20250623'
          description: Fiscal machine data for Italian fiscal machine.
          nullable: true
        ItalianFiscalMachinePayload:
          title: Italian fiscal machine payload.
          allOf:
            - $ref: '#/components/schemas/ItalianFiscalMachinePayloadV20250623'
          description: Fiscal machine payload for Italian fiscal machine.
          nullable: true
      additionalProperties: false
      x-schema-id: FiscalMachineAdditionalData
    FiscalMachineCommandData:
      title: Fiscal machine command data
      required:
        - Bill
      type: object
      allOf:
        - $ref: '#/components/schemas/DeviceCommandData'
      properties:
        FiscalMachineId:
          type: string
          description: Identifier of the fiscal machine.
          nullable: true
        ApiUrl:
          type: string
          description: URL of the fiscal machine API.
          nullable: true
        FiscalMachineData:
          type: string
          description: Custom JSON data.
          nullable: true
        Bill:
          title: Bill
          allOf:
            - $ref: '#/components/schemas/Bill'
          description: The issued bill that should be fiscalized.
        TaxIdentifier:
          type: string
          description: Tax identifier to be used for fiscalization.
          nullable: true
        BillFiscalMachineData:
          title: Fiscal machine data
          allOf:
            - $ref: '#/components/schemas/BillFiscalMachineData'
          description: Fiscal machine data; currently only `ItalianFiscalMachineData` is supported.
          nullable: true
        PayloadData:
          title: Fiscal machine payload
          allOf:
            - $ref: '#/components/schemas/BillFiscalMachinePayloadData'
          description: Fiscal machine payload data; currently only `ItalianFiscalMachinePayloadData` is supported.
          nullable: true
      additionalProperties: false
      x-schema-id: FiscalMachineCommandData
    FiscalMachineCommandDataV20250623:
      title: Fiscal machine command data (ver. 2025-06-23)
      required:
        - ApiUrl
        - Bill
        - CreatedUtc
        - Device
        - FiscalMachineData
        - FiscalMachineId
        - Id
        - State
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the command.
          format: uuid
        State:
          title: Command state
          allOf:
            - $ref: '#/components/schemas/DeviceCommandStateEnum'
          description: "State of the command.\n\nPending (Created in Mews, but not yet received by the client application.)\n\nReceived (Received by the client application.)\n\nProcessing (Being processed by the client application.)\n\nProcessed (Successfully processed command.)\n\nCancelled (A command whose execution has been canceled before (or during) processing.)\n\nError (A command whose execution or processing was terminated by an error.)"
          x-enumNames:
            - Pending
            - Received
            - Processing
            - Processed
            - Cancelled
            - Error
          x-enumDescriptions:
            - 'Created in Mews, but not yet received by the client application.'
            - Received by the client application.
            - Being processed by the client application.
            - Successfully processed command.
            - A command whose execution has been canceled before (or during) processing.
            - A command whose execution or processing was terminated by an error.
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the command.
          format: date-time
        Creator:
          title: Profile data
          allOf:
            - $ref: '#/components/schemas/ProfileData'
          description: Creator of the command.
          nullable: true
        FiscalMachineId:
          minLength: 1
          type: string
          description: Identifier of the fiscal machine.
        ApiUrl:
          minLength: 1
          type: string
          description: URL of the fiscal machine API.
        FiscalMachineData:
          minLength: 1
          type: string
          description: Custom JSON data.
        TaxIdentifier:
          type: string
          description: Tax identifier to be used for fiscalization.
          nullable: true
        Device:
          allOf:
            - $ref: '#/components/schemas/Device'
          description: Device that the command should be executed on.
        Bill:
          title: Bill (ver 2025-06-23)
          allOf:
            - $ref: '#/components/schemas/BillV20250623'
          description: The issued bill that should be fiscalized.
        CommandData:
          allOf:
            - $ref: '#/components/schemas/FiscalMachineAdditionalData'
          description: Additional data of the fiscal machine.
          nullable: true
      additionalProperties: false
      x-schema-id: FiscalMachineCommandDataV20250623
    FiscalMachineCommandDataV20250623Result:
      title: FiscalMachineCommandDataV20250623Result
      required:
        - Commands
      type: object
      properties:
        Commands:
          type: array
          items:
            $ref: '#/components/schemas/FiscalMachineCommandDataV20250623'
          description: The filtered fiscal machine commands.
        Cursor:
          type: string
          description: Unique identifier of the last returned command. This can be used in Limitation in a subsequent request to fetch the next batch of commands.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: FiscalMachineCommandDataV20250623Result
    FiscalMachineDataDiscriminatorEnum:
      title: Fiscal machine data discriminator
      enum:
        - ItalianFiscalMachineData
        - ItalianFiscalMachinePayload
      type: string
      description: "\n\nItalianFiscalMachineData\n\nItalianFiscalMachinePayload"
      x-enumNames:
        - ItalianFiscalMachineData
        - ItalianFiscalMachinePayload
      x-enumDescriptions:
        - ''
        - ''
    FiscalMachinePayloadDataDiscriminatorEnum:
      title: Fiscal machine payload discriminator
      enum:
        - ItalianFiscalMachine
      type: string
      description: "\n\nItalianFiscalMachine"
      x-enumNames:
        - ItalianFiscalMachine
      x-enumDescriptions:
        - ''
    FlatTaxRateStrategy:
      title: FlatTaxRateStrategy
      type: object
      properties:
        CurrencyCode:
          type: string
          nullable: true
        Value:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: FlatTaxRateStrategy
    GetAllActiveCommandsParameters:
      title: GetAllActiveCommandsParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
      additionalProperties: false
      x-schema-id: GetAllActiveCommandsParameters
    GuidIEnumerableUpdateValue:
      title: Guid array update value
      type: object
      properties:
        Value:
          type: array
          items:
            type: string
            format: uuid
          description: Value which is to be updated.
          nullable: true
      additionalProperties: false
      x-schema-id: GuidIEnumerableUpdateValue
    GuidNullableUpdateValue:
      title: Guid update value
      type: object
      properties:
        Value:
          type: string
          description: Value which is to be updated.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: GuidNullableUpdateValue
    GuidUpdateValue:
      title: Guid update value
      type: object
      properties:
        Value:
          type: string
          description: Value which is to be updated.
          format: uuid
      additionalProperties: false
      x-schema-id: GuidUpdateValue
    Hours:
      title: Hours
      required:
        - Eight
        - Eighteen
        - Eleven
        - Fifteen
        - Five
        - Four
        - Fourteen
        - Nine
        - Nineteen
        - One
        - Seven
        - Seventeen
        - Six
        - Sixteen
        - Ten
        - Thirteen
        - Three
        - Twelve
        - Twenty
        - TwentyOne
        - TwentyThree
        - TwentyTwo
        - Two
        - Zero
      type: object
      properties:
        Zero:
          type: boolean
          description: Hour 0 enabled
        One:
          type: boolean
          description: Hour 1 enabled
        Two:
          type: boolean
          description: Hour 2 enabled
        Three:
          type: boolean
          description: Hour 3 enabled
        Four:
          type: boolean
          description: Hour 4 enabled
        Five:
          type: boolean
          description: Hour 5 enabled
        Six:
          type: boolean
          description: Hour 6 enabled
        Seven:
          type: boolean
          description: Hour 7 enabled
        Eight:
          type: boolean
          description: Hour 8 enabled
        Nine:
          type: boolean
          description: Hour 9 enabled
        Ten:
          type: boolean
          description: Hour 10 enabled
        Eleven:
          type: boolean
          description: Hour 11 enabled
        Twelve:
          type: boolean
          description: Hour 12 enabled
        Thirteen:
          type: boolean
          description: Hour 13 enabled
        Fourteen:
          type: boolean
          description: Hour 14 enabled
        Fifteen:
          type: boolean
          description: Hour 15 enabled
        Sixteen:
          type: boolean
          description: Hour 16 enabled
        Seventeen:
          type: boolean
          description: Hour 17 enabled
        Eighteen:
          type: boolean
          description: Hour 18 enabled
        Nineteen:
          type: boolean
          description: Hour 19 enabled
        Twenty:
          type: boolean
          description: Hour 20 enabled
        TwentyOne:
          type: boolean
          description: Hour 21 enabled
        TwentyTwo:
          type: boolean
          description: Hour 22 enabled
        TwentyThree:
          type: boolean
          description: Hour 23 enabled
      additionalProperties: false
      x-schema-id: Hours
    IdealData:
      title: iDEAL data
      required:
        - RedirectUrl
      type: object
      properties:
        RedirectUrl:
          minLength: 1
          type: string
          description: URL where the customer will be redirected after completing their iDEAL payment.
          format: uri
      additionalProperties: false
      x-schema-id: IdealData
    IdentityDocument:
      title: Identity document
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the document.
          format: uuid
        CustomerId:
          type: string
          description: Identifier of the `Customer`.
          format: uuid
        Type:
          title: Document type
          allOf:
            - $ref: '#/components/schemas/IdentityDocumentTypeEnum'
          description: "Type of the document.\n\nIdentityCard\n\nPassport\n\nVisa\n\nDriversLicense"
          x-enumNames:
            - IdentityCard
            - Passport
            - Visa
            - DriversLicense
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        Number:
          type: string
          description: Number of the document (e.g. passport number).
          nullable: true
        Expiration:
          type: string
          description: Expiration date in ISO 8601 format.
          format: date
          nullable: true
        Issuance:
          type: string
          description: Date of issuance in ISO 8601 format.
          format: date
          nullable: true
        IssuingCountryCode:
          type: string
          description: ISO 3166-1 code of the `Country`.
          nullable: true
        IssuingCity:
          type: string
          description: City where the document was issued.
          nullable: true
        IdentityDocumentSupportNumber:
          type: string
          description: Identity document support number. Only required for Spanish identity cards in Spanish hotels.
          nullable: true
      additionalProperties: false
      x-schema-id: IdentityDocument
    IdentityDocumentClearParameters:
      title: IdentityDocumentClearParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        CustomerIds:
          maxItems: 10
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Customer` for whom documents will be deleted.
      additionalProperties: false
      x-schema-id: IdentityDocumentClearParameters
    IdentityDocumentDeleteParameters:
      title: IdentityDocumentDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - IdentityDocumentIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        IdentityDocumentIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the identity documents to be deleted.
      additionalProperties: false
      x-schema-id: IdentityDocumentDeleteParameters
    IdentityDocumentFilterParameters:
      title: IdentityDocumentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerIds
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        ChainIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of `Chain`. If not specified, the operation returns data for all chains within scope of the Access Token.'
          nullable: true
        IdentityDocumentIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Identity document`.
          nullable: true
        CustomerIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Customer`.
        Types:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/IdentityDocumentTypeEnum'
          description: Type of the identity document.
          nullable: true
      additionalProperties: false
      x-schema-id: IdentityDocumentFilterParameters
    IdentityDocumentResult:
      title: IdentityDocumentResult
      required:
        - IdentityDocuments
      type: object
      properties:
        IdentityDocuments:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/IdentityDocumentV20241025'
          description: The identity documents of customers.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: IdentityDocumentResult
    IdentityDocumentTypeEnum:
      title: Document type
      enum:
        - IdentityCard
        - Passport
        - Visa
        - DriversLicense
      type: string
      description: "\n\nIdentityCard\n\nPassport\n\nVisa\n\nDriversLicense"
      x-enumNames:
        - IdentityCard
        - Passport
        - Visa
        - DriversLicense
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
    IdentityDocumentTypeUpdateValue:
      title: Identity document type update value
      type: object
      properties:
        Value:
          title: Document type
          allOf:
            - $ref: '#/components/schemas/IdentityDocumentTypeEnum'
          description: "Type of the document (or `null` if the number should not be updated).\n\nIdentityCard\n\nPassport\n\nVisa\n\nDriversLicense"
          x-enumNames:
            - IdentityCard
            - Passport
            - Visa
            - DriversLicense
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
      additionalProperties: false
      description: 'Has same structure as [String update value](https://mews-systems.gitbook.io/connector-api/operations/_objects#string-update-value).'
      x-schema-id: IdentityDocumentTypeUpdateValue
    IdentityDocumentUpdateParameters:
      title: Identity document update parameters
      required:
        - Id
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the document.
          format: uuid
        Type:
          title: Identity document type update value
          allOf:
            - $ref: '#/components/schemas/IdentityDocumentTypeUpdateValue'
          description: Type of the document (or `null` if the number should not be updated).
          nullable: true
        Number:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Number of the document (e.g. passport number or `null` if the number should not be updated).
          nullable: true
        ExpirationDate:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Expiration date in ISO 8601 format (or `null` if the expiration date should not be updated).
          format: date
          nullable: true
        IssuanceDate:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Date of issuance in ISO 8601 format (or `null` if the issuance date should not be updated).
          format: date
          nullable: true
        IssuingCountryCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: ISO 3166-1 code of the `Country` (or `null` if the issuing country code should not be updated).
          nullable: true
        IssuingCity:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: City where the document was issued (or `null` if the issuing city should not be updated).
          nullable: true
        IdentityDocumentSupportNumber:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Identity document support number. Only required for Spanish identity cards in Spanish hotels.
          nullable: true
      additionalProperties: false
      x-schema-id: IdentityDocumentUpdateParameters
    IdentityDocumentV20241025:
      title: Identity document (ver 2024-10-25)
      required:
        - CustomerId
        - Id
        - Number
        - Type
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the document.
          format: uuid
        CustomerId:
          type: string
          description: Identifier of the `Customer`.
          format: uuid
        Type:
          title: Document type
          allOf:
            - $ref: '#/components/schemas/IdentityDocumentTypeEnum'
          description: "Type of the document.\n\nIdentityCard\n\nPassport\n\nVisa\n\nDriversLicense"
          x-enumNames:
            - IdentityCard
            - Passport
            - Visa
            - DriversLicense
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        Number:
          minLength: 1
          type: string
          description: 'Number of the document (e.g. passport number). The value is an empty string when the number is not collected in certain regions, such as The Netherlands.'
        ExpirationDate:
          type: string
          description: Expiration date in ISO 8601 format.
          format: date
          nullable: true
        IssuanceDate:
          type: string
          description: Date of issuance in ISO 8601 format.
          format: date
          nullable: true
        IssuingCountryCode:
          type: string
          description: ISO 3166-1 code of the `Country`.
          nullable: true
        IssuingCity:
          type: string
          description: City where the document was issued.
          nullable: true
        IdentityDocumentSupportNumber:
          type: string
          description: Identity document support number. Only required for Spanish identity cards in Spanish hotels.
          nullable: true
      additionalProperties: false
      x-schema-id: IdentityDocumentV20241025
    IdentityDocumentWriteResult:
      title: IdentityDocumentWriteResult
      required:
        - IdentityDocuments
      type: object
      properties:
        IdentityDocuments:
          maxItems: 10
          type: array
          items:
            $ref: '#/components/schemas/IdentityDocumentV20241025'
          description: Modified identity documents.
      additionalProperties: false
      x-schema-id: IdentityDocumentWriteResult
    IdentityDocumentsAddData:
      title: Identity document parameters
      required:
        - CustomerId
        - Number
        - Type
      type: object
      properties:
        CustomerId:
          type: string
          description: Identifier of the `Customer`.
          format: uuid
        Type:
          title: Document type
          allOf:
            - $ref: '#/components/schemas/IdentityDocumentTypeEnum'
          description: "Type of the document.\n\nIdentityCard\n\nPassport\n\nVisa\n\nDriversLicense"
          x-enumNames:
            - IdentityCard
            - Passport
            - Visa
            - DriversLicense
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        Number:
          minLength: 1
          type: string
          description: 'Number of the document (e.g. passport number). If the number is not collected in certain regions, such as The Netherlands, use an empty string. In all other cases, a value should be supplied.'
        ExpirationDate:
          type: string
          description: Expiration date in ISO 8601 format.
          format: date
          nullable: true
        IssuanceDate:
          type: string
          description: Date of issuance in ISO 8601 format.
          format: date
          nullable: true
        IssuingCountryCode:
          type: string
          description: ISO 3166-1 code of the `Country`).
          nullable: true
        IssuingCity:
          type: string
          description: City where the document was issued.
          nullable: true
        IdentityDocumentSupportNumber:
          type: string
          description: Identity document support number. Only required for Spanish identity cards in Spanish hotels.
          nullable: true
      additionalProperties: false
      x-schema-id: IdentityDocumentsAddData
    IdentityDocumentsAddParameters:
      title: Identity document add parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - IdentityDocuments
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        IdentityDocuments:
          maxItems: 10
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/IdentityDocumentsAddData'
          description: Identity documents to be added.
      additionalProperties: false
      x-schema-id: IdentityDocumentsAddParameters
    ImageResizeModeEnum:
      title: Image resize mode
      enum:
        - Cover
        - CoverExact
        - Fit
        - FitExact
      type: string
      description: "\n\nCover (Resize to fit within the specified size, so the result might be smaller than requested.)\n\nCoverExact (Resize and pad to exactly fit within the specified size.)\n\nFit (Resize to fit within the specified size, so the result might be smaller than requested.)\n\nFitExact (Resize and pad to exactly fit within the specified size.)"
      x-enumNames:
        - Cover
        - CoverExact
        - Fit
        - FitExact
      x-enumDescriptions:
        - 'Resize to fit within the specified size, so the result might be smaller than requested.'
        - Resize and pad to exactly fit within the specified size.
        - 'Resize to fit within the specified size, so the result might be smaller than requested.'
        - Resize and pad to exactly fit within the specified size.
    ImageSizeParameters:
      title: Image size parameters
      required:
        - ImageId
      type: object
      properties:
        ImageId:
          type: string
          description: Unique identifier of the image.
          format: uuid
        Width:
          type: integer
          description: Desired width of the image.
          format: int32
          nullable: true
        Height:
          type: integer
          description: Desired height of the image.
          format: int32
          nullable: true
        ResizeMode:
          allOf:
            - $ref: '#/components/schemas/ImageResizeModeEnum'
          description: "Mode how the image should be resized to the desired width and height.\n\nCover (Resize to fit within the specified size, so the result might be smaller than requested.)\n\nCoverExact (Resize and pad to exactly fit within the specified size.)\n\nFit (Resize to fit within the specified size, so the result might be smaller than requested.)\n\nFitExact (Resize and pad to exactly fit within the specified size.)"
          nullable: true
      additionalProperties: false
      x-schema-id: ImageSizeParameters
    ImageUrl:
      title: Image URL
      required:
        - ImageId
        - Url
      type: object
      properties:
        ImageId:
          type: string
          description: Unique identifier of the image.
          format: uuid
        Url:
          minLength: 1
          type: string
          description: URL of the image.
      additionalProperties: false
      x-schema-id: ImageUrl
    ImageUrlParameters:
      title: ImageUrlParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Images
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Images:
          type: array
          items:
            $ref: '#/components/schemas/ImageSizeParameters'
          description: Parameters of images whose URLs should be returned.
      additionalProperties: false
      x-schema-id: ImageUrlParameters
    ImageUrlResult:
      title: ImageUrlResult
      required:
        - ImageUrls
      type: object
      properties:
        ImageUrls:
          type: array
          items:
            $ref: '#/components/schemas/ImageUrl'
          description: URLs of the images.
      additionalProperties: false
      x-schema-id: ImageUrlResult
    Int32NullableUpdateValue:
      title: Int32 update value
      type: object
      properties:
        Value:
          type: integer
          description: Value which is to be updated.
          format: int32
          nullable: true
      additionalProperties: false
      x-schema-id: Int32NullableUpdateValue
    Int32UpdateValue:
      title: Int32 update value
      type: object
      properties:
        Value:
          type: integer
          description: Value which is to be updated.
          format: int32
      additionalProperties: false
      x-schema-id: Int32UpdateValue
    InvoicePaymentData:
      title: InvoicePaymentData
      type: object
      properties:
        InvoiceId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: InvoicePaymentData
    InvoicePaymentTypeEnum:
      title: Invoice payment type
      enum:
        - Receivable
        - Balancing
        - UnderpaymentBalancingReceivable
        - OverpaymentBalancingReceivable
        - Overpayment
      type: string
      description: "\n\nReceivable\n\nBalancing\n\nUnderpaymentBalancingReceivable\n\nOverpaymentBalancingReceivable\n\nOverpayment"
      x-enumNames:
        - Receivable
        - Balancing
        - UnderpaymentBalancingReceivable
        - OverpaymentBalancingReceivable
        - Overpayment
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
    ItalianFiscalMachineData:
      title: Fiscal machine data for Italian fiscal machine
      type: object
      properties:
        IsRefund:
          type: boolean
          description: Indicates if the transaction is a refund.
        RebatedReceiptNumber:
          type: string
          description: Number of the rebated receipt.
          nullable: true
        RebatedReceiptSequence:
          type: string
          description: Sequence of the rebated receipt.
          nullable: true
        RebatedReceiptDateTimeUtc:
          type: string
          description: Date and time of the rebated receipt in UTC.
          format: date-time
          nullable: true
        PrinterSerialNumber:
          type: string
          description: Serial number of the printer.
          nullable: true
      additionalProperties: false
      x-schema-id: ItalianFiscalMachineData
    ItalianFiscalMachineDataV20250623:
      title: Italian fiscal machine data
      type: object
      properties:
        IsRefund:
          type: boolean
          description: Indicates if the transaction is a refund.
        RebatedReceiptNumber:
          type: string
          description: Number of the rebated receipt.
          nullable: true
        RebatedReceiptSequence:
          type: string
          description: Sequence of the rebated receipt.
          nullable: true
        RebatedReceiptDateTimeUtc:
          type: string
          description: Date and time of the rebated receipt in UTC.
          format: date-time
          nullable: true
        PrinterSerialNumber:
          type: string
          description: Serial number of the printer.
          nullable: true
      additionalProperties: false
      x-schema-id: ItalianFiscalMachineDataV20250623
    ItalianFiscalMachinePayloadV20250623:
      title: Italian fiscal machine payload.
      required:
        - Payload
      type: object
      properties:
        Payload:
          minLength: 1
          type: string
          description: Base64-encoded data of the file to be printed.
      additionalProperties: false
      x-schema-id: ItalianFiscalMachinePayloadV20250623
    ItalianFiscalMachineResultData:
      title: ItalianFiscalMachineResultData
      type: object
      properties:
        SerialNumber:
          type: string
          nullable: true
        Base64Data:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ItalianFiscalMachineResultData
    JToken:
      type: array
      items:
        $ref: '#/components/schemas/JToken'
    KeyCutterCommandData:
      title: Key cutter command data
      required:
        - EndUtc
        - KeyCount
        - LastName
        - LockIds
        - StartUtc
      type: object
      allOf:
        - $ref: '#/components/schemas/DeviceCommandData'
      properties:
        KeyCutterId:
          type: string
          description: Identifier of the key cutter.
          nullable: true
        ApiUrl:
          type: string
          description: URL of the key cutter server API.
          nullable: true
        KeyCutterData:
          type: string
          description: Custom JSON data.
          nullable: true
        KeyCount:
          type: integer
          description: Count of keys to cut.
          format: int32
        LockIds:
          type: array
          items:
            type: string
          description: Identifiers of locks/rooms the key should open.
        StartUtc:
          minLength: 1
          type: string
          description: Reservation start.
          format: date-time
        EndUtc:
          minLength: 1
          type: string
          description: Reservation end.
          format: date-time
        FirstName:
          type: string
          description: First name of the reservation owner.
          nullable: true
        LastName:
          minLength: 1
          type: string
          description: Last name of the reservation owner.
        NormalizedFirstName:
          type: string
          description: Normalized first name of the customer without special characters.
          nullable: true
        NormalizedLastName:
          type: string
          description: Normalized last name of the customer without special characters.
          nullable: true
        Telephone:
          type: string
          description: Telephone of the reservation owner.
          nullable: true
        Email:
          type: string
          description: Email of the reservation owner.
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the reservation.
          format: uuid
          nullable: true
        ReservationNumber:
          type: string
          description: Confirmation number of the reservation in Mews.
          nullable: true
      additionalProperties: false
      x-schema-id: KeyCutterCommandData
    KeyCutterCommandParameters:
      title: KeyCutterCommandParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - KeyCount
        - KeyCutterId
        - ReservationId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        KeyCutterId:
          type: string
          description: 'Unique identifier of the KeyCutter [Device](https://mews-systems.gitbook.io/connector-api/operations/devices/#device) where to encode the key.'
          format: uuid
        ReservationId:
          type: string
          description: Unique identifier of the reservation to encode the key for.
          format: uuid
        KeyCount:
          type: integer
          description: Count of keys to encode.
          format: int32
      additionalProperties: false
      x-schema-id: KeyCutterCommandParameters
    Language:
      title: Language
      required:
        - Code
        - EnglishName
        - LocalName
      type: object
      properties:
        Code:
          minLength: 1
          type: string
          description: Language-culture code of the language.
        FallbackLanguageCode:
          type: string
          description: Language-culture code of the fallback language.
          nullable: true
        EnglishName:
          minLength: 1
          type: string
          description: English name of the language.
        LocalName:
          minLength: 1
          type: string
          description: Local name of the language.
      additionalProperties: false
      x-schema-id: Language
    LanguageResult:
      title: LanguageResult
      required:
        - Languages
      type: object
      properties:
        Languages:
          type: array
          items:
            $ref: '#/components/schemas/Language'
          description: The supported languages.
      additionalProperties: false
      x-schema-id: LanguageResult
    LanguageTextParameters:
      title: LanguageTextParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LanguageCodes
        - Scope
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        LanguageCodes:
          type: array
          items:
            type: string
          description: Language-culture codes of the `Languages` whose texts to return.
        Scope:
          minLength: 1
          type: string
          description: Scope of texts to return.
      additionalProperties: false
      x-schema-id: LanguageTextParameters
    LanguageTextResult:
      title: LanguageTextResult
      required:
        - LanguageTexts
      type: object
      properties:
        LanguageTexts:
          type: array
          items:
            $ref: '#/components/schemas/LanguageTexts'
          description: Texts in the specified languages.
      additionalProperties: false
      x-schema-id: LanguageTextResult
    LanguageTexts:
      title: Language texts
      required:
        - LanguageCode
        - Texts
      type: object
      properties:
        LanguageCode:
          minLength: 1
          type: string
          description: Language-culture code of the `Language`.
        Texts:
          title: Dictionary
          type: object
          additionalProperties:
            type: string
          description: Texts in the specified language by their keys.
          x-schema-id: Dictionary
      additionalProperties: false
      x-schema-id: LanguageTexts
    LedgerBalance:
      title: LedgerBalance
      required:
        - ClosingBalance
        - Date
        - EnterpriseId
        - LedgerType
        - OpeningBalance
      type: object
      properties:
        EnterpriseId:
          type: string
          description: Unique identifier of the Enterprise.
          format: uuid
        Date:
          minLength: 1
          type: string
          description: Day for which ledger balance applies in ISO 8601 format.
          format: date
        LedgerType:
          title: Accounting ledger type
          allOf:
            - $ref: '#/components/schemas/AccountingLedgerTypeEnum'
          description: "Type of accounting ledger.\n\nRevenue\n\nTax\n\nPayment\n\nDeposit\n\nGuest\n\nCity\n\nNonRevenue"
          x-enumNames:
            - Revenue
            - Tax
            - Payment
            - Deposit
            - Guest
            - City
            - NonRevenue
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        OpeningBalance:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: Ledger opening balance at the start of the day.
        ClosingBalance:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: Ledger closing balance at the end of the day.
      additionalProperties: false
      description: Ledger balance
      x-schema-id: LedgerBalance
    LedgerBalanceParameters:
      title: LedgerBalanceParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Date
        - LedgerTypes
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        Date:
          allOf:
            - $ref: '#/components/schemas/DateFilterInterval'
          description: Date interval over which the ledger balances are created.
          x-max-interval-in-months: 1
        LedgerTypes:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AccountingLedgerTypeEnum'
          description: Accounting ledger types to which ledger balances belong.
      additionalProperties: false
      x-schema-id: LedgerBalanceParameters
    LedgerBalanceResult:
      title: LedgerBalanceResult
      required:
        - LedgerBalances
      type: object
      properties:
        LedgerBalances:
          type: array
          items:
            $ref: '#/components/schemas/LedgerBalance'
          description: The list of filtered ledger balances.
          nullable: true
        Cursor:
          type: string
          description: Unique identifier of the last and hence oldest ledger balance returned. This can be used in Limitation in a subsequent request to fetch the next batch of ledger balances.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: LedgerBalanceResult
    LegalEntityIdentifierUpdateParameters:
      title: Customer update legal entity identifiers
      type: object
      properties:
        ItDestinationCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Italian destination code (or `null` if the Italian destination code should not be updated).
          nullable: true
        ItFiscalCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Italian fiscal code (or `null` if the Italian fiscal code should not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: LegalEntityIdentifierUpdateParameters
    LegalEntityIdentifiers:
      title: Customer legal identifiers
      type: object
      properties:
        ItDestinationCode:
          type: string
          description: Italian destination code.
          nullable: true
        ItFiscalCode:
          type: string
          description: Italian fiscal code.
          nullable: true
      additionalProperties: false
      x-schema-id: LegalEntityIdentifiers
    LengthRestriction:
      title: Length restriction
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the rate restriction.
          format: uuid
        RateId:
          type: string
          description: Unique identifier of the rate.
          format: uuid
        IsInherited:
          type: boolean
          description: Whether the rate restriction is inherited from the parent rate.
        StartUtc:
          type: string
          description: Start of the rate restriction in UTC timezone in ISO 8601 format.
          nullable: true
        EndUtc:
          type: string
          description: End of the rate restriction in UTC timezone in ISO 8601 format.
          nullable: true
        Days:
          type: array
          items:
            type: string
          description: The restricted days of week.
          nullable: true
        ExternalIdentifier:
          type: string
          description: Identifiers of from external systems.
          nullable: true
        MinLength:
          type: string
          description: Minimal reservation length in ISO 8601 duration format.
          nullable: true
        MaxLength:
          type: string
          description: Maximal reservation length in ISO 8601 duration format.
          nullable: true
      additionalProperties: false
      x-schema-id: LengthRestriction
    Limitation:
      title: Limitation
      required:
        - Count
      type: object
      properties:
        Count:
          type: integer
          format: int32
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      description: Limitation on the quantity of data returned.
      x-schema-id: Limitation
    LoyaltyMembership:
      title: Loyalty membership
      required:
        - AccountId
        - ChainId
        - CreatorProfile
        - Id
        - IsPrimary
        - LoyaltyProgramId
        - State
        - UpdaterProfile
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the loyalty membership.
          format: uuid
        ChainId:
          type: string
          description: Unique identifier of the chain.
          format: uuid
        AccountId:
          type: string
          description: Unique identifier of the account.
          format: uuid
        LoyaltyProgramId:
          type: string
          description: Unique identifier of the loyalty program.
          format: uuid
        State:
          title: Loyalty membership state
          allOf:
            - $ref: '#/components/schemas/LoyaltyMembershipStateEnum'
          description: "State of the loyalty membership.\n\nNew\n\nPending\n\nEnrolled\n\nCanceled\n\nDeclined"
          x-enumNames:
            - New
            - Pending
            - Enrolled
            - Canceled
            - Declined
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
        IsPrimary:
          type: boolean
          description: Defines the primary loyalty membership.
        ProviderMembershipId:
          type: string
          description: Unique identifier for the loyalty membership in the loyalty provider's system.
          nullable: true
        Code:
          type: string
          description: Code of the loyalty membership.
          nullable: true
        Points:
          type: integer
          description: The loyalty points for the account in that membership.
          format: int32
          nullable: true
        ExpirationDate:
          type: string
          description: Expiration date of the loyalty membership in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        Url:
          type: string
          description: Url of the loyalty membership.
          nullable: true
        LoyaltyTierId:
          type: string
          description: Unique identifier of the loyalty tier.
          format: uuid
          nullable: true
        CreatorProfile:
          title: Profile data
          allOf:
            - $ref: '#/components/schemas/ProfileData'
          description: The profile data of the user who created or last updated the record.
        UpdaterProfile:
          title: Profile data
          allOf:
            - $ref: '#/components/schemas/ProfileData'
          description: The profile data of the user who created or last updated the record.
      additionalProperties: false
      x-schema-id: LoyaltyMembership
    LoyaltyMembershipAddParameters:
      title: Loyalty membership parameters
      required:
        - AccountId
        - IsPrimary
        - LoyaltyProgramId
      type: object
      properties:
        AccountId:
          type: string
          description: Unique identifier of the customer account.
          format: uuid
        LoyaltyProgramId:
          type: string
          description: Unique identifier of the loyalty program.
          format: uuid
        IsPrimary:
          type: boolean
          description: Defines the primary loyalty membership for the account.
        State:
          allOf:
            - $ref: '#/components/schemas/LoyaltyMembershipStateEnum'
          description: "State of the loyalty membership. The default is `Enrolled`.\n\nNew\n\nPending\n\nEnrolled\n\nCanceled\n\nDeclined"
          nullable: true
        Code:
          maxLength: 255
          type: string
          description: 'Loyalty membership code, such as an identification number printed on a loyalty card visible to the customer.'
          nullable: true
        Points:
          type: integer
          description: The loyalty points for the account in that membership.
          format: int32
          nullable: true
        ExpirationDate:
          type: string
          description: Expiration date of the loyalty membership in UTC timezone in ISO 8601 format.
          format: date
          nullable: true
        Url:
          type: string
          description: URL of the loyalty membership in external loyalty system.
          format: uri
          nullable: true
        LoyaltyTierId:
          type: string
          description: Unique identifier of the loyalty tier.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyMembershipAddParameters
    LoyaltyMembershipDeleteParameters:
      title: Loyalty membership delete parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyMembershipIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        LoyaltyMembershipIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifier of the loyalty memberships to be deleted.
      additionalProperties: false
      x-schema-id: LoyaltyMembershipDeleteParameters
    LoyaltyMembershipFilterParameters:
      title: Loyalty membership filter parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the chain. If not specified, the operation returns data for all chains within scope of the Access Token.'
          nullable: true
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: The time interval during which the membership was created.
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: The time interval during which the membership was last updated.
          nullable: true
          x-max-interval-in-months: 3
        LoyaltyMembershipIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Loyalty memberships](https://mews-systems.gitbook.io/connector-api/operations/#loyalty-membership).'
          nullable: true
        AccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of accounts (for example [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)) the membership is associated with.'
          nullable: true
        LoyaltyProgramIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Loyalty programs](https://mews-systems.gitbook.io/connector-api/operations/loyaltyprograms/#loyalty-program).'
          nullable: true
        MembershipStates:
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyMembershipStateEnum'
          description: States of the loyalty memberships.
          nullable: true
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
        Codes:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: 'List of loyalty membership codes, such as identification numbers printed on loyalty cards visible to the customer.'
          nullable: true
        ProviderMembershipIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: List of unique loyalty membership identifiers assigned and managed by the external loyalty provider's system.
          nullable: true
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
      additionalProperties: false
      x-schema-id: LoyaltyMembershipFilterParameters
    LoyaltyMembershipResult:
      title: Loyalty membership result
      required:
        - LoyaltyMemberships
      type: object
      properties:
        LoyaltyMemberships:
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyMembership'
          description: The loyalty memberships of the enterprise.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyMembershipResult
    LoyaltyMembershipStateEnum:
      title: Loyalty membership state
      enum:
        - New
        - Pending
        - Enrolled
        - Canceled
        - Declined
      type: string
      description: "State of the loyalty membership.\n\nNew\n\nPending\n\nEnrolled\n\nCanceled\n\nDeclined"
      x-enumNames:
        - New
        - Pending
        - Enrolled
        - Canceled
        - Declined
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
    LoyaltyMembershipStateUpdateValue:
      title: Loyalty membership state update value
      type: object
      properties:
        Value:
          title: Loyalty membership state
          allOf:
            - $ref: '#/components/schemas/LoyaltyMembershipStateEnum'
          description: Value which is to be updated.
          x-enumNames:
            - New
            - Pending
            - Enrolled
            - Canceled
            - Declined
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
      additionalProperties: false
      x-schema-id: LoyaltyMembershipStateUpdateValue
    LoyaltyMembershipUpdateParameters:
      title: Loyalty membership update parameters
      required:
        - LoyaltyMembershipId
      type: object
      properties:
        LoyaltyMembershipId:
          type: string
          description: Unique identifier of the loyalty membership.
          format: uuid
        LoyaltyProgramId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidUpdateValue'
          description: Unique identifier of the loyalty program (or `null` if the program should not be updated).
          nullable: true
        State:
          title: Loyalty membership state update value
          allOf:
            - $ref: '#/components/schemas/LoyaltyMembershipStateUpdateValue'
          description: 'State of the loyalty membership, (or `null` if the state should not be updated).'
          nullable: true
        IsPrimary:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: Boolean value defining the primary loyalty membership for the account (or `null` if the value should not be updated).
          nullable: true
        Code:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Code of the loyalty membership. (or `null` if the code should not be updated).
          nullable: true
        ProviderMembershipId:
          title: String update value
          maxLength: 100
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Loyalty membership identifier assigned by the external loyalty provider's system (or `null` if the value should not be updated).
          nullable: true
        Points:
          title: Int32 update value
          allOf:
            - $ref: '#/components/schemas/Int32NullableUpdateValue'
          description: The loyalty points the account has in the loyalty membership (or `null` if the points should not be updated).
          nullable: true
        ExpirationDate:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Expiration date of the loyalty membership in UTC timezone in ISO 8601 format (or `null` if the date should not be updated).
          format: date
          nullable: true
        Url:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: URL of the loyalty membership (or `null` if the URL should not be updated).
          format: uri
          nullable: true
        LoyaltyTierId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Unique identifier of the loyalty tier (or `null` if the tier should not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyMembershipUpdateParameters
    LoyaltyProgram:
      title: Loyalty program
      required:
        - ChainId
        - Code
        - Id
        - Name
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the loyalty program.
          format: uuid
        ChainId:
          type: string
          description: Unique identifier of the chain.
          format: uuid
        Name:
          minLength: 1
          type: string
          description: Name of the loyalty program.
        Code:
          minLength: 1
          type: string
          description: Code of the loyalty program.
        Type:
          anyOf:
            - $ref: '#/components/schemas/LoyaltyProgramType'
          nullable: true
        Subscription:
          anyOf:
            - $ref: '#/components/schemas/LoyaltyProgramSubscription'
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyProgram
    LoyaltyProgramAddParameters:
      title: LoyaltyProgramAddParameters
      required:
        - Code
        - Name
      type: object
      properties:
        Name:
          maxLength: 100
          minLength: 1
          type: string
        Code:
          maxLength: 50
          minLength: 1
          type: string
        Type:
          anyOf:
            - $ref: '#/components/schemas/LoyaltyProgramType'
          nullable: true
        Subscription:
          anyOf:
            - $ref: '#/components/schemas/LoyaltyProgramSubscription'
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyProgramAddParameters
    LoyaltyProgramDeleteParameters:
      title: LoyaltyProgramDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyProgramIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        LoyaltyProgramIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifier of the loyalty programs to be deleted.
      additionalProperties: false
      x-schema-id: LoyaltyProgramDeleteParameters
    LoyaltyProgramFilterParameters:
      title: LoyaltyProgramFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the chain. If not specified, the operation returns data for all chains within scope of the Access Token.'
          nullable: true
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        LoyaltyProgramIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Loyalty programs](https://mews-systems.gitbook.io/connector-api/operations/#loyalty-program).'
          nullable: true
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
        Codes:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          nullable: true
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
      additionalProperties: false
      x-schema-id: LoyaltyProgramFilterParameters
    LoyaltyProgramResult:
      title: LoyaltyProgramResult
      required:
        - LoyaltyPrograms
      type: object
      properties:
        LoyaltyPrograms:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
          description: Updated loyalty programs.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyProgramResult
    LoyaltyProgramSubscription:
      enum:
        - Free
        - Paid
      type: string
    LoyaltyProgramType:
      enum:
        - Hotel
        - ExternalPartner
        - SoftBrand
        - Unknown
      type: string
    LoyaltyProgramUpdateParameters:
      title: LoyaltyProgramUpdateParameters
      required:
        - LoyaltyProgramId
      type: object
      properties:
        LoyaltyProgramId:
          type: string
          format: uuid
        Name:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
        Type:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
            - $ref: '#/components/schemas/LoyaltyProgramType'
          nullable: true
        Subscription:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
            - $ref: '#/components/schemas/LoyaltyProgramSubscription'
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyProgramUpdateParameters
    LoyaltyTier:
      title: Loyalty tier
      required:
        - Code
        - Id
        - LoyaltyProgramId
        - Name
        - Ordering
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the loyalty tier.
          format: uuid
        LoyaltyProgramId:
          type: string
          description: Unique identifier of the loyalty program of that loyalty tier.
          format: uuid
        Name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the loyalty tier.
        Code:
          maxLength: 50
          minLength: 1
          type: string
          description: Code of the loyalty tier.
        Ordering:
          type: integer
          description: Ordering of the loyalty tier.
          format: int32
      additionalProperties: false
      x-schema-id: LoyaltyTier
    LoyaltyTierAddParameters:
      title: Loyalty tier add parameters
      required:
        - Code
        - LoyaltyProgramId
        - Name
        - Ordering
      type: object
      properties:
        LoyaltyProgramId:
          type: string
          description: Unique identifier of the loyalty program the tier belongs to.
          format: uuid
        Name:
          maxLength: 50
          minLength: 1
          type: string
          description: Name of the loyalty tier.
        Code:
          maxLength: 50
          minLength: 1
          type: string
          description: Code of the loyalty tier.
        Ordering:
          type: integer
          description: Ordering of the loyalty tier.
          format: int32
      additionalProperties: false
      x-schema-id: LoyaltyTierAddParameters
    LoyaltyTierDeleteParameters:
      title: LoyaltyTierDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyTierIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        LoyaltyTierIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifier of the loyalty tiers to be deleted.
      additionalProperties: false
      x-schema-id: LoyaltyTierDeleteParameters
    LoyaltyTierFilterParameters:
      title: LoyaltyTierFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - LoyaltyProgramIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the chain. If not specified, the operation returns data for all chains within scope of the Access Token.'
          nullable: true
        LoyaltyProgramIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Loyalty programs](https://mews-systems.gitbook.io/connector-api/operations/#loyalty-program).'
        LoyaltyTierIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Loyalty tiers](https://mews-systems.gitbook.io/connector-api/operations/#loyalty-tier).'
          nullable: true
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval of `Loyalty tier` last update date and time.
          nullable: true
          x-max-interval-in-months: 3
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
      additionalProperties: false
      x-schema-id: LoyaltyTierFilterParameters
    LoyaltyTierResult:
      title: LoyaltyTierResult
      required:
        - LoyaltyTiers
      type: object
      properties:
        LoyaltyTiers:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyTier'
          description: The loyalty tiers of the loyalty program within the chain.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyTierResult
    LoyaltyTierUpdateParameters:
      title: Loyalty tier update parameters
      required:
        - LoyaltyTierId
      type: object
      properties:
        LoyaltyTierId:
          type: string
          description: Unique identifier of the loyalty tier.
          format: uuid
        Name:
          title: String update value
          maxLength: 50
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Name of the loyalty tier \(or `null` if the name should not be updated\).
          nullable: true
        Code:
          title: String update value
          maxLength: 50
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: 'Code of the loyalty tier, \(or `null` if the code should not be updated\).'
          nullable: true
        Ordering:
          title: Int32 update value
          allOf:
            - $ref: '#/components/schemas/Int32UpdateValue'
          description: 'Ordering of the loyalty tier, \(or `null` if the ordering should not be updated\).'
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyTierUpdateParameters
    LoyaltyTierWriteResult:
      title: LoyaltyTierWriteResult
      required:
        - LoyaltyTiers
      type: object
      properties:
        LoyaltyTiers:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyTier'
          description: The loyalty tiers of the loyalty program within the chain.
      additionalProperties: false
      x-schema-id: LoyaltyTierWriteResult
    MergeAccountTypeEnum:
      title: Account merge type
      enum:
        - Customer
        - Company
      type: string
      description: "\n\nCustomer\n\nCompany"
      x-enumNames:
        - Customer
        - Company
      x-enumDescriptions:
        - ''
        - ''
    Message:
      title: Message
      required:
        - CreatedUtc
        - Id
        - MessageThreadId
        - Sender
        - Text
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the message.
          format: uuid
        MessageThreadId:
          type: string
          description: 'Unique identifier of the [Message thread](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread) which the message belongs to.'
          format: uuid
        Text:
          minLength: 1
          type: string
          description: Text of the message.
        Sender:
          $ref: '#/components/schemas/SenderDiscriminator'
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the message in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: Message
    MessageAddParameters:
      title: MessageAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - MessageThreadId
        - Text
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        MessageThreadId:
          type: string
          format: uuid
        Text:
          minLength: 1
          type: string
        Identifier:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: MessageAddParameters
    MessageFilterParameters:
      title: MessageFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - MessageThreadIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        MessageThreadIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Message threads](https://mews-systems.gitbook.io/connector-api/operations/messagethreads/#message-thread) from where to return messages.'
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 1
      additionalProperties: false
      x-schema-id: MessageFilterParameters
    MessageResult:
      title: MessageResult
      required:
        - Messages
      type: object
      properties:
        Messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: The filtered messages.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest message returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older messages.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: MessageResult
    MessageThread:
      title: Message thread
      required:
        - CreatedUtc
        - Id
        - OriginalSender
        - Subject
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the message thread.
          format: uuid
        OriginalSender:
          minLength: 1
          type: string
          description: The sender of the original message in the thread.
        Subject:
          minLength: 1
          type: string
          description: Subject of the message thread.
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the message thread in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the message thread in UTC timezone in ISO 8601 format.
          format: date-time
        IsResolved:
          type: boolean
      additionalProperties: false
      x-schema-id: MessageThread
    MessageThreadAddParameters:
      title: MessageThreadAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - OriginalSender
        - Subject
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        OriginalSender:
          minLength: 1
          type: string
          description: The sender of the original message in the thread.
        Subject:
          minLength: 1
          type: string
          description: Subject of the message thread.
      additionalProperties: false
      x-schema-id: MessageThreadAddParameters
    MessageThreadFilterParameters:
      title: MessageThreadFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        MessageThreadIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Message threads](https://mews-systems.gitbook.io/connector-api/operations/#message-thread). Required if no other filter is provided.'
          nullable: true
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: MessageThreadFilterParameters
    MessageThreadResult:
      title: MessageThreadResult
      required:
        - MessageThreads
      type: object
      properties:
        MessageThreads:
          type: array
          items:
            $ref: '#/components/schemas/MessageThread'
          description: The filtered message threads.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest message thread returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older message threads.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: MessageThreadResult
    MobileKeyData:
      title: MobileKeyData
      type: object
      properties:
        EndpointId:
          type: string
          description: Unique identifier of the mobile key endpoint.
          nullable: true
        Label:
          type: string
          description: Label of the mobile key.
          nullable: true
        Description:
          type: string
          description: Description of the mobile key.
          nullable: true
        RevokeMobileKeyId:
          type: string
          description: Unique identifier of the mobile key for revocation.
          nullable: true
      additionalProperties: false
      description: Mobile key command data
      x-schema-id: MobileKeyData
    MultipleAccountMergeParameters:
      title: MultipleAccountMergeParameters
      required:
        - AccessToken
        - AccountMergeParameters
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        AccountMergeParameters:
          maxItems: 10
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccountMergeParameter'
          description: Accounts to be merged.
      additionalProperties: false
      x-schema-id: MultipleAccountMergeParameters
    MultipleAccountNoteAddParameters:
      title: MultipleAccountNoteAddParameters
      required:
        - AccessToken
        - AccountNotes
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        AccountNotes:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccountNoteAddParameters'
          description: Account notes to be added.
      additionalProperties: false
      x-schema-id: MultipleAccountNoteAddParameters
    MultipleAccountNoteDeleteParameters:
      title: MultipleAccountNoteDeleteParameters
      required:
        - AccessToken
        - AccountNoteIds
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        AccountNoteIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the account notes to be deleted.
      additionalProperties: false
      x-schema-id: MultipleAccountNoteDeleteParameters
    MultipleAccountNoteUpdateParameters:
      title: MultipleAccountNoteUpdateParameters
      required:
        - AccessToken
        - AccountNoteUpdates
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        AccountNoteUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccountNoteUpdateParameters'
          description: Account notes to be updated.
      additionalProperties: false
      x-schema-id: MultipleAccountNoteUpdateParameters
    MultipleAccountUpdateParameters:
      title: MultipleAccountUpdateParameters
      required:
        - AccessToken
        - AccountUpdates
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        AccountUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccountUpdateParameters'
          description: Accounts to be updated.
      additionalProperties: false
      x-schema-id: MultipleAccountUpdateParameters
    MultipleAccountingItemsUpdateParameters:
      title: MultipleAccountingItemsUpdateParameters
      required:
        - AccessToken
        - AccountingItemUpdates
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        AccountingItemUpdates:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItemUpdateParameters'
          description: List of requested updates.
      additionalProperties: false
      x-schema-id: MultipleAccountingItemsUpdateParameters
    MultipleAddressAddParameters:
      title: MultipleAddressAddParameters
      required:
        - AccessToken
        - Addresses
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        Addresses:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AddressAddParameters'
          description: Collection of addresses to be created.
      additionalProperties: false
      x-schema-id: MultipleAddressAddParameters
    MultipleAddressUpdateParameters:
      title: MultipleAddressUpdateParameters
      required:
        - AccessToken
        - AddressUpdates
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        AddressUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AddressUpdateParameters'
          description: Collection of addresses to be updated.
      additionalProperties: false
      x-schema-id: MultipleAddressUpdateParameters
    MultipleAvailabilityBlockAddParameters:
      title: MultipleAvailabilityBlockAddParameters
      required:
        - AccessToken
        - AvailabilityBlocks
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        AvailabilityBlocks:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityBlockAddParameters'
          description: Availability blocks to be added.
      additionalProperties: false
      x-schema-id: MultipleAvailabilityBlockAddParameters
    MultipleAvailabilityBlockUpdateParameters:
      title: MultipleAvailabilityBlockUpdateParameters
      required:
        - AccessToken
        - AvailabilityBlocks
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        AvailabilityBlocks:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityBlockUpdateParameters'
          description: Availability blocks to be updated.
      additionalProperties: false
      x-schema-id: MultipleAvailabilityBlockUpdateParameters
    MultipleBillAddParameters:
      title: MultipleBillAddParameters
      required:
        - AccessToken
        - Bills
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        Bills:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BillAddParameters'
          description: Information about bills to be created.
      additionalProperties: false
      x-schema-id: MultipleBillAddParameters
    MultipleBillingAutomationAddParameters:
      title: Multiple billing automation add parameters
      required:
        - AccessToken
        - BillingAutomations
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        BillingAutomations:
          maxItems: 100
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BillingAutomationAddParameters'
          description: Parameters of the new billing automations to be created.
      additionalProperties: false
      x-schema-id: MultipleBillingAutomationAddParameters
    MultipleBillingAutomationUpdateParameters:
      title: Multiple billing automation update parameters
      required:
        - AccessToken
        - BillingAutomationUpdates
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        BillingAutomationUpdates:
          maxItems: 100
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BillingAutomationUpdateParameters'
          description: Details of the billing automations to be updated.
      additionalProperties: false
      x-schema-id: MultipleBillingAutomationUpdateParameters
    MultipleBillsUpdateParameters:
      title: MultipleBillsUpdateParameters
      required:
        - AccessToken
        - BillsUpdates
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        BillsUpdates:
          maxItems: 10
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BillUpdateParameters'
          description: Information about bills to be updated.
      additionalProperties: false
      x-schema-id: MultipleBillsUpdateParameters
    MultipleCompanyContractAddParameters:
      title: MultipleCompanyContractAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - TravelAgencyContracts
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        TravelAgencyContracts:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/TravelAgencyContractAddParameters'
          description: Information about travel agency contracts to be created.
      additionalProperties: false
      x-schema-id: MultipleCompanyContractAddParameters
    MultipleCompanyContractDeleteParameters:
      title: MultipleCompanyContractDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ServiceIds
        - TravelAgencyContractIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        TravelAgencyContractIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the Travel agency contract to delete.
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the travel agency contract belongs to.'
      additionalProperties: false
      x-schema-id: MultipleCompanyContractDeleteParameters
    MultipleCompanyContractUpdateParameters:
      title: MultipleCompanyContractUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - TravelAgencyContractUpdates
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        TravelAgencyContractUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/TravelAgencyContractUpdateParameters'
          description: Information about travel agency contracts to be updated.
      additionalProperties: false
      x-schema-id: MultipleCompanyContractUpdateParameters
    MultipleCompanyDeleteParameters:
      title: MultipleCompanyDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CompanyIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        CompanyIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the companies to be deleted.
      additionalProperties: false
      x-schema-id: MultipleCompanyDeleteParameters
    MultipleCreditCardParameters:
      title: MultipleCreditCardParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        CreditCardIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: MultipleCreditCardParameters
    MultipleCustomerParameters:
      title: MultipleCustomerParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        CustomerIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).'
      additionalProperties: false
      x-schema-id: MultipleCustomerParameters
    MultipleIdentityDocumentUpdateParameters:
      title: Multiple identity document update parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - IdentityDocuments
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        IdentityDocuments:
          maxItems: 10
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/IdentityDocumentUpdateParameters'
          description: Identity documents to be updated.
      additionalProperties: false
      x-schema-id: MultipleIdentityDocumentUpdateParameters
    MultipleLoyaltyMembershipAddParameters:
      title: MultipleLoyaltyMembershipAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyMemberships
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        LoyaltyMemberships:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyMembershipAddParameters'
          description: Loyalty memberships to be added.
      additionalProperties: false
      x-schema-id: MultipleLoyaltyMembershipAddParameters
    MultipleLoyaltyMembershipUpdateParameters:
      title: MultipleLoyaltyMembershipUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyMembershipUpdates
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        LoyaltyMembershipUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyMembershipUpdateParameters'
          description: Loyalty memberships to be updated.
      additionalProperties: false
      x-schema-id: MultipleLoyaltyMembershipUpdateParameters
    MultipleLoyaltyProgramAddParameters:
      title: MultipleLoyaltyProgramAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyPrograms
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        LoyaltyPrograms:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyProgramAddParameters'
          description: Loyalty programs to be added.
      additionalProperties: false
      x-schema-id: MultipleLoyaltyProgramAddParameters
    MultipleLoyaltyProgramUpdateParameters:
      title: MultipleLoyaltyProgramUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyProgramUpdates
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        LoyaltyProgramUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyProgramUpdateParameters'
          description: Loyalty programs to be updated.
      additionalProperties: false
      x-schema-id: MultipleLoyaltyProgramUpdateParameters
    MultipleLoyaltyTierAddParameters:
      title: MultipleLoyaltyTierAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyTiers
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ChainId:
          type: string
          description: 'Unique identifier of the chain. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        LoyaltyTiers:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyTierAddParameters'
          description: Loyalty tiers to be added.
      additionalProperties: false
      x-schema-id: MultipleLoyaltyTierAddParameters
    MultipleLoyaltyTierUpdateParameters:
      title: MultipleLoyaltyTierUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyTierUpdates
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        LoyaltyTierUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyTierUpdateParameters'
          description: Loyalty tiers to be updated.
      additionalProperties: false
      x-schema-id: MultipleLoyaltyTierUpdateParameters
    MultipleMessageAddParameters:
      title: MultipleMessageAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Messages
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Messages:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/MessageAddParameters'
          description: Messages to be added.
      additionalProperties: false
      x-schema-id: MultipleMessageAddParameters
    MultiplePaymentRequestAddParameters:
      title: MultiplePaymentRequestAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - PaymentRequests
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        PaymentRequests:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PaymentRequestAddParameters'
          description: Payment requests to be added.
      additionalProperties: false
      x-schema-id: MultiplePaymentRequestAddParameters
    MultiplePaymentRequestCancelParameters:
      title: MultiplePaymentRequestCancelParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - PaymentRequestIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        PaymentRequestIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Identifiers of payment requests to be canceled.
      additionalProperties: false
      x-schema-id: MultiplePaymentRequestCancelParameters
    MultipleRateCapacityOffsetUpdateParameters:
      title: MultipleRateCapacityOffsetUpdateParameters
      required:
        - AccessToken
        - CapacityOffsetUpdates
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        CapacityOffsetUpdates:
          maxItems: 50
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RateCapacityOffsetUpdateParameters'
          description: A list of rate capacity offset updates to apply.
      additionalProperties: false
      description: Parameters for updating rate capacity offsets in an enterprise.
      x-schema-id: MultipleRateCapacityOffsetUpdateParameters
    MultipleReservationResult:
      title: MultipleReservationResult
      required:
        - ReservationIds
      type: object
      properties:
        ReservationIds:
          type: array
          items:
            type: string
            format: uuid
          description: Identifiers of the affected `Reservation` entities.
      additionalProperties: false
      x-schema-id: MultipleReservationResult
    MultipleReservationUpdateParameters:
      title: Reservation updates
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationId
        - ReservationUpdates
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the reservation.
          format: uuid
        ChannelNumber:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: 'Number of the reservation within the Channel (i.e. OTA, GDS, CRS, etc) in case the reservation group originates there (e.g. Booking.com confirmation number) (or `null` if the channel number should not be updated).'
          nullable: true
        StartUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Reservation start in UTC timezone in ISO 8601 format. (or `null` if the start time should not be updated).
          nullable: true
        EndUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Reservation end in UTC timezone in ISO 8601 format. (or `null` if the end time should not be updated).
          nullable: true
        ReleasedUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Date when the optional reservation is released in UTC timezone in ISO 8601 format. (or `null` if the release time should not be updated).
          nullable: true
        PersonCounts:
          title: Person counts update value
          allOf:
            - $ref: '#/components/schemas/ReservationUpdatePersonCountParameters'
          description: 'Number of people per age category the reservation is for. If supplied, the person counts will be replaced. (or `null` if the person counts should not be updated).'
          nullable: true
        AssignedResourceId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: 'Identifier of the assigned `Resource`. If the assigned resource is locked, see `AssignedResourceLocked` for updating the assigned resource. (`null` if the assigned resource should not be updated)'
          nullable: true
        RequestedCategoryId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidUpdateValue'
          description: Identifier of the requested `ResourceCategory` (or `null` if resource category should not be updated).
          nullable: true
        TravelAgencyId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the `Company` that mediated the reservation (or `null` if travel agency should not be updated).
          nullable: true
        CompanyId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the `Company` on behalf of which the reservation was made (or `null` if company should not be updated).
          nullable: true
        BusinessSegmentId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the reservation `BusinessSegment` (or `null` if the business segment should not be updated).
          nullable: true
        Purpose:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: '`Purpose` of the reservation (or `null` if the purpose should not be updated).'
          nullable: true
        RateId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidUpdateValue'
          description: Identifier of the reservation `Rate` (or `null` if the rate should not be updated).
          nullable: true
        CreditCardId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of `CreditCard` belonging to `Customer` who owns the reservation.  (or `null` if the credit card should not be updated).
          nullable: true
        TimeUnitPrices:
          title: Time unit amount update value
          allOf:
            - $ref: '#/components/schemas/ReservationUpdatePerUnitPriceParameters'
          description: Prices for time units of the reservation. E.g. prices for the first or second night. (or `null` if the unit amounts should not be updated).
          nullable: true
        BookerId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the `Customer` on whose behalf the reservation was made. (or `null` if the booker should not be updated).
          nullable: true
        AssignedResourceLocked:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Whether the reservation should be locked to the assigned `Resource`. To reassign the reservation to a new `Resource`, first set `AssignedResourceLocked` to `false` to unlock the resource. Then, assign the reservation to a new `Resource` by setting `AssignedResourceId` to the new resource ID. (`null` if the lock should not be updated)'
          nullable: true
        AvailabilityBlockId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Unique identifier of the `AvailabilityBlock` the reservation is assigned to.
          nullable: true
        Options:
          title: Reservations options parameters update values
          allOf:
            - $ref: '#/components/schemas/ReservationUpdateOptionsParameters'
          description: Options of the reservations.
          nullable: true
        ReservationUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ReservationUpdateParameters'
          description: Array of properties to be updated in each reservation specified.
        CheckOverbooking:
          type: boolean
          description: 'Indicates whether the system will check and prevent a booking being made in the case of an overbooking, i.e. where there is an insufficient number of resources available to meet the request.'
          nullable: true
          deprecated: true
          x-deprecatedMessage: The value will be ignored.
        CheckRateApplicability:
          type: boolean
          description: 'Indicates whether the system will check and prevent a booking being made using a restricted rate, e.g. a private rate. The default is true, i.e. the system will normally check for this unless the property is set to false.'
          nullable: true
          deprecated: true
          x-deprecatedMessage: The value will be ignored.
        Reprice:
          type: boolean
          description: 'Whether the price should be updated to latest value for date/rate/category combination set in Mews. If not specified, the reservation price is updated.'
          nullable: true
        ApplyCancellationFee:
          type: boolean
          description: 'Whether the cancellation fees should be applied according to rate cancellation policies. If not specified, the cancellation fees are applied.'
          nullable: true
        Reason:
          type: string
          description: Reason for updating the reservation. Required when updating the price of the reservation.
          nullable: true
      additionalProperties: false
      x-schema-id: MultipleReservationUpdateParameters
    MultipleResourceAccessTokenParameters:
      title: MultipleResourceAccessTokenParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ResourceAccessTokenParameters
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ResourceAccessTokenParameters:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ResourceAccessTokenParameters'
          description: 'Parameters of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).'
      additionalProperties: false
      x-schema-id: MultipleResourceAccessTokenParameters
    MultipleResourceAccessTokenUpdateParameters:
      title: MultipleResourceAccessTokenUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ResourceAccessTokenUpdates:
          type: array
          items:
            $ref: '#/components/schemas/ResourceAccessTokenUpdateParameters'
          description: 'Parameters of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).'
          nullable: true
      additionalProperties: false
      x-schema-id: MultipleResourceAccessTokenUpdateParameters
    MultipleResourceBlockAddParameters:
      title: MultipleResourceBlockAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ResourceBlocks
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ResourceBlocks:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ResourceBlockAddParameters'
          description: Resource block parameters.
      additionalProperties: false
      x-schema-id: MultipleResourceBlockAddParameters
    MultipleResourceUpdateParameters:
      title: MultipleResourceUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ResourceUpdates
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ResourceUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ResourceUpdateParameters'
          description: Resource updates.
      additionalProperties: false
      x-schema-id: MultipleResourceUpdateParameters
    MultipleRoutingRuleAddParameters:
      title: MultipleRoutingRuleAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - RoutingRules
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        RoutingRules:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RoutingRuleAddParameter'
          description: Collection of Routing rules to be added.
      additionalProperties: false
      x-schema-id: MultipleRoutingRuleAddParameters
    MultipleRoutingRuleUpdateParameters:
      title: MultipleRoutingRuleUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - RoutingRuleUpdates
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        RoutingRuleUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RoutingRuleUpdateParameters'
          description: Collection of Routing rules to be updated.
      additionalProperties: false
      x-schema-id: MultipleRoutingRuleUpdateParameters
    MultipleServiceOrderNoteAddParameters:
      title: MultipleServiceOrderNoteAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ServiceOrderNotes
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ServiceOrderNotes:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderNoteAddParameters'
          description: Notes to be added.
      additionalProperties: false
      x-schema-id: MultipleServiceOrderNoteAddParameters
    MultipleServiceOrderNoteUpdateParameters:
      title: MultipleServiceOrderNoteUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ServiceOrderNoteUpdates
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ServiceOrderNoteUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderNoteUpdateParameters'
          description: Notes to be updated.
      additionalProperties: false
      x-schema-id: MultipleServiceOrderNoteUpdateParameters
    MultipleVoucherAddParameters:
      title: MultipleVoucherAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - VoucherParameters
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        VoucherParameters:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/VoucherAddParameters'
          description: Vouchers to be added.
      additionalProperties: false
      x-schema-id: MultipleVoucherAddParameters
    MultipleVoucherCodeAddParameters:
      title: MultipleVoucherCodeAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - VoucherCodeParameters
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        VoucherCodeParameters:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/VoucherCodeAddParameters'
          description: Voucher codes to be added.
      additionalProperties: false
      x-schema-id: MultipleVoucherCodeAddParameters
    MultipleVoucherCodeDeleteParameters:
      title: MultipleVoucherCodeDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - VoucherCodeIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        VoucherCodeIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the voucher codes to be deleted.
      additionalProperties: false
      x-schema-id: MultipleVoucherCodeDeleteParameters
    MultipleVoucherDeleteParameters:
      title: MultipleVoucherDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - VoucherIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        VoucherIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the vouchers to be deleted.
      additionalProperties: false
      x-schema-id: MultipleVoucherDeleteParameters
    MultipleVoucherUpdateParameters:
      title: MultipleVoucherUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - VoucherUpdates
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        VoucherUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/VoucherUpdateParameters'
          description: Details of voucher updates.
      additionalProperties: false
      x-schema-id: MultipleVoucherUpdateParameters
    NextAction:
      title: Alternative payment next action
      required:
        - Discriminator
        - Value
      type: object
      properties:
        Discriminator:
          title: Payment next action discriminator
          allOf:
            - $ref: '#/components/schemas/NextActionTypeEnum'
          description: "Determines type of value.\n\nRedirectToUrl (Redirect customer to a URL where they can complete their payment.)"
          x-enumNames:
            - RedirectToUrl
          x-enumDescriptions:
            - Redirect customer to a URL where they can complete their payment.
        Value:
          minLength: 1
          type: string
          description: String value depending on `Type`.
      additionalProperties: false
      x-schema-id: NextAction
    NextActionTypeEnum:
      title: Payment next action discriminator
      enum:
        - RedirectToUrl
      type: string
      description: "\n\nRedirectToUrl (Redirect customer to a URL where they can complete their payment.)"
      x-enumNames:
        - RedirectToUrl
      x-enumDescriptions:
        - Redirect customer to a URL where they can complete their payment.
    ObjectData:
      type: object
      additionalProperties: false
    OccupancyStateEnum:
      title: Occupancy State
      enum:
        - Vacant
        - ReservedLocked
        - Reserved
        - InternalUse
        - OutOfOrder
      type: string
      description: "\n\nVacant\n\nReservedLocked\n\nReserved\n\nInternalUse\n\nOutOfOrder"
      x-enumNames:
        - Vacant
        - ReservedLocked
        - Reserved
        - InternalUse
        - OutOfOrder
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
    OldAddress:
      title: Address
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the address.
          format: uuid
        Line1:
          type: string
          description: First line of the address.
          nullable: true
        Line2:
          type: string
          description: Second line of the address.
          nullable: true
        City:
          type: string
          description: The city.
          nullable: true
        PostalCode:
          type: string
          description: Postal code.
          nullable: true
        CountryCode:
          type: string
          description: ISO 3166-1 code of the `Country`.
          nullable: true
        CountrySubdivisionCode:
          type: string
          description: 'ISO 3166-2 code of the administrative division, e.g. `DE-BW`.'
          nullable: true
        Latitude:
          type: number
          description: The latitude.
          format: double
          nullable: true
        Longitude:
          type: number
          description: The longitude.
          format: double
          nullable: true
      additionalProperties: false
      description: ''
      x-schema-id: OldAddress
    OldTaxation:
      title: OldTaxation
      type: object
      properties:
        Code:
          type: string
          nullable: true
        TaxEnvironmentCode:
          type: string
          nullable: true
          deprecated: true
        Name:
          type: string
          nullable: true
        LocalName:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: OldTaxation
    OrderAdditionOptions:
      title: OrderAdditionOptions
      type: object
      properties:
        DisableItemGrouping:
          type: boolean
      additionalProperties: false
      x-schema-id: OrderAdditionOptions
    OrderAdditionParameters:
      title: OrderAdditionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ServiceId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise). Required when using a [Portfolio Access Token](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ServiceId:
          type: string
          description: 'Identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) to be ordered.'
          format: uuid
        AccountId:
          type: string
          description: 'Identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) or [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) to be charged. Company billing may not be enabled for your integration.'
          format: uuid
          nullable: true
        CustomerId:
          type: string
          description: 'Identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) to be charged.  **Deprecated!**'
          format: uuid
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AccountId`.
        Options:
          title: OrderAdditionOptions
          allOf:
            - $ref: '#/components/schemas/OrderAdditionOptions'
          nullable: true
        ProductOrders:
          type: array
          items:
            $ref: '#/components/schemas/ProductOrderAdditionData'
          description: Parameters of the ordered products.
          nullable: true
        Items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemAdditionData'
          description: Parameters of the ordered custom items.
          nullable: true
        ConsumptionUtc:
          type: string
          description: 'Date and time of the order consumption in UTC timezone in ISO 8601 format. If not specified, current date and time is used. Please note, as order consumption is one-time event, the optional parameters StartUtc and EndUtc in [Product order parameters](https://mews-systems.gitbook.io/connector-api/operations/#product-order-parameters) should not be used.'
          format: date-time
          nullable: true
        Notes:
          type: string
          description: Additional notes of the order.
          nullable: true
        BusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        BillId:
          type: string
          description: 'Identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill) to which the created order will be assigned. The bill needs to be issued to the same account as the order.'
          format: uuid
          nullable: true
        LinkedReservationId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: OrderAdditionParameters
    OrderAdditionResult:
      title: OrderAdditionResult
      type: object
      properties:
        OrderId:
          type: string
          description: Unique identifier of the created order.
          format: uuid
        ChargeId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: OrderAdditionResult
    OrderItem:
      title: Order item
      required:
        - AccountingState
        - Amount
        - ConsumedUtc
        - CreatedUtc
        - CreatorProfileId
        - EnterpriseId
        - Id
        - Options
        - OriginalAmount
        - RevenueType
        - ServiceId
        - ServiceOrderId
        - Type
        - UnitAmount
        - UnitCount
        - UpdatedUtc
        - UpdaterProfileId
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the order item.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        AccountId:
          type: string
          description: 'Unique identifier of the account (for example [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)) the order item belongs to.'
          format: uuid
          nullable: true
        AccountType:
          allOf:
            - $ref: '#/components/schemas/AccountTypeEnum'
          description: "A discriminator specifying the [type of account](https://mews-systems.gitbook.io/connector-api/operations/accounts/#account-type), e.g. customer or company.\n\nCompany\n\nCustomer"
          nullable: true
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the order item is assigned to.'
          format: uuid
        ServiceOrderId:
          type: string
          description: 'Unique identifier of the [Service order](https://mews-systems.gitbook.io/connector-api/operations/serviceorders/#service-order) the order item is assigned to.'
          format: uuid
        Notes:
          type: string
          description: Additional notes.
          nullable: true
        BillId:
          type: string
          description: 'Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill) the order item is assigned to.'
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          description: 'Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category) the order item belongs to.'
          format: uuid
          nullable: true
        BillingName:
          type: string
          description: Name of the order item for billing purposes.
          nullable: true
        ExternalIdentifier:
          type: string
          description: Identifier of the entity from external system.
          nullable: true
        UnitCount:
          type: integer
          description: 'Unit count of item, i.e. the number of sub-items or units, if applicable.'
          format: int32
        UnitAmount:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: 'Unit amount of item, i.e. the amount of each individual sub-item or unit, if applicable.'
        Amount:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: Amount of item; note a negative amount represents a rebate or payment.
        OriginalAmount:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: Order item's original amount. Negative amount represents either rebate or a payment. Contains the earliest known value in conversion chain.
        RevenueType:
          title: Revenue type
          allOf:
            - $ref: '#/components/schemas/RevenueTypeEnum'
          description: "Revenue type of the item.\n\nService\n\nProduct\n\nAdditional"
          x-enumNames:
            - Service
            - Product
            - Additional
          x-enumDescriptions:
            - ''
            - ''
            - ''
        CreatorProfileId:
          type: string
          description: Unique identifier of the user who created the order item.
          format: uuid
        UpdaterProfileId:
          type: string
          description: Unique identifier of the user who updated the order item.
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the order item created in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the order item in UTC timezone in ISO 8601 format.
          format: date-time
        ConsumedUtc:
          minLength: 1
          type: string
          description: Date and time of the item consumption in UTC timezone in ISO 8601 format.
          format: date-time
        CanceledUtc:
          type: string
          description: Cancellation date and time of the order item in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        ClosedUtc:
          type: string
          description: Date and time of the item bill closure in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        StartUtc:
          type: string
          description: Start of the order item in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        ClaimedUtc:
          type: string
          description: Date and time when the order item was claimed in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        AccountingState:
          title: Order item accounting state
          allOf:
            - $ref: '#/components/schemas/AccountingStateEnum'
          description: "Accounting state of the order item.\n\nOpen (Order items which carry a non-zero value, are open, and have not been closed on a bill or invoice.)\n\nClosed (Order items which carry a non-zero value and have been closed on a bill or invoice.)\n\nInactive (Order items which are either of zero value and have not been canceled, if the state of the payment item is Pending or Failed, or items of optional reservations. Until the reservation is confirmed, all its accounting items are Inactive.)\n\nCanceled (Order items which have been canceled, regardless of whether the item is of zero value.)"
          x-enumNames:
            - Open
            - Closed
            - Inactive
            - Canceled
          x-enumDescriptions:
            - 'Order items which carry a non-zero value, are open, and have not been closed on a bill or invoice.'
            - Order items which carry a non-zero value and have been closed on a bill or invoice.
            - 'Order items which are either of zero value and have not been canceled, if the state of the payment item is Pending or Failed, or items of optional reservations. Until the reservation is confirmed, all its accounting items are Inactive.'
            - 'Order items which have been canceled, regardless of whether the item is of zero value.'
        Type:
          title: Order item type
          allOf:
            - $ref: '#/components/schemas/OrderItemTypeEnum'
          description: "Order item type, e.g. whether product order or space order.\n\nCancellationFee\n\nNightRebate\n\nProductOrderRebate\n\nAdditionalExpenseRebate\n\nDeposit\n\nExchangeRateDifference\n\nCustomItem\n\nServiceCharge\n\nCityTax\n\nCityTaxDiscount\n\nSpaceOrder\n\nProductOrder\n\nSurcharge\n\nTaxCorrection\n\nResourceUpgradeFee\n\nInvoiceFee\n\nMulticurrencyFee\n\nAllowanceDiscount\n\nAllowanceBreakage\n\nAllowanceContraBreakage"
          x-enumNames:
            - CancellationFee
            - NightRebate
            - ProductOrderRebate
            - AdditionalExpenseRebate
            - Deposit
            - ExchangeRateDifference
            - CustomItem
            - ServiceCharge
            - CityTax
            - CityTaxDiscount
            - SpaceOrder
            - ProductOrder
            - Surcharge
            - TaxCorrection
            - ResourceUpgradeFee
            - InvoiceFee
            - MulticurrencyFee
            - AllowanceDiscount
            - AllowanceBreakage
            - AllowanceContraBreakage
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        Options:
          title: Order item options
          allOf:
            - $ref: '#/components/schemas/OrderItemOptions'
          description: Options of the order item.
        Data:
          title: Order item data
          allOf:
            - $ref: '#/components/schemas/OrderItemData'
          description: Additional order item data.
          nullable: true
        TaxExemptionReason:
          allOf:
            - $ref: '#/components/schemas/TaxExemptionReasonTypeEnum'
          description: "Specifies the reason an order item is exempt from tax.\n\nIT_N1 (N1 - Escluse ex art.15)\n\nIT_N2_2 (N2.2 - Non soggette – altri casi)\n\nIT_N3_5 (N3.5 - Non imponibili – a seguito di dichiarazioni d’intento)\n\nIT_N4 (N4 - Esenti)\n\nIT_N5 (N5 - Regime del margine / IVA non esposta in fattura)\n\nPL_ZW (ZW - Zwolniony)\n\nPL_NP (NP - Nie podlega)"
          nullable: true
        TaxExemptionLegalReference:
          type: string
          description: Legal reference that states why this order item is exempt from tax.
          nullable: true
      additionalProperties: false
      x-schema-id: OrderItem
    OrderItemAdditionData:
      title: OrderItemAdditionData
      required:
        - Name
        - UnitAmount
        - UnitCount
      type: object
      properties:
        Name:
          minLength: 1
          type: string
        UnitCount:
          type: integer
          format: int32
        UnitAmount:
          title: Amount parameters
          allOf:
            - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        Category:
          title: AccountingCategoryParameters
          allOf:
            - $ref: '#/components/schemas/AccountingCategoryParameters'
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AccountingCategoryId`.
        ExternalIdentifier:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: OrderItemAdditionData
    OrderItemAllowanceDiscountData:
      title: Allowance discount data
      required:
        - AllowanceProductOrderItemId
        - DiscountedOrderItemId
      type: object
      properties:
        DiscountedOrderItemId:
          type: string
          description: 'Unique identifier of [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item) which has been discounted by current item.'
          format: uuid
        AllowanceProductOrderItemId:
          type: string
          description: 'Unique identifier of the allowance product [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item) which credit has been consumed by current item.'
          format: uuid
      additionalProperties: false
      x-schema-id: OrderItemAllowanceDiscountData
    OrderItemAllowanceProfitsData:
      title: Allowance profits data
      required:
        - AllowanceProductOrderItemId
        - AllowanceProfitType
      type: object
      properties:
        AllowanceProductOrderItemId:
          type: string
          description: 'Unique identifier of the allowance product [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item) which credit has been consumed by current item.'
          format: uuid
        AllowanceProfitType:
          allOf:
            - $ref: '#/components/schemas/AllowanceProfitTypeEnum'
          description: "Type of allowance profit.\n\nAllowanceBreakage (Profit of the allowance product.)\n\nAllowanceContraBreakage (Accounting balance for profit of the allowance product.)\n\nAllowanceLoss (Loss of the allowance product.)\n\nAllowanceContraLoss (Accounting balance for loss of the allowance product.)"
      additionalProperties: false
      x-schema-id: OrderItemAllowanceProfitsData
    OrderItemData:
      title: Order item data
      type: object
      properties:
        Discriminator:
          title: Order item data discriminator
          allOf:
            - $ref: '#/components/schemas/OrderItemDataDiscriminatorEnum'
          description: "Discriminator pointing to the fields within this object that contains additional data.\n\nRebate (Rebate.)\n\nProduct (Product.)\n\nAllowanceDiscount (Allowance discount.)\n\nAllowanceProfits (Allowance profits.)"
          x-enumNames:
            - Rebate
            - Product
            - AllowanceDiscount
            - AllowanceProfits
          x-enumDescriptions:
            - Rebate.
            - Product.
            - Allowance discount.
            - Allowance profits.
        Rebate:
          title: Rebate data
          allOf:
            - $ref: '#/components/schemas/OrderItemRebateData'
          description: Contains additional data in the case of rebate item.
          nullable: true
        Product:
          title: Product data
          allOf:
            - $ref: '#/components/schemas/OrderItemProductData'
          description: Contains additional data in the case of product item.
          nullable: true
        AllowanceDiscount:
          title: Allowance discount data
          allOf:
            - $ref: '#/components/schemas/OrderItemAllowanceDiscountData'
          description: Contains additional data in the case of allowance discount item.
          nullable: true
        AllowanceProfits:
          title: Allowance profits data
          allOf:
            - $ref: '#/components/schemas/OrderItemAllowanceProfitsData'
          description: Contains additional data in the case of allowance profits item.
          nullable: true
      additionalProperties: false
      description: Additional order item data.
      x-schema-id: OrderItemData
    OrderItemDataDiscriminatorEnum:
      title: Order item data discriminator
      enum:
        - Rebate
        - Product
        - AllowanceDiscount
        - AllowanceProfits
      type: string
      description: "\n\nRebate (Rebate.)\n\nProduct (Product.)\n\nAllowanceDiscount (Allowance discount.)\n\nAllowanceProfits (Allowance profits.)"
      x-enumNames:
        - Rebate
        - Product
        - AllowanceDiscount
        - AllowanceProfits
      x-enumDescriptions:
        - Rebate.
        - Product.
        - Allowance discount.
        - Allowance profits.
    OrderItemFilterParameters:
      title: OrderItemFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        OrderItemIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Order items](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item). Required if no other filter is provided.'
          nullable: true
        AccountIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of specific `Accounts` to which the order items belong to. Required if no other filter is provided.
          nullable: true
        ServiceOrderIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the service orders ([product service orders](https://mews-systems.gitbook.io/connector-api/operations/productserviceorders/#product-service-order) or [reservations](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-ver-2023-06-06)). Required if no other filter is provided.'
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service). Required if no other filter is provided.'
          nullable: true
        BillIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Bills](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill) to which order item is assigned. Required if no other filter is provided.'
          nullable: true
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: 'Interval in which the [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item) was created. Required if no other filter is provided.'
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: 'Interval in which the [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item) was updated. Required if no other filter is provided.'
          nullable: true
          x-max-interval-in-months: 3
        ConsumedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: 'Interval in which the [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item) was consumed. Required if no other filter is provided.'
          nullable: true
          x-max-interval-in-months: 3
        CanceledUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: 'Interval in which the [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item) was canceled. Required if no other filter is provided.'
          nullable: true
          x-max-interval-in-months: 3
        ClosedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: 'Interval in which the [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item) was closed. Required if no other filter is provided.'
          nullable: true
          x-max-interval-in-months: 3
        Currency:
          type: string
          description: 'ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency) the item costs should be converted to.'
          format: currency
          nullable: true
        AccountingStates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccountingStateEnum'
          description: Accounting state of the item.
          nullable: true
        Types:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/OrderItemTypeEnum'
          description: 'Order item type, e.g. whether product order or space order.'
          nullable: true
      additionalProperties: false
      x-schema-id: OrderItemFilterParameters
    OrderItemOld:
      title: Order item
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the item.
          format: uuid
        AccountId:
          type: string
          description: 'Unique identifier of the account (for example [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)) the item belongs to.'
          format: uuid
          nullable: true
        OrderId:
          type: string
          description: 'Unique identifier of the order (or [Reservation](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-ver-2023-06-06) which is a special type of order) the item belongs to.'
          format: uuid
        BillId:
          type: string
          description: 'Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill) the item is assigned to.'
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          description: 'Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category) the item belongs to.'
          format: uuid
          nullable: true
        UnitCount:
          type: integer
          description: 'Unit count of item, i.e. the number of sub-items or units, if applicable.'
          format: int32
        UnitAmount:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: ''
          nullable: true
        Amount:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
        OriginalAmount:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
        RevenueType:
          type: string
          description: Revenue type of the item.
          nullable: true
        CreatorProfileId:
          type: string
          format: uuid
        UpdaterProfileId:
          type: string
          format: uuid
        CreatedUtc:
          type: string
          format: date
          nullable: true
        UpdatedUtc:
          type: string
          format: date
          nullable: true
        ConsumedUtc:
          type: string
          description: Date and time of the item consumption in UTC timezone in ISO 8601 format.
          format: date
          nullable: true
        CanceledUtc:
          type: string
          format: date
          nullable: true
        ClosedUtc:
          type: string
          description: Date and time of the item bill closure in UTC timezone in ISO 8601 format.
          format: date
          nullable: true
        StartUtc:
          type: string
          format: date
          nullable: true
        AccountingState:
          type: string
          description: Accounting state of the item.
          nullable: true
        Data:
          title: Data
          type: object
          properties:
            Discriminator:
              $ref: '#/components/schemas/OrderItemTypeOld'
            Value:
              oneOf:
                - $ref: '#/components/schemas/RebateOrderItemData'
                - $ref: '#/components/schemas/ProductOrderItemData'
          description: Additional data specific to particular order item.
          x-coproduct: true
          x-schema-id: OrderItemOldDataCoproductOfOrderItemTypeOld
      additionalProperties: false
      x-schema-id: OrderItemOld
    OrderItemOptions:
      title: Order item options
      required:
        - CanceledWithReservation
      type: object
      properties:
        CanceledWithReservation:
          type: boolean
          description: Order item was canceled with reservation cancellation.
      additionalProperties: false
      description: Options of the order item.
      x-schema-id: OrderItemOptions
    OrderItemProductData:
      title: Product data
      required:
        - ProductId
      type: object
      properties:
        ProductId:
          type: string
          description: 'Unique identifier of the [Product](https://mews-systems.gitbook.io/connector-api/operations/products/#product).'
          format: uuid
        AgeCategoryId:
          type: string
          description: 'Unique identifier of the [Age Category](https://mews-systems.gitbook.io/connector-api/operations/agecategories/#age-category).'
          format: uuid
          nullable: true
        ProductType:
          allOf:
            - $ref: '#/components/schemas/ProductTypeEnum'
          description: "Type of Product, e.g. whether allowance or product.\n\nProduct\n\nAllowance"
          nullable: true
      additionalProperties: false
      x-schema-id: OrderItemProductData
    OrderItemRebateData:
      title: Rebate data
      required:
        - ProductId
        - RebatedItemId
      type: object
      properties:
        ProductId:
          type: string
          description: 'Unique identifier of the [Product](https://mews-systems.gitbook.io/connector-api/operations/products/#product) of the original rebated [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item).'
          format: uuid
        RebatedItemId:
          type: string
          description: 'Unique identifier of [Order item](https://mews-systems.gitbook.io/connector-api/operations/orderitems/#order-item) which has been rebated by current item.'
          format: uuid
      additionalProperties: false
      x-schema-id: OrderItemRebateData
    OrderItemResult:
      title: OrderItemResult
      required:
        - OrderItems
      type: object
      properties:
        OrderItems:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          description: Set of requested order items.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest order item returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older order items.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: OrderItemResult
    OrderItemTypeEnum:
      title: Order item type
      enum:
        - CancellationFee
        - NightRebate
        - ProductOrderRebate
        - AdditionalExpenseRebate
        - Deposit
        - ExchangeRateDifference
        - CustomItem
        - ServiceCharge
        - CityTax
        - CityTaxDiscount
        - SpaceOrder
        - ProductOrder
        - Surcharge
        - TaxCorrection
        - ResourceUpgradeFee
        - InvoiceFee
        - MulticurrencyFee
        - AllowanceDiscount
        - AllowanceBreakage
        - AllowanceContraBreakage
      type: string
      description: "\n\nCancellationFee\n\nNightRebate\n\nProductOrderRebate\n\nAdditionalExpenseRebate\n\nDeposit\n\nExchangeRateDifference\n\nCustomItem\n\nServiceCharge\n\nCityTax\n\nCityTaxDiscount\n\nSpaceOrder\n\nProductOrder\n\nSurcharge\n\nTaxCorrection\n\nResourceUpgradeFee\n\nInvoiceFee\n\nMulticurrencyFee\n\nAllowanceDiscount\n\nAllowanceBreakage\n\nAllowanceContraBreakage"
      x-enumNames:
        - CancellationFee
        - NightRebate
        - ProductOrderRebate
        - AdditionalExpenseRebate
        - Deposit
        - ExchangeRateDifference
        - CustomItem
        - ServiceCharge
        - CityTax
        - CityTaxDiscount
        - SpaceOrder
        - ProductOrder
        - Surcharge
        - TaxCorrection
        - ResourceUpgradeFee
        - InvoiceFee
        - MulticurrencyFee
        - AllowanceDiscount
        - AllowanceBreakage
        - AllowanceContraBreakage
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
    OrderItemTypeOld:
      enum:
        - CancellationFee
        - Rebate
        - Deposit
        - ExchangeRateDifference
        - CustomItem
        - Surcharge
        - SurchargeDiscount
        - SpaceOrder
        - ProductOrder
        - Other
        - TaxCorrection
        - ResourceUpgradeFee
        - InvoiceFee
      type: string
    OrderNote:
      title: Service order note
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the service order note.
          format: uuid
        OrderId:
          type: string
          description: Unique identifier of the `Service order` to which the Service Order Note belongs.
          format: uuid
        Text:
          type: string
          description: Content of the service order note.
          nullable: true
        Type:
          title: Service order note type
          allOf:
            - $ref: '#/components/schemas/OrderNoteTypeEnum'
          description: "A discriminator specifying the type of service order note, e.g. general or channel manager.\n\nGeneral\n\nChannelManager\n\nSpecialRequest"
          x-enumNames:
            - General
            - ChannelManager
            - SpecialRequest
          x-enumDescriptions:
            - ''
            - ''
            - ''
        CreatedUtc:
          type: string
          description: Creation date and time of the service order note in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        UpdatedUtc:
          type: string
          description: Last update date and time of the service order note in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: OrderNote
    OrderNoteTypeEnum:
      title: Service order note type
      enum:
        - General
        - ChannelManager
        - SpecialRequest
      type: string
      description: "\n\nGeneral\n\nChannelManager\n\nSpecialRequest"
      x-enumNames:
        - General
        - ChannelManager
        - SpecialRequest
      x-enumDescriptions:
        - ''
        - ''
        - ''
    Outlet:
      title: Outlet
      required:
        - CreatedUtc
        - EnterpriseId
        - Id
        - IsActive
        - Name
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the outlet.
          format: uuid
        IsActive:
          type: boolean
          description: Whether the outlet is still active.
        Name:
          minLength: 1
          type: string
          description: Name of the outlet.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the outlet in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the outlet in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: Outlet
    OutletBill:
      title: Outlet bill
      required:
        - ClosedUtc
        - EnterpriseId
        - Id
        - OutletId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the bill.
          format: uuid
        EnterpriseId:
          type: string
          description: Unique identifier of the Enterprise.
          format: uuid
        OutletId:
          type: string
          description: 'Unique identifier of the [Outlet](https://mews-systems.gitbook.io/connector-api/operations/outlets/#outlet) where the bill was issued.'
          format: uuid
        Number:
          type: string
          description: Number of the bill.
          nullable: true
        ClosedUtc:
          minLength: 1
          type: string
          description: Date and time of the bill closure in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the bill in UTC timezone in ISO 8601 format.
          format: date-time
        Notes:
          type: string
          description: Additional notes on the bill.
          nullable: true
      additionalProperties: false
      x-schema-id: OutletBill
    OutletBillParameters:
      title: OutletBillParameters
      required:
        - ClosedUtc
        - Items
        - Number
        - OutletId
      type: object
      properties:
        OutletId:
          type: string
          format: uuid
        Number:
          minLength: 1
          type: string
        ClosedUtc:
          minLength: 1
          type: string
        Items:
          type: array
          items:
            $ref: '#/components/schemas/OutletItemParameters'
        AccountId:
          type: string
          format: uuid
          nullable: true
        Notes:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: OutletBillParameters
    OutletFilterParameters:
      title: OutletFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        OutletIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the requested [Outlets](https://mews-systems.gitbook.io/connector-api/operations/#outlet).'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: OutletFilterParameters
    OutletItem:
      title: Outlet item
      required:
        - BillId
        - ConsumedUtc
        - CreatedUtc
        - EnterpriseId
        - Id
        - Type
        - UnitAmount
        - UnitCount
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the item.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        BillId:
          type: string
          description: 'Unique identifier of the [Outlet bill](https://mews-systems.gitbook.io/connector-api/operations/#outlet-bill) the item belongs to.'
          format: uuid
        AccountingCategoryId:
          type: string
          description: 'Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category) the item belongs to.'
          format: uuid
          nullable: true
        Type:
          $ref: '#/components/schemas/OutletItemType'
        Name:
          type: string
          description: Name of the item.
          nullable: true
        UnitCount:
          type: integer
          description: Unit count of the item.
          format: int32
        UnitAmount:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: Unit amount of the item.
        CreatedUtc:
          minLength: 1
          type: string
          description: Date and time of the item creation in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the item in UTC timezone in ISO 8601 format.
          format: date-time
        ConsumedUtc:
          minLength: 1
          type: string
          description: Date and time of the item consumption in UTC timezone in ISO 8601 format.
          format: date-time
        ExternalIdentifier:
          type: string
          description: An identifier of this item from another system.
          nullable: true
        Notes:
          type: string
          description: Additional notes.
          nullable: true
        PaymentCardPaymentId:
          type: string
          description: Unique identifier of the payment card `Payment` this item is linked to. This is only applicable to items where `Type` is `Payment`.
          format: uuid
          nullable: true
        UnitCost:
          title: Currency value (ver 2018-06-07)
          allOf:
            - $ref: '#/components/schemas/CurrencyValueOld'
          description: Total price of the reservation.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `UnitAmount` instead.
      additionalProperties: false
      x-schema-id: OutletItem
    OutletItemParameters:
      title: OutletItemParameters
      required:
        - ConsumedUtc
        - Name
        - UnitAmount
        - UnitCount
      type: object
      properties:
        Name:
          minLength: 1
          type: string
        UnitCount:
          type: integer
          format: int32
        UnitAmount:
          title: Amount parameters
          allOf:
            - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
        ConsumedUtc:
          minLength: 1
          type: string
          format: date-time
        Type:
          type: string
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        AccountingCategory:
          title: AccountingCategoryParameters
          allOf:
            - $ref: '#/components/schemas/AccountingCategoryParameters'
          nullable: true
        UnitCost:
          title: CostParameters
          allOf:
            - $ref: '#/components/schemas/CostParameters'
          nullable: true
          deprecated: true
      additionalProperties: false
      x-schema-id: OutletItemParameters
    OutletItemResult:
      title: OutletItemResult
      required:
        - OutletBills
        - OutletItems
      type: object
      properties:
        OutletItems:
          type: array
          items:
            $ref: '#/components/schemas/OutletItem'
          description: The outlet items.
        OutletBills:
          type: array
          items:
            $ref: '#/components/schemas/OutletBill'
          description: The outlet bills of the items.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest outlet item returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older outlet items.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: OutletItemResult
    OutletItemType:
      title: Outlet item type
      enum:
        - Revenue
        - NonRevenue
        - Payment
      type: string
      description: Type of the outlet item.
    OutletItemsFilterParameters:
      title: OutletItemsFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        Ids:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Outlet items](#outlet-item). If not specified, the operation returns data for all [Outlet items](#outlet-item) within scope of the Access Token.'
          nullable: true
        ConsumedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: 'Interval in which the [Outlet item](#outlet-item) was consumed. Required if no other filter is provided.'
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: 'Interval in which the [Outlet bill](#outlet-bill) was updated.'
          nullable: true
          x-max-interval-in-months: 3
        ClosedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: 'Interval in which the [Outlet bill](#outlet-bill) was closed.'
          nullable: true
          x-max-interval-in-months: 3
        Currency:
          type: string
          description: 'ISO-4217 code of the [Currency](#currency) the item costs should be converted to.'
          format: currency
          nullable: true
      additionalProperties: false
      x-schema-id: OutletItemsFilterParameters
    OutletResult:
      title: OutletResult
      required:
        - Outlets
      type: object
      properties:
        Outlets:
          type: array
          items:
            $ref: '#/components/schemas/Outlet'
          description: The outlets of the enterprise.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: OutletResult
    Parameters:
      title: Parameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
      additionalProperties: false
      x-schema-id: Parameters
    ParentProductCategory:
      title: Parent product category
      required:
        - Id
        - Names
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the product category.
          format: uuid
        Names:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the name.
          x-schema-id: LocalizedStrings
      additionalProperties: false
      description: ''
      x-schema-id: ParentProductCategory
    PassportScannerCommandData:
      title: Passport scanner command data
      type: object
      allOf:
        - $ref: '#/components/schemas/DeviceCommandData'
      properties:
        PassportScannerId:
          type: string
          description: Identifier of the passport scanner.
          nullable: true
        CustomerId:
          type: string
          description: Unique identifier of the `Customer` who should be processed.
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the reservation whose companions should be processed.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: PassportScannerCommandData
    PaxCount:
      title: PaxCount
      required:
        - PersonCount
        - UnitCount
      type: object
      properties:
        PersonCount:
          type: integer
          description: Predicted guest count that will be assigned to the Resource. The guest count must fit within the Resource Category maximum capacity.
          format: int32
        UnitCount:
          type: integer
          description: Positive number of adjustments that are assigned to `PersonCount`. The sum of all `UnitCount` in `PaxCounts` should match the adjustment value applied to the interval.
          format: int32
      additionalProperties: false
      x-schema-id: PaxCount
    Payment:
      title: Payment
      required:
        - AccountId
        - AccountingState
        - Amount
        - CreatedUtc
        - EnterpriseId
        - Id
        - OriginalAmount
        - SettlementUtc
        - State
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the payment.
          format: uuid
        EnterpriseId:
          type: string
          description: Unique identifier of the `Enterprise`.
          format: uuid
        AccountId:
          type: string
          description: Unique identifier of the account (for example `Customer`) the payment belongs to.
          format: uuid
        AccountType:
          anyOf:
            - $ref: '#/components/schemas/AccountType'
          description: 'A discriminator specifying the account type, e.g. `Customer` or `Company`.'
          nullable: true
        BillId:
          type: string
          description: Unique identifier of the `Bill` the payment is assigned to.
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the `Reservation` the payment belongs to.
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          description: Unique identifier of the `AccountingCategory` the payment belongs to.
          format: uuid
          nullable: true
        Amount:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: 'Payment''s amount, negative amount represents either rebate or a payment.'
        OriginalAmount:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: 'Payment''s original amount, negative amount represents either rebate or a payment. Contains the earliest known value in conversion chain.'
        Notes:
          type: string
          description: Additional notes.
          nullable: true
        SettlementId:
          type: string
          description: Identifier of the settled payment from the external system (ApplePay/GooglePay).
          nullable: true
        ConsumedUtc:
          type: string
          description: Date and time of the item consumption in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        ClosedUtc:
          type: string
          description: Date and time of the payment bill closure in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        ChargedUtc:
          type: string
          description: Charged date and time of the payment in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the payment created in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the payment in UTC timezone in ISO 8601 format.
          format: date-time
        SettlementUtc:
          minLength: 1
          type: string
          description: Date and time of the payment settlement in UTC timezone in ISO 8601 format.
          format: date-time
        AccountingState:
          title: Order item accounting state
          allOf:
            - $ref: '#/components/schemas/AccountingStateEnum'
          description: "Accounting state of the payment.\n\nOpen (Order items which carry a non-zero value, are open, and have not been closed on a bill or invoice.)\n\nClosed (Order items which carry a non-zero value and have been closed on a bill or invoice.)\n\nInactive (Order items which are either of zero value and have not been canceled, if the state of the payment item is Pending or Failed, or items of optional reservations. Until the reservation is confirmed, all its accounting items are Inactive.)\n\nCanceled (Order items which have been canceled, regardless of whether the item is of zero value.)"
          x-enumNames:
            - Open
            - Closed
            - Inactive
            - Canceled
          x-enumDescriptions:
            - 'Order items which carry a non-zero value, are open, and have not been closed on a bill or invoice.'
            - Order items which carry a non-zero value and have been closed on a bill or invoice.
            - 'Order items which are either of zero value and have not been canceled, if the state of the payment item is Pending or Failed, or items of optional reservations. Until the reservation is confirmed, all its accounting items are Inactive.'
            - 'Order items which have been canceled, regardless of whether the item is of zero value.'
        State:
          title: Payment state
          allOf:
            - $ref: '#/components/schemas/PaymentStateEnum'
          description: "Payment state of the payment.\n\nCharged\n\nCanceled\n\nPending\n\nFailed\n\nVerifying"
          x-enumNames:
            - Charged
            - Canceled
            - Pending
            - Failed
            - Verifying
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
        Identifier:
          type: string
          description: Additional unique identifier of the payment.
          nullable: true
        Type:
          title: Payment type
          allOf:
            - $ref: '#/components/schemas/PaymentDiscriminatorEnum'
          description: "Payment type, e.g. whether credit card or cash.\n\nPayment\n\nCreditCardPayment\n\nAlternativePayment\n\nCashPayment\n\nInvoicePayment\n\nExternalPayment\n\nGhostPayment\n\nTaxDeductedPayment"
          x-enumNames:
            - Payment
            - CreditCardPayment
            - AlternativePayment
            - CashPayment
            - InvoicePayment
            - ExternalPayment
            - GhostPayment
            - TaxDeductedPayment
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
        Kind:
          allOf:
            - $ref: '#/components/schemas/PaymentKindEnum'
          description: "Payment kind, e.g. whether payment or refund. Value provided only for payments processed by Mews Payments.\n\nPayment\n\nChargeback\n\nChargebackReversal\n\nRefund"
          nullable: true
        Data:
          title: Payment data
          allOf:
            - $ref: '#/components/schemas/PaymentData'
          description: Additional payment data.
          nullable: true
      additionalProperties: false
      x-schema-id: Payment
    PaymentCardPaymentData:
      title: PaymentCardPaymentData
      type: object
      properties:
        PaymentCardId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentCardPaymentData
    PaymentCardStorage:
      title: Payment card storage
      required:
        - PublicKey
      type: object
      properties:
        PublicKey:
          minLength: 1
          type: string
          description: Key for accessing PCI proxy storage.
      additionalProperties: false
      description: ''
      x-schema-id: PaymentCardStorage
    PaymentCreditCardData:
      title: Credit card payment data
      type: object
      properties:
        CreditCardId:
          type: string
          description: Unique identifier of the payment card.
          format: uuid
          nullable: true
        Transaction:
          title: Credit card transaction
          allOf:
            - $ref: '#/components/schemas/CreditCardTransaction'
          description: The credit card payment transaction.
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentCreditCardData
    PaymentData:
      title: Payment data
      required:
        - Discriminator
      type: object
      properties:
        Discriminator:
          title: Payment data discriminator
          allOf:
            - $ref: '#/components/schemas/PaymentDataDiscriminatorEnum'
          description: "Discriminator pointing to the fields within this object that contains additional data.\n\nCreditCard\n\nInvoice\n\nExternal\n\nGhost"
          readOnly: true
          x-enumNames:
            - CreditCard
            - Invoice
            - External
            - Ghost
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        CreditCard:
          title: Credit card payment data
          allOf:
            - $ref: '#/components/schemas/PaymentCreditCardData'
          description: Contains additional data in the case of a card payment.
          nullable: true
        Invoice:
          title: Invoice payment data
          allOf:
            - $ref: '#/components/schemas/PaymentInvoiceData'
          description: Contains additional data in the case of an invoice payment.
          nullable: true
          readOnly: true
        External:
          title: External payment data
          allOf:
            - $ref: '#/components/schemas/PaymentExternalData'
          description: Contains additional data in the case of an external payment.
          nullable: true
          readOnly: true
        Ghost:
          title: Ghost payment data
          allOf:
            - $ref: '#/components/schemas/PaymentGhostData'
          description: Contains additional data in the case of a ghost payment.
          nullable: true
          readOnly: true
      additionalProperties: false
      x-schema-id: PaymentData
    PaymentDataDiscriminatorEnum:
      title: Payment data discriminator
      enum:
        - CreditCard
        - Invoice
        - External
        - Ghost
      type: string
      description: "\n\nCreditCard\n\nInvoice\n\nExternal\n\nGhost"
      x-enumNames:
        - CreditCard
        - Invoice
        - External
        - Ghost
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
    PaymentDiscriminatorEnum:
      title: Payment type
      enum:
        - Payment
        - CreditCardPayment
        - AlternativePayment
        - CashPayment
        - InvoicePayment
        - ExternalPayment
        - GhostPayment
        - TaxDeductedPayment
      type: string
      description: "\n\nPayment\n\nCreditCardPayment\n\nAlternativePayment\n\nCashPayment\n\nInvoicePayment\n\nExternalPayment\n\nGhostPayment\n\nTaxDeductedPayment"
      x-enumNames:
        - Payment
        - CreditCardPayment
        - AlternativePayment
        - CashPayment
        - InvoicePayment
        - ExternalPayment
        - GhostPayment
        - TaxDeductedPayment
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
    PaymentExternalData:
      title: External payment data
      required:
        - Type
      type: object
      properties:
        Type:
          title: External payment type
          allOf:
            - $ref: '#/components/schemas/ExternalPaymentTypeEnum'
          description: "Type of the external payment. *Except for enterprises based in the French Legal Environment. `Unspecified` is considered as fraud.\n\nUnspecified (Unspecified (unavailable in French Legal Environment))\n\nBadDebts (Bad debts)\n\nBacs (Bacs payment)\n\nWireTransfer (Wire transfer)\n\nInvoice (Invoice)\n\nExchangeRateDifference (Exchange rate difference)\n\nComplimentary (Complimentary)\n\nReseller (Reseller)\n\nExchangeRoundingDifference (Exchange rounding difference)\n\nBarter (Barter)\n\nCommission (Commission)\n\nBankCharges (Bank charges)\n\nCrossSettlement (Cross settlement)\n\nCash (Cash)\n\nCreditCard (Credit card – deprecated, only for existing partners)\n\nPrepayment (Prepayment)\n\nCheque (Cheque)\n\nBancontact (Bancontact)\n\nIDeal (iDeal – deprecated, only for existing partners)\n\nPayPal (PayPal – deprecated, only for existing partners)\n\nGiftCard (Gift card)\n\nLoyaltyPoints (Loyalty points)\n\nChequeVacances (Chèque-Vacances)\n\nOnlinePayment (Online payment – deprecated, only for existing partners)\n\nCardCheck (Card check)\n\nPaymentHubRedirection (Payment hub redirection)\n\nVoucher (Voucher)\n\nMasterCard (MasterCard – deprecated, only for existing partners)\n\nVisa (Visa – deprecated, only for existing partners)\n\nAmex (American Express – deprecated, only for existing partners)\n\nDiscover (Discover – deprecated, only for existing partners)\n\nDinersClub (Diners Club – deprecated, only for existing partners)\n\nJcb (JCB – deprecated, only for existing partners)\n\nUnionPay (UnionPay – deprecated, only for existing partners)\n\nTwint (TWINT)\n\nReka (Reka)\n\nLoyaltyCard (Loyalty card)\n\nPosDiningAndSpaReward (POS Dining & Spa Reward)\n\nDirectDebit (Direct debit)\n\nDepositCheck (Deposit - check)\n\nDepositCash (Deposit - cash)\n\nDepositCreditCard (Deposit - credit card)\n\nDepositWireTransfer (Deposit - wire transfer)"
          x-enumNames:
            - Unspecified
            - BadDebts
            - Bacs
            - WireTransfer
            - Invoice
            - ExchangeRateDifference
            - Complimentary
            - Reseller
            - ExchangeRoundingDifference
            - Barter
            - Commission
            - BankCharges
            - CrossSettlement
            - Cash
            - CreditCard
            - Prepayment
            - Cheque
            - Bancontact
            - IDeal
            - PayPal
            - GiftCard
            - LoyaltyPoints
            - ChequeVacances
            - OnlinePayment
            - CardCheck
            - PaymentHubRedirection
            - Voucher
            - MasterCard
            - Visa
            - Amex
            - Discover
            - DinersClub
            - Jcb
            - UnionPay
            - Twint
            - Reka
            - LoyaltyCard
            - PosDiningAndSpaReward
            - DirectDebit
            - DepositCheck
            - DepositCash
            - DepositCreditCard
            - DepositWireTransfer
          x-enumDescriptions:
            - Unspecified (unavailable in French Legal Environment)
            - Bad debts
            - Bacs payment
            - Wire transfer
            - Invoice
            - Exchange rate difference
            - Complimentary
            - Reseller
            - Exchange rounding difference
            - Barter
            - Commission
            - Bank charges
            - Cross settlement
            - Cash
            - 'Credit card – deprecated, only for existing partners'
            - Prepayment
            - Cheque
            - Bancontact
            - 'iDeal – deprecated, only for existing partners'
            - 'PayPal – deprecated, only for existing partners'
            - Gift card
            - Loyalty points
            - Chèque-Vacances
            - 'Online payment – deprecated, only for existing partners'
            - Card check
            - Payment hub redirection
            - Voucher
            - 'MasterCard – deprecated, only for existing partners'
            - 'Visa – deprecated, only for existing partners'
            - 'American Express – deprecated, only for existing partners'
            - 'Discover – deprecated, only for existing partners'
            - 'Diners Club – deprecated, only for existing partners'
            - 'JCB – deprecated, only for existing partners'
            - 'UnionPay – deprecated, only for existing partners'
            - TWINT
            - Reka
            - Loyalty card
            - POS Dining & Spa Reward
            - Direct debit
            - Deposit - check
            - Deposit - cash
            - Deposit - credit card
            - Deposit - wire transfer
        ExternalIdentifier:
          type: string
          description: Identifier of the payment from external system.
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentExternalData
    PaymentFilterParameters:
      title: PaymentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        PaymentIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of specific `Payment` items. Required if no other filter is provided.
          nullable: true
        AccountIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of specific `Accounts` to which payments belong. Required if no other filter is provided.
          nullable: true
        BillIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of specific `Bill` items to which payments are assigned. Required if no other filter is provided.
          nullable: true
        ReservationIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of specific `Reservations` to which payments belong. Required if no other filter is provided.
          nullable: true
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Time interval during which the `Payment` was created. Required if no other filter is provided.
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Time interval during which the `Payment` was updated. Required if no other filter is provided.
          nullable: true
          x-max-interval-in-months: 3
        ChargedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Time interval during which the `Payment` was charged. Required if no other filter is provided.
          nullable: true
          x-max-interval-in-months: 3
        ClosedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Time interval during which the `Payment` was closed. Required if no other filter is provided.
          nullable: true
          x-max-interval-in-months: 3
        SettlementUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Payments` were settled.
          nullable: true
          x-max-interval-in-months: 3
        Currency:
          type: string
          description: ISO-4217 code of the `Currency` the item costs should be converted to.
          format: currency
          nullable: true
        AccountingStates:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccountingState'
          description: Accounting state of the item.
          nullable: true
        States:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PaymentState'
          description: Payment state of the item.
          nullable: true
        Type:
          allOf:
            - $ref: '#/components/schemas/PaymentDiscriminatorEnum'
          description: "Payment state of the item.\n\nPayment\n\nCreditCardPayment\n\nAlternativePayment\n\nCashPayment\n\nInvoicePayment\n\nExternalPayment\n\nGhostPayment\n\nTaxDeductedPayment"
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentFilterParameters
    PaymentGhostData:
      title: Ghost payment data
      required:
        - OriginalPaymentId
      type: object
      properties:
        OriginalPaymentId:
          type: string
          description: Unique identifier of the original payment.
          format: uuid
      additionalProperties: false
      x-schema-id: PaymentGhostData
    PaymentInvoiceData:
      title: Invoice payment data
      required:
        - Type
      type: object
      properties:
        InvoiceId:
          type: string
          description: Unique identifier of the invoice `Bill`.
          format: uuid
          nullable: true
        Type:
          title: Invoice payment type
          allOf:
            - $ref: '#/components/schemas/InvoicePaymentTypeEnum'
          description: "Type of the invoice payment.\n\nReceivable\n\nBalancing\n\nUnderpaymentBalancingReceivable\n\nOverpaymentBalancingReceivable\n\nOverpayment"
          x-enumNames:
            - Receivable
            - Balancing
            - UnderpaymentBalancingReceivable
            - OverpaymentBalancingReceivable
            - Overpayment
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
      additionalProperties: false
      x-schema-id: PaymentInvoiceData
    PaymentItemOld:
      title: Payment item
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the item.
          format: uuid
        AccountId:
          type: string
          description: 'Unique identifier of the account (for example [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)) the item belongs to.'
          format: uuid
        BillId:
          type: string
          description: 'Unique identifier of the [Bill](https://mews-systems.gitbook.io/connector-api/operations/bills/#bill) the item is assigned to.'
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          description: 'Unique identifier of the [Accounting category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category) the item belongs to.'
          format: uuid
          nullable: true
        Amount:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
        OriginalAmount:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
        AmountDefault:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: ''
          nullable: true
        Notes:
          type: string
          description: Additional notes.
          nullable: true
        SettlementId:
          type: string
          description: Identifier of the settled payment from the external system (ApplePay/GooglePay).
          nullable: true
        ConsumedUtc:
          type: string
          description: Date and time of the item consumption in UTC timezone in ISO 8601 format.
          nullable: true
        ClosedUtc:
          type: string
          description: Date and time of the item bill closure in UTC timezone in ISO 8601 format.
          nullable: true
        AccountingState:
          type: string
          description: Accounting state of the item.
          nullable: true
        State:
          type: string
          description: Payment state of the item.
          nullable: true
        Identifier:
          type: string
          nullable: true
        Data:
          title: Data
          type: object
          properties:
            Discriminator:
              $ref: '#/components/schemas/PaymentType'
            Value:
              oneOf:
                - $ref: '#/components/schemas/PaymentCardPaymentData'
                - $ref: '#/components/schemas/InvoicePaymentData'
          description: Additional data specific to particular payment item.
          x-coproduct: true
          x-schema-id: PaymentItemOldDataCoproductOfPaymentType
      additionalProperties: false
      description: Payment item
      x-schema-id: PaymentItemOld
    PaymentKindEnum:
      title: Payment kind
      enum:
        - Payment
        - Chargeback
        - ChargebackReversal
        - Refund
      type: string
      description: "\n\nPayment\n\nChargeback\n\nChargebackReversal\n\nRefund"
      x-enumNames:
        - Payment
        - Chargeback
        - ChargebackReversal
        - Refund
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
    PaymentMethodsEnum:
      title: Available payment plan payment methods
      enum:
        - Ideal
        - PaymentCard
        - ApplePay
        - GooglePay
        - SepaDirectDebit
        - All
      type: string
      description: "\n\nIdeal (iDEAL)\n\nPaymentCard (Payment card)\n\nApplePay (Apple Pay)\n\nGooglePay (Google Pay)\n\nSepaDirectDebit (SEPA Direct Debit)\n\nAll"
      x-enumNames:
        - Ideal
        - PaymentCard
        - ApplePay
        - GooglePay
        - SepaDirectDebit
        - All
      x-enumDescriptions:
        - iDEAL
        - Payment card
        - Apple Pay
        - Google Pay
        - SEPA Direct Debit
        - ''
    PaymentPlanAddParameters:
      title: PaymentPlanAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Name
        - PaymentRequest
        - ReservationId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Reservation Id associated with the payment plan.
          format: uuid
        Name:
          minLength: 1
          type: string
          description: Name of the payment plan.
        PaymentRequest:
          allOf:
            - $ref: '#/components/schemas/PaymentPlanPaymentRequest'
          description: Data related to the payment request associated with the payment plan created.
        StartMonth:
          type: string
          description: 'Specifies the month when the payment plan begins collecting payments, in the ''YYYY-MM'' format. The month must be in the future and fall within the reservation period.'
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentPlanAddParameters
    PaymentPlanAddResult:
      title: PaymentPlanAddResult
      required:
        - PaymentRequestUrl
      type: object
      properties:
        PaymentRequestUrl:
          minLength: 1
          type: string
          description: Payment request URL associated with the created payment plan.
      additionalProperties: false
      x-schema-id: PaymentPlanAddResult
    PaymentPlanPaymentRequest:
      title: PaymentPlanPaymentRequest
      required:
        - Message
        - PaymentMethods
      type: object
      properties:
        PaymentMethods:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethodsEnum'
          description: Allowed payment methods to pay for the payment plan.
        Message:
          minLength: 1
          type: string
          description: Message in the payment request.
        Note:
          type: string
          description: Internal note for the payment request.
          nullable: true
        PaymentRequestType:
          allOf:
            - $ref: '#/components/schemas/PaymentPlanPaymentRequestTypeEnum'
          description: "Type of payment request to create. If not specified, defaults to `Payment`.\n\nPayment\n\nPaymentMethod"
          nullable: true
        PaymentRequestExpirationOffsetDays:
          type: integer
          description: 'Custom expiration date offset in days for the payment request. If not set, it''ll expire in one week, unless the first scheduled payment should be executed before. In that case, The expiration date will be set one second before the scheduled payment execution (the last possible moment when we can get the payment method).'
          format: int32
          nullable: true
        SendEmail:
          type: boolean
          description: Specifies whether a payment request email is sent to the customer. Defaults to true.
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentPlanPaymentRequest
    PaymentPlanPaymentRequestTypeEnum:
      title: Payment plan payment request type
      enum:
        - Payment
        - PaymentMethod
      type: string
      description: "\n\nPayment\n\nPaymentMethod"
      x-enumNames:
        - Payment
        - PaymentMethod
      x-enumDescriptions:
        - ''
        - ''
    PaymentRefundParameters:
      title: PaymentRefundParameters
      required:
        - AccessToken
        - AccountId
        - Client
        - ClientToken
        - PaymentId
        - Reason
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        PaymentId:
          type: string
          description: 'Unique identifier of specific [Payment](https://mews-systems.gitbook.io/connector-api/operations/payments/#payment).'
          format: uuid
        AccountId:
          type: string
          description: 'Unique identifier of the account (for example [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer)) the payment belongs to.'
          format: uuid
        Reason:
          minLength: 1
          type: string
          description: Refund reason.
        ValueToRefund:
          type: number
          description: 'Refund amount. If not provided, the whole payment will be refunded.'
          format: double
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentRefundParameters
    PaymentRefundResult:
      title: PaymentRefundResult
      required:
        - Amount
        - PaymentId
        - RefundId
        - State
        - Type
      type: object
      properties:
        PaymentId:
          type: string
          description: 'Unique identifier of specific [Payment](https://mews-systems.gitbook.io/connector-api/operations/payments/#payment).'
          format: uuid
        RefundId:
          type: string
          description: Unique identifier of refund.
          format: uuid
        Type:
          title: Refund type
          allOf:
            - $ref: '#/components/schemas/RefundTypeEnum'
          description: "Type of refund.\n\nCreditCardPayment\n\nAlternativePayment"
          x-enumNames:
            - CreditCardPayment
            - AlternativePayment
          x-enumDescriptions:
            - ''
            - ''
        Amount:
          title: Currency value (ver 2023-02-02)
          allOf:
            - $ref: '#/components/schemas/CurrencyValue'
          description: Absolute value of the fee.
        State:
          title: Payment state
          allOf:
            - $ref: '#/components/schemas/PaymentStateEnum'
          description: "Payment state of the refund.\n\nCharged\n\nCanceled\n\nPending\n\nFailed\n\nVerifying"
          x-enumNames:
            - Charged
            - Canceled
            - Pending
            - Failed
            - Verifying
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
      additionalProperties: false
      x-schema-id: PaymentRefundResult
    PaymentRequest:
      title: Payment request
      required:
        - AccountId
        - Amount
        - CreatedUtc
        - Description
        - EnterpriseId
        - ExpirationUtc
        - Id
        - Reason
        - State
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the payment request.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        AccountId:
          type: string
          description: 'Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) to which the payment request was issued.'
          format: uuid
        CustomerId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AccountId`
        ReservationGroupId:
          type: string
          description: 'Unique identifier of the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations#reservation-group).'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          format: uuid
          nullable: true
        State:
          $ref: '#/components/schemas/PaymentRequestState'
        Amount:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: ''
        Type:
          $ref: '#/components/schemas/PaymentRequestType'
        Reason:
          $ref: '#/components/schemas/PaymentRequestReason'
        ExpirationUtc:
          minLength: 1
          type: string
          description: Date and time of the payment request's expiration in ISO 8601 format.
          format: date-time
        Description:
          maxLength: 1000
          minLength: 1
          type: string
          description: Description of the payment request.
        Notes:
          maxLength: 1000
          type: string
          description: Payment request's notes.
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the payment request in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the payment request in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: PaymentRequest
    PaymentRequestAddParameters:
      title: PaymentRequestAddParameters
      required:
        - AccountId
        - Amount
        - Description
        - ExpirationUtc
        - Reason
        - Type
      type: object
      properties:
        AccountId:
          type: string
          format: uuid
        Amount:
          title: Currency value (ver 2023-02-02)
          allOf:
            - $ref: '#/components/schemas/CurrencyValue'
          description: Absolute value of the fee.
        Type:
          $ref: '#/components/schemas/PaymentRequestType'
        Reason:
          $ref: '#/components/schemas/PaymentRequestReason'
        ExpirationUtc:
          minLength: 1
          type: string
          format: date-time
        Description:
          maxLength: 1000
          minLength: 1
          type: string
        Notes:
          maxLength: 1000
          type: string
          nullable: true
        ReservationId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentRequestAddParameters
    PaymentRequestFilterParameters:
      title: PaymentRequestFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        PaymentRequestIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the requested [Payment requests](https://mews-systems.gitbook.io/connector-api/operations/#payment-request).'
          nullable: true
        AccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) accounts to which payment requests were issued.'
          nullable: true
        ReservationIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        States:
          type: array
          items:
            $ref: '#/components/schemas/PaymentRequestState'
          description: A list of payment request states to filter by.
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentRequestFilterParameters
    PaymentRequestReason:
      enum:
        - Other
        - PaymentCardMissing
        - PaymentCardDeclined
        - Deposit
        - Prepayment
        - Fee
        - RecurringPayment
      type: string
    PaymentRequestResult:
      title: PaymentRequestResult
      required:
        - PaymentRequests
      type: object
      properties:
        PaymentRequests:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/PaymentRequest'
          description: The filtered payment requests.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest payment request returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older payment requests.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentRequestResult
    PaymentRequestState:
      enum:
        - Pending
        - Completed
        - Canceled
        - Expired
      type: string
    PaymentRequestType:
      enum:
        - Payment
        - Preauthorization
      type: string
    PaymentResult:
      title: PaymentResult
      required:
        - Payments
      type: object
      properties:
        Payments:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/Payment'
          description: The list of filtered payments.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest payment returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of payments.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentResult
    PaymentState:
      title: Payment state
      enum:
        - Charged
        - Canceled
        - Pending
        - Failed
        - Verifying
      type: string
    PaymentStateEnum:
      title: Payment state
      enum:
        - Charged
        - Canceled
        - Pending
        - Failed
        - Verifying
      type: string
      description: "\n\nCharged\n\nCanceled\n\nPending\n\nFailed\n\nVerifying"
      x-enumNames:
        - Charged
        - Canceled
        - Pending
        - Failed
        - Verifying
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
    PaymentTerminalCommandAccountData:
      title: Account data for payment terminal command
      required:
        - Discriminator
      type: object
      properties:
        Discriminator:
          title: Account type
          allOf:
            - $ref: '#/components/schemas/AccountTypeEnum'
          description: "Type of the account.\n\nCompany\n\nCustomer"
          x-enumNames:
            - Company
            - Customer
          x-enumDescriptions:
            - ''
            - ''
        Customer:
          title: Customer data for payment terminal command.
          allOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandCustomerData'
          description: Customer data if the `Discriminator` is `Customer`.
          nullable: true
        Company:
          title: Company data for payment terminal command.
          allOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandCompanyData'
          description: Company data if the `Discriminator` is `Company`.
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentTerminalCommandAccountData
    PaymentTerminalCommandCompanyData:
      title: Company data for payment terminal command.
      required:
        - Name
      type: object
      properties:
        Name:
          minLength: 1
          type: string
          description: Name of the company.
      additionalProperties: false
      x-schema-id: PaymentTerminalCommandCompanyData
    PaymentTerminalCommandCustomerData:
      title: Customer data for payment terminal command.
      required:
        - FullName
      type: object
      properties:
        FullName:
          minLength: 1
          type: string
          description: Full name of the customer.
      additionalProperties: false
      x-schema-id: PaymentTerminalCommandCustomerData
    PaymentTerminalCommandData:
      title: Payment terminal command data
      required:
        - AccountData
        - AccountId
        - Amount
        - CustomerId
        - PaymentTerminalId
      type: object
      allOf:
        - $ref: '#/components/schemas/DeviceCommandData'
      properties:
        PaymentTerminalId:
          minLength: 1
          type: string
          description: Identifier of the payment terminal.
        CustomerId:
          type: string
          format: uuid
          deprecated: true
          x-deprecatedMessage: Use `AccountId` instead.
        AccountId:
          type: string
          description: Unique identifier of the account.
          format: uuid
        FullName:
          type: string
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use `AccountData.Customer.FullName`, if `AccountData.Discriminator` is `Customer`.'
        BillId:
          type: string
          description: Identifier of the bill.
          format: uuid
          nullable: true
        PaymentId:
          type: string
          description: Identifier of the `Payment`.
          format: uuid
          nullable: true
        PreauthorizationId:
          type: string
          description: Identifier of the `Preauthorization`.
          format: uuid
          nullable: true
        Amount:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: Amount to be processed.
        Fee:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: Payment fee to be processed.
          nullable: true
        PaymentTerminalData:
          type: string
          description: Custom JSON data.
          nullable: true
        AccountData:
          title: Account data for payment terminal command
          allOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandAccountData'
          description: Account data for the payment terminal command.
      additionalProperties: false
      x-schema-id: PaymentTerminalCommandData
    PaymentTerminalCommandParameters:
      title: PaymentTerminalCommandParameters
      required:
        - AccessToken
        - Amount
        - Client
        - ClientToken
        - CustomerId
        - TerminalId
        - Type
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        TerminalId:
          type: string
          description: Unique identifier of the payment terminal.
          format: uuid
        CustomerId:
          type: string
          description: Unique identifier of the `Customer`.
          format: uuid
        Type:
          allOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandTypeEnum'
          description: "The type of payment, e.g. `Preauthorization`.\n\nPayment\n\nPreauthorization"
        Amount:
          title: Currency value (ver 2018-06-07)
          allOf:
            - $ref: '#/components/schemas/CurrencyValueOld'
          description: Amount of the payment.
        BillId:
          type: string
          description: Unique identifier of the `Bill`.
          format: uuid
          nullable: true
        PaymentRequestId:
          type: string
          description: Unique identifier of the `PaymentRequest`.
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the `Reservation`.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentTerminalCommandParameters
    PaymentTerminalCommandTypeEnum:
      title: Payment type
      enum:
        - Payment
        - Preauthorization
      type: string
      description: "\n\nPayment\n\nPreauthorization"
      x-enumNames:
        - Payment
        - Preauthorization
      x-enumDescriptions:
        - ''
        - ''
    PaymentType:
      enum:
        - CreditCard
        - Invoice
        - Cash
        - Unspecified
        - BadDebts
        - WireTransfer
        - ExchangeRateDifference
        - ExchangeRoundingDifference
        - BankCharges
        - Cheque
        - Other
      type: string
    PayworksData:
      title: PayworksData
      type: object
      properties:
        MerchantIdentifier:
          type: string
          nullable: true
        MerchantSecretKey:
          type: string
          nullable: true
        ApiUrl:
          type: string
          nullable: true
        Descriptor:
          type: string
          nullable: true
        AcceptedCreditCardTypes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-schema-id: PayworksData
    PerUnitPriceParameters:
      title: Time unit amount parameters
      type: object
      properties:
        Index:
          type: integer
          description: Index of the unit. Indexing starts with `0`. E.g. the first night of the reservation has index `0`.
          format: int32
        Amount:
          title: Amount parameters
          allOf:
            - $ref: '#/components/schemas/AmountParameters'
          description: Amount of the unit.
          nullable: true
      additionalProperties: false
      x-schema-id: PerUnitPriceParameters
    PersonData:
      type: object
      additionalProperties: false
    PickupDistributionEnum:
      title: Pickup distribution
      enum:
        - AllInOneGroup
        - IndividualGroups
      type: string
      description: "\n\nAllInOneGroup (All created reservations in the block are added to the same reservation group.)\n\nIndividualGroups (Reservations can be picked up in multiple groups, with up to 750 reservations per group.)"
      x-enumNames:
        - AllInOneGroup
        - IndividualGroups
      x-enumDescriptions:
        - All created reservations in the block are added to the same reservation group.
        - 'Reservations can be picked up in multiple groups, with up to 750 reservations per group.'
    Preauthorization:
      title: Preauthorization
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the preauthorization.
          format: uuid
        CustomerId:
          type: string
          format: uuid
        CreditCardId:
          type: string
          description: Unique identifier of the credit card.
          format: uuid
          nullable: true
        Amount:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: ''
          nullable: true
        State:
          type: string
          description: State of the preauthorization.
          nullable: true
        Code:
          type: string
          description: Code of the preauthorization.
          nullable: true
        IsActive:
          type: boolean
      additionalProperties: false
      x-schema-id: Preauthorization
    PreauthorizationResult:
      title: PreauthorizationResult
      type: object
      properties:
        Preauthorizations:
          type: array
          items:
            $ref: '#/components/schemas/Preauthorization'
          description: 'Preauthorizations of the specified [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).'
          nullable: true
      additionalProperties: false
      x-schema-id: PreauthorizationResult
    PricingModeEnum:
      title: Pricing
      enum:
        - Gross
        - Net
      type: string
      description: "\n\nGross (The enterprise shows amount with gross prices.)\n\nNet (The enterprise shows amount with net prices.)"
      x-enumNames:
        - Gross
        - Net
      x-enumDescriptions:
        - The enterprise shows amount with gross prices.
        - The enterprise shows amount with net prices.
    PrinterCommandData:
      title: Printer command data
      required:
        - CopyCount
        - FileData
        - FileType
        - PrinterDriverName
        - PrinterName
        - PrinterPortName
      type: object
      allOf:
        - $ref: '#/components/schemas/DeviceCommandData'
      properties:
        CopyCount:
          type: integer
          description: Number of copies to be printed.
          format: int32
        FileType:
          minLength: 1
          type: string
          description: MIME type of the file to be printed (e.g. `application/pdf`).
        FileData:
          minLength: 1
          type: string
          description: Base64-encoded data of the file to be printed.
        PrinterName:
          minLength: 1
          type: string
          description: Name of the printer.
        PrinterDriverName:
          minLength: 1
          type: string
          description: Name of the printer driver.
        PrinterPortName:
          minLength: 1
          type: string
          description: Name of the printer port.
      additionalProperties: false
      x-schema-id: PrinterCommandData
    PrinterCommandParameters:
      title: PrinterCommandParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CopyCount
        - Data
        - PrinterId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        PrinterId:
          type: string
          description: Unique identifier of the `Printer` `Device` where to print the document.
          format: uuid
        Data:
          minLength: 1
          type: string
          description: Base64 encoded data of PDF document to print.
        CopyCount:
          type: integer
          description: Count of copies to be printed.
          format: int32
      additionalProperties: false
      x-schema-id: PrinterCommandParameters
    Product:
      title: Product
      required:
        - ChargingMode
        - Classifications
        - ConsumptionMoment
        - CreatedUtc
        - ExternalNames
        - Id
        - IsActive
        - Names
        - Options
        - Ordering
        - PostingMode
        - Price
        - Promotions
        - ServiceId
        - ShortNames
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the product.
          format: uuid
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).'
          format: uuid
        CategoryId:
          type: string
          description: Unique identifier of the Product category.
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          description: 'Unique identifier of [Accounting Category](https://mews-systems.gitbook.io/connector-api/operations/accountingcategories/#accounting-category).'
          format: uuid
          nullable: true
        IsActive:
          type: boolean
          description: Whether the product is still active.
        IsDefault:
          type: boolean
          deprecated: true
        Name:
          type: string
          description: Name of the product. **Deprecated!** Please use Names
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `Names` instead.
        Names:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the name.
          x-schema-id: LocalizedStrings
        ExternalName:
          type: string
          description: Name of the product meant to be displayed to customer. **Deprecated!** Please use ExternalNames
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `ExternalNames` instead.
        ExternalNames:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of external name.
          x-schema-id: LocalizedStrings
        ShortName:
          type: string
          description: Short name of the product. **Deprecated!** Please use ShortNames
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `ShortNames` instead.
        ShortNames:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of short name.
          x-schema-id: LocalizedStrings
        Description:
          type: string
          description: Description of the product. **Deprecated!** Please use Descriptions
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `Descriptions` instead.
        Descriptions:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of descriptions.
          nullable: true
          x-schema-id: LocalizedStrings
        Charging:
          title: Product charging mode
          allOf:
            - $ref: '#/components/schemas/ProductChargingModeEnum'
          description: "\n\nOnce\n\nPerTimeUnit\n\nPerPersonPerTimeUnit\n\nPerPerson"
          deprecated: true
          x-enumNames:
            - Once
            - PerTimeUnit
            - PerPersonPerTimeUnit
            - PerPerson
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        ChargingMode:
          title: Product charging mode
          allOf:
            - $ref: '#/components/schemas/ProductChargingModeEnum'
          description: "Charging mode of the product.\n\nOnce\n\nPerTimeUnit\n\nPerPersonPerTimeUnit\n\nPerPerson"
          x-enumNames:
            - Once
            - PerTimeUnit
            - PerPersonPerTimeUnit
            - PerPerson
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
        Posting:
          title: Product posting
          allOf:
            - $ref: '#/components/schemas/ProductPostingEnum'
          description: "\n\nOnce\n\nDaily"
          deprecated: true
          x-enumNames:
            - Once
            - Daily
          x-enumDescriptions:
            - ''
            - ''
        PostingMode:
          title: Product posting mode
          allOf:
            - $ref: '#/components/schemas/ProductPostingModeEnum'
          description: "Charging mode of the product.\n\nOnce\n\nPerTimeUnit"
          x-enumNames:
            - Once
            - PerTimeUnit
          x-enumDescriptions:
            - ''
            - ''
        Options:
          title: Product options
          allOf:
            - $ref: '#/components/schemas/ProductOptions'
          description: Options of the product.
        Promotions:
          allOf:
            - $ref: '#/components/schemas/Promotions'
          description: Promotions of the product.
        Classifications:
          title: Product classifications
          allOf:
            - $ref: '#/components/schemas/ProductClassifications'
          description: Classifications of the product.
        Price:
          title: Extended amount
          allOf:
            - $ref: '#/components/schemas/ExtendedAmount'
          description: Price representing price of the product.
        Pricing:
          title: Product pricing
          type: object
          properties:
            Discriminator:
              $ref: '#/components/schemas/ProductPricing'
            Value:
              oneOf:
                - $ref: '#/components/schemas/ExtendedAmount'
                - $ref: '#/components/schemas/RelativeProductPrice'
          deprecated: true
          x-coproduct: true
          x-schema-id: ProductPricingCoproductOfProductPricing
          x-deprecatedMessage: Use `Price` instead.
        ImageIds:
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifier of the product image.
          nullable: true
        Ordering:
          type: integer
          description: Order value for presentation purposes.
          format: int32
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the product from external system.
          nullable: true
        TaxExemptionReason:
          allOf:
            - $ref: '#/components/schemas/TaxExemptionReasonTypeEnum'
          description: "Specifies the reason a product is exempt from tax.\n\nIT_N1 (N1 - Escluse ex art.15)\n\nIT_N2_2 (N2.2 - Non soggette – altri casi)\n\nIT_N3_5 (N3.5 - Non imponibili – a seguito di dichiarazioni d’intento)\n\nIT_N4 (N4 - Esenti)\n\nIT_N5 (N5 - Regime del margine / IVA non esposta in fattura)\n\nPL_ZW (ZW - Zwolniony)\n\nPL_NP (NP - Nie podlega)"
          nullable: true
        TaxExemptionLegalReference:
          type: string
          description: Legal reference that states why this product is exempt from tax.
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the product in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the product in UTC timezone in ISO 8601 format.
          format: date-time
        ConsumptionMoment:
          title: Product consumption moment
          allOf:
            - $ref: '#/components/schemas/ProductConsumptionMomentEnum'
          description: "Consumption moment of the product.\n\nServiceOrderEnd\n\nServiceOrderStart\n\nPostingTimeUnit\n\nNextTimeUnit"
          x-enumNames:
            - ServiceOrderEnd
            - ServiceOrderStart
            - PostingTimeUnit
            - NextTimeUnit
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
      additionalProperties: false
      x-schema-id: Product
    ProductAgeCategoryPrice:
      title: Age category price
      required:
        - AgeCategoryId
        - Prices
      type: object
      properties:
        AgeCategoryId:
          type: string
          description: Unique identifier of the age category.
          format: uuid
        Prices:
          type: array
          items:
            $ref: '#/components/schemas/Amount'
          description: Prices of the product for the resource category in the covered dates.
      additionalProperties: false
      x-schema-id: ProductAgeCategoryPrice
    ProductCategory:
      title: Product category
      required:
        - CreatedUtc
        - Descriptions
        - EnterpriseId
        - Id
        - Names
        - Ordering
        - ServiceId
        - ShortNames
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the product category.
          format: uuid
        EnterpriseId:
          type: string
          description: Unique identifier of the enterprise to which the product category belongs.
          format: uuid
        ServiceId:
          type: string
          description: Unique identifier of the `Service` of the resource category.
          format: uuid
        Names:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the name.
          x-schema-id: LocalizedStrings
        ShortNames:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the short name.
          x-schema-id: LocalizedStrings
        Descriptions:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the description.
          x-schema-id: LocalizedStrings
        ParentProductCategory:
          title: Parent product category
          allOf:
            - $ref: '#/components/schemas/ParentProductCategory'
          description: 'Parent product category, if set.'
          nullable: true
        UpdatedUtc:
          minLength: 1
          type: string
          description: Date and time of the product category update in UTC timezone in ISO 8601 format.
          format: date-time
        CreatedUtc:
          minLength: 1
          type: string
          description: Date and time of the product category creation in UTC timezone in ISO 8601 format.
          format: date-time
        Ordering:
          type: integer
          description: 'Ordering of the category, lower number corresponds to lower category (note that neither uniqueness nor continuous sequence is guaranteed).'
          format: int32
      additionalProperties: false
      x-schema-id: ProductCategory
    ProductCategoryFilterParameters:
      title: ProductCategoryFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ProductCategoryIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `ProductCategory`.
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Service` to which the product categories belong.
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the product categories were updated.
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: ProductCategoryFilterParameters
    ProductCategoryResult:
      title: ProductCategoryResult
      required:
        - ProductCategories
      type: object
      properties:
        ProductCategories:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
          description: Product categories.
        Cursor:
          type: string
          description: Unique identifier of the last product category returned. This can be used in `Limitation` in a subsequent request to fetch the next batch of product categories.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ProductCategoryResult
    ProductChargingModeEnum:
      title: Product charging mode
      enum:
        - Once
        - PerTimeUnit
        - PerPersonPerTimeUnit
        - PerPerson
      type: string
      description: "\n\nOnce\n\nPerTimeUnit\n\nPerPersonPerTimeUnit\n\nPerPerson"
      x-enumNames:
        - Once
        - PerTimeUnit
        - PerPersonPerTimeUnit
        - PerPerson
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
    ProductClassifications:
      title: Product classifications
      type: object
      properties:
        Food:
          type: boolean
          description: Product is classified as food.
        Beverage:
          type: boolean
          description: Product is classified as beverage.
        Wellness:
          type: boolean
          description: Product is classified as wellness.
        CityTax:
          type: boolean
          description: Product is classified as city tax.
        Fee:
          type: boolean
          description: Product is classified as fee.
      additionalProperties: false
      description: ''
      x-schema-id: ProductClassifications
    ProductConsumptionMomentEnum:
      title: Product consumption moment
      enum:
        - ServiceOrderEnd
        - ServiceOrderStart
        - PostingTimeUnit
        - NextTimeUnit
      type: string
      description: "\n\nServiceOrderEnd\n\nServiceOrderStart\n\nPostingTimeUnit\n\nNextTimeUnit"
      x-enumNames:
        - ServiceOrderEnd
        - ServiceOrderStart
        - PostingTimeUnit
        - NextTimeUnit
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
    ProductDeleteParameters:
      title: Product delete parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ProductIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ProductIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the products to delete.
      additionalProperties: false
      x-schema-id: ProductDeleteParameters
    ProductFilterParameters:
      title: Product parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ProductIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the product.
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service).'
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the products were updated.
          nullable: true
          x-max-interval-in-months: 3
        IncludeDefault:
          type: boolean
          description: 'Whether or not to include default products for the service, i.e. products which are standard includes and not true extras. For example, the night''s stay would be the default product for a room reservation. These may be useful for accounting purposes but should not be displayed to customers for selection. If `ProductIds` are provided, `IncludeDefault` defaults to true, otherwise it defaults to false.'
          nullable: true
      additionalProperties: false
      x-schema-id: ProductFilterParameters
    ProductOptions:
      title: Product options
      required:
        - BillAsPackage
      type: object
      properties:
        BillAsPackage:
          type: boolean
          description: Product should be displayed as part of a package.
      additionalProperties: false
      description: ''
      x-schema-id: ProductOptions
    ProductOrderAdditionData:
      title: Product order parameters
      required:
        - ProductId
      type: object
      properties:
        ProductId:
          type: string
          format: uuid
        Count:
          type: integer
          format: int32
          nullable: true
        UnitAmount:
          title: Amount parameters
          allOf:
            - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
          nullable: true
        StartUtc:
          type: string
          format: date-time
          nullable: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
        ExternalIdentifier:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ProductOrderAdditionData
    ProductOrderItemData:
      title: ProductOrderItemData
      type: object
      properties:
        ProductId:
          type: string
          format: uuid
          nullable: true
        AgeCategoryId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ProductOrderItemData
    ProductPostingEnum:
      title: Product posting
      enum:
        - Once
        - Daily
      type: string
      description: "\n\nOnce\n\nDaily"
      x-enumNames:
        - Once
        - Daily
      x-enumDescriptions:
        - ''
        - ''
    ProductPostingModeEnum:
      title: Product posting mode
      enum:
        - Once
        - PerTimeUnit
      type: string
      description: "\n\nOnce\n\nPerTimeUnit"
      x-enumNames:
        - Once
        - PerTimeUnit
      x-enumDescriptions:
        - ''
        - ''
    ProductPriceUpdate:
      title: Product price update
      type: object
      properties:
        Value:
          type: number
          description: 'New value of the product on the interval. If not specified, removes all price adjustments within the interval.'
          format: double
          nullable: true
        FirstTimeUnitStartUtc:
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units), in UTC timezone ISO 8601 format.'
          format: date-time
          nullable: true
        LastTimeUnitStartUtc:
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units), in UTC timezone ISO 8601 format. The maximum size of time interval depends on the service''s time unit: 367 hours if hours, 367 days if days, or 24 months if months.'
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: ProductPriceUpdate
    ProductPriceUpdateParameters:
      title: Product price update parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - PriceUpdates
        - ProductId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ProductId:
          minLength: 1
          type: string
          description: Unique identifier of the `Product`.
          x-schema-id: HybridIdentifier
        PriceUpdates:
          maxItems: 100
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ProductPriceUpdate'
          description: Price adjustments for specific time intervals.
      additionalProperties: false
      x-schema-id: ProductPriceUpdateParameters
    ProductPricing:
      title: Product pricing data discriminator
      enum:
        - Absolute
        - Relative
      type: string
      description: ''
    ProductPricingFilterParameters:
      title: Product pricing filter parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - FirstTimeUnitStartUtc
        - LastTimeUnitStartUtc
        - ProductId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ProductId:
          type: string
          description: Unique identifier of the product.
          format: uuid
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/), in UTC timezone ISO 8601 format.'
          format: date-time
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/), in UTC timezone ISO 8601 format. The maximum size of time interval depends on the service''s [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/): 100 hours if hours, 100 days if days, or 24 months if months.'
          format: date-time
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
      additionalProperties: false
      x-schema-id: ProductPricingFilterParameters
    ProductPricingResult:
      title: Product pricing result
      required:
        - AgeCategoryPrices
        - BaseAmountPrices
        - ProductId
        - TimeUnitStartsUtc
      type: object
      properties:
        ProductId:
          type: string
          description: Unique identifier of the product.
          format: uuid
        TimeUnitStartsUtc:
          type: array
          items:
            type: string
          description: Set of all time units covered by the time interval; expressed in UTC timezone ISO 8601 format.
          format: date-time
        BaseAmountPrices:
          type: array
          items:
            $ref: '#/components/schemas/Amount'
          description: Base prices of the product for each time unit covered by the time interval.
        AgeCategoryPrices:
          type: array
          items:
            $ref: '#/components/schemas/ProductAgeCategoryPrice'
          description: Age category prices.
      additionalProperties: false
      x-schema-id: ProductPricingResult
    ProductResult:
      title: Product result
      required:
        - CustomerProducts
        - Products
      type: object
      properties:
        Products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          description: Products offered with the service.
        CustomerProducts:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          description: Products offered specifically to customers.
        Cursor:
          type: string
          description: Unique identifier of the last and hence oldest product returned. This can be used in `Limitation` in a subsequent request to fetch the next batch of older products.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ProductResult
    ProductServiceOrderFilterParameters:
      title: ProductServiceOrderFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ProductServiceOrderIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Product service order](https://mews-systems.gitbook.io/connector-api/operations/#product-service-order).'
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service).'
        AccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        LinkedReservationIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        States:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderState'
          description: A list of product service order states to filter by.
          nullable: true
      additionalProperties: false
      x-schema-id: ProductServiceOrderFilterParameters
    ProductServiceOrderResult:
      title: ProductServiceOrderResult
      required:
        - ProductServiceOrders
      type: object
      properties:
        ProductServiceOrders:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrder'
          description: The product service order of the enterprise.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ProductServiceOrderResult
    ProductTypeEnum:
      title: Product type
      enum:
        - Product
        - Allowance
      type: string
      description: "\n\nProduct\n\nAllowance"
      x-enumNames:
        - Product
        - Allowance
      x-enumDescriptions:
        - ''
        - ''
    ProfileData:
      title: Profile data
      required:
        - Discriminator
      type: object
      properties:
        Discriminator:
          $ref: '#/components/schemas/ProfileDataDiscriminator'
        EnterpriseProfile:
          title: Enterprise profile data
          allOf:
            - $ref: '#/components/schemas/EnterpriseProfileData'
          description: Enterprise profile data.
          nullable: true
      additionalProperties: false
      description: The profile data of the user who created or last updated the record.
      x-schema-id: ProfileData
    ProfileDataDiscriminator:
      title: Profile data discriminator
      enum:
        - Personal
        - Enterprise
        - Platform
        - Static
        - Integration
      type: string
    Promotions:
      title: Promotions
      required:
        - AfterCheckIn
        - AfterCheckOut
        - BeforeCheckIn
        - BeforeCheckOut
        - DuringCheckOut
        - DuringStay
      type: object
      properties:
        BeforeCheckIn:
          type: boolean
          description: Whether it can be promoted before check-in.
        AfterCheckIn:
          type: boolean
          description: Whether it can be promoted after check-in.
        DuringStay:
          type: boolean
          description: Whether it can be promoted during stay.
        BeforeCheckOut:
          type: boolean
          description: Whether it can be promoted before check-out.
        AfterCheckOut:
          type: boolean
          description: Whether it can be promoted after check-out.
        DuringCheckOut:
          type: boolean
          description: Whether it can be promoted during check-out.
      additionalProperties: false
      description: ''
      x-schema-id: Promotions
    Rate:
      title: Rate
      required:
        - GroupId
        - Id
        - IsActive
        - IsBaseRate
        - IsDefault
        - IsEnabled
        - IsPublic
        - Names
        - ServiceId
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the rate.
          format: uuid
        GroupId:
          type: string
          description: Unique identifier of `Rate Group` where the rate belongs.
          format: uuid
        ServiceId:
          type: string
          description: Unique identifier of the `Service`.
          format: uuid
        BaseRateId:
          type: string
          description: Unique identifier of the base `Rate`.
          format: uuid
          nullable: true
        IsBaseRate:
          type: boolean
          description: Indicates if this is a base rate.
        BusinessSegmentId:
          type: string
          description: Unique identifier of the `Business Segment`.
          format: uuid
          nullable: true
        IsActive:
          type: boolean
          description: Indicates if this rate is active.
        IsEnabled:
          type: boolean
          description: Indicates if this rate is currently available to customers.
        IsPublic:
          type: boolean
          description: Indicates if this rate is publicly available.
        IsDefault:
          type: boolean
          description: Indicates if this rate is the default rate for the service. Assigned automatically to the first rate of a service.
        Type:
          title: Rate type
          allOf:
            - $ref: '#/components/schemas/RateTypeEnum'
          description: "Type of the rate.\n\nPublic\n\nPrivate\n\nAvailabilityBlock"
          x-enumNames:
            - Public
            - Private
            - AvailabilityBlock
          x-enumDescriptions:
            - ''
            - ''
            - ''
        Name:
          type: string
          description: Name of the rate (in the default language).
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `Names` instead
        Names:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the name.
          x-schema-id: LocalizedStrings
        ShortName:
          type: string
          description: Short name of the rate (in the default language).
          nullable: true
        UpdatedUtc:
          minLength: 1
          type: string
          description: Interval in which the rates were updated.
          format: date-time
        ExternalNames:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the external name of the rate.
          nullable: true
          x-schema-id: LocalizedStrings
        Description:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the description of the rate.
          nullable: true
          x-schema-id: LocalizedStrings
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the rate from external system.
          nullable: true
        TaxExemptionReason:
          allOf:
            - $ref: '#/components/schemas/TaxExemptionReasonTypeEnum'
          description: "Specifies the reason a rate is exempt from tax.\n\nIT_N1 (N1 - Escluse ex art.15)\n\nIT_N2_2 (N2.2 - Non soggette – altri casi)\n\nIT_N3_5 (N3.5 - Non imponibili – a seguito di dichiarazioni d’intento)\n\nIT_N4 (N4 - Esenti)\n\nIT_N5 (N5 - Regime del margine / IVA non esposta in fattura)\n\nPL_ZW (ZW - Zwolniony)\n\nPL_NP (NP - Nie podlega)"
          nullable: true
        TaxExemptionLegalReference:
          type: string
          description: Legal reference that states why this rate is exempt from tax.
          nullable: true
      additionalProperties: false
      x-schema-id: Rate
    RateAddData:
      title: Rate parameters
      required:
        - Names
        - PricingType
        - RateGroupId
        - ServiceId
      type: object
      properties:
        ServiceId:
          minLength: 1
          type: string
          description: Unique identifier of the service.
          x-schema-id: HybridIdentifier
        RateGroupId:
          minLength: 1
          type: string
          description: Unique identifier of the rate group under which rate is assigned.
          x-schema-id: HybridIdentifier
        IsEnabled:
          type: boolean
          description: Whether the rate is available to customers. `false` will be used as a default when not provided.
          nullable: true
        Type:
          title: Rate Add Type
          allOf:
            - $ref: '#/components/schemas/RateAddTypeEnum'
          description: "Type of the rate.\n\nPublic\n\nPrivate"
          x-enumNames:
            - Public
            - Private
          x-enumDescriptions:
            - ''
            - ''
        AccountingCategoryId:
          type: string
          description: Unique identifier of the accounting category the rate belongs to.
          format: uuid
          nullable: true
        BusinessSegmentId:
          type: string
          description: Unique identifier of the business segment.
          format: uuid
          nullable: true
        Names:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the name of the rate.
          x-schema-id: LocalizedStrings
        ShortNames:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the short name of the rate.
          nullable: true
          x-schema-id: LocalizedStrings
        ExternalNames:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the external name of the rate.
          nullable: true
          x-schema-id: LocalizedStrings
        Descriptions:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the description.
          nullable: true
          x-schema-id: LocalizedStrings
        PricingType:
          title: Rate pricing discriminator
          allOf:
            - $ref: '#/components/schemas/RatePricingDiscriminatorEnum'
          description: "Discriminator in which field inside `Pricing` contains additional data.\n\nBaseRatePricing\n\nDependentRatePricing"
          x-enumNames:
            - BaseRatePricing
            - DependentRatePricing
          x-enumDescriptions:
            - ''
            - ''
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the rate from external system.
          nullable: true
        Pricing:
          title: Rate add pricing data parameters
          allOf:
            - $ref: '#/components/schemas/RateAddPricingDataParameters'
          description: Contains additional data about pricing of the rate.
          nullable: true
      additionalProperties: false
      x-schema-id: RateAddData
    RateAddOptions:
      title: RateAddOptions
      type: object
      properties:
        HidePriceFromGuest:
          type: boolean
        IsBonusPointsEligible:
          type: boolean
      additionalProperties: false
      x-schema-id: RateAddOptions
    RateAddParameters:
      title: Rate add parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Rates
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        Rates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RateAddData'
          description: Information about rates to be created.
      additionalProperties: false
      x-schema-id: RateAddParameters
    RateAddPricingDataParameters:
      title: Rate add pricing data parameters
      type: object
      properties:
        BaseRatePricing:
          title: Base rate pricing parameters (with occupancy adjustments)
          allOf:
            - $ref: '#/components/schemas/BaseRatePricingParametersWithOccupancyAdjustments'
          description: 'Additional data for rates with base rate pricing. Used when `PricingType` is `BaseRatePricing`. Defaults are applied if not specified: amount is set to 10000 in default Enterprise''s currency and with its default accommodation tax rate code.'
          nullable: true
        DependentRatePricing:
          title: Dependent rate pricing parameters
          allOf:
            - $ref: '#/components/schemas/DependentRatePricingParameters'
          description: Additional data for rate with dependent rate pricing. Required when `PricingType` is `DependentRatePricing`.
          nullable: true
      additionalProperties: false
      x-schema-id: RateAddPricingDataParameters
    RateAddResult:
      title: Rate add result
      type: object
      properties:
        Rates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/Rate'
          description: Rates that have been added.
          nullable: true
      additionalProperties: false
      x-schema-id: RateAddResult
    RateAddTypeEnum:
      title: Rate Add Type
      enum:
        - Public
        - Private
      type: string
      description: "\n\nPublic\n\nPrivate"
      x-enumNames:
        - Public
        - Private
      x-enumDescriptions:
        - ''
        - ''
    RateCapacityOffsetUpdateParameters:
      title: RateCapacityOffsetUpdateParameters
      required:
        - RateId
      type: object
      properties:
        RateId:
          type: string
          description: The unique identifier of the `Rate` to update.
          format: uuid
        NegativeOccupancyAdjustment:
          title: Decimal update value
          allOf:
            - $ref: '#/components/schemas/DecimalUpdateValue'
          description: Amount added to the price when occupancy is less than the Space Category Capacity. Use a negative value to provide a discount for under-occupancy. Set to 'null' if not updated.
          nullable: true
        ExtraOccupancyAdjustment:
          title: Decimal update value
          allOf:
            - $ref: '#/components/schemas/DecimalUpdateValue'
          description: Amount added to the price when the Space Category Capacity is exceeded.
          nullable: true
      additionalProperties: false
      x-schema-id: RateCapacityOffsetUpdateParameters
    RateDeleteParameters:
      title: RateDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - RateIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        RateIds:
          maxItems: 10
          minItems: 1
          type: array
          items:
            type: string
          description: Unique identifiers of the rates to be deleted.
          x-schema-id: HybridIdentifier
      additionalProperties: false
      x-schema-id: RateDeleteParameters
    RateExtent:
      title: Rate extent
      type: object
      properties:
        Rates:
          type: boolean
          description: Whether the response should contain rates.
          nullable: true
        RateGroups:
          type: boolean
          description: Whether the response should contain rate groups.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `rateGroups/getAll`
        AvailabilityBlockAssignments:
          type: boolean
          description: Whether the response should contain availability block assignments.
      additionalProperties: false
      description: Extent of data to be returned.
      x-schema-id: RateExtent
    RateFilterParameters:
      title: Rate filter parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        Extent:
          title: Rate extent
          allOf:
            - $ref: '#/components/schemas/RateExtent'
          description: 'Extent of data to be returned. If not specified, both `Rates` and `RateGroups` will be included.'
          nullable: true
        RateIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the requested [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate).'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which `Rate` was updated.
          nullable: true
          x-max-interval-in-months: 3
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) from which the rates are requested.'
        ExternalIdentifiers:
          maxItems: 1000
          type: array
          items:
            type: string
          description: 'Identifiers of [Rate](https://mews-systems.gitbook.io/connector-api/operations/#rate) from external systems.'
          nullable: true
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted, or both types of record. If not specified, both active and deleted will be returned.'
          nullable: true
      additionalProperties: false
      x-schema-id: RateFilterParameters
    RateForExtent:
      title: Rate for extent
      required:
        - GroupId
        - Id
        - IsActive
        - IsBaseRate
        - IsEnabled
        - IsPublic
        - Names
        - ServiceId
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the rate.
          format: uuid
        GroupId:
          type: string
          description: Unique identifier of `Rate Group` where the rate belongs.
          format: uuid
        ServiceId:
          type: string
          description: Unique identifier of the `Service`.
          format: uuid
        BaseRateId:
          type: string
          description: Unique identifier of the base `Rate`.
          format: uuid
          nullable: true
        IsBaseRate:
          type: boolean
          description: Whether the rate is a base rate.
        BusinessSegmentId:
          type: string
          description: Unique identifier of the `Business Segment`.
          format: uuid
          nullable: true
        IsActive:
          type: boolean
          description: Whether the rate is still active.
        IsEnabled:
          type: boolean
          description: Whether the rate is currently available to customers.
        IsPublic:
          type: boolean
          description: Whether the rate is publicly available.
        Type:
          title: Rate type
          allOf:
            - $ref: '#/components/schemas/RateTypeEnum'
          description: "Type of the rate.\n\nPublic\n\nPrivate\n\nAvailabilityBlock"
          x-enumNames:
            - Public
            - Private
            - AvailabilityBlock
          x-enumDescriptions:
            - ''
            - ''
            - ''
        Name:
          type: string
          description: Name of the rate (in the default language).
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `Names` instead
        Names:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the name.
          x-schema-id: LocalizedStrings
        ShortName:
          type: string
          description: Short name of the rate (in the default language).
          nullable: true
        UpdatedUtc:
          minLength: 1
          type: string
          description: Interval in which the rates were updated.
          format: date-time
        ExternalNames:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the external name of the rate.
          nullable: true
          x-schema-id: LocalizedStrings
        Description:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the description of the rate.
          nullable: true
          x-schema-id: LocalizedStrings
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the rate from external system.
          nullable: true
      additionalProperties: false
      description: '`Rate` entity, without some of the details, e.g. pricing.'
      x-schema-id: RateForExtent
    RateGroup:
      title: Rate Group
      required:
        - CreatedUtc
        - Id
        - IsActive
        - Names
        - Ordering
        - ServiceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the rate group.
          format: uuid
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the rate group belongs to.'
          format: uuid
        IsActive:
          type: boolean
          description: Whether the rate group is still active.
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the rate group in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the rate group in UTC timezone in ISO 8601 format.
          format: date-time
        Ordering:
          type: integer
          description: Ordering of the rate group.
          format: int32
        Names:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the name.
          x-schema-id: LocalizedStrings
        ShortNames:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the short name.
          nullable: true
          x-schema-id: LocalizedStrings
        Descriptions:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the description.
          nullable: true
          x-schema-id: LocalizedStrings
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the rate group from external system.
          nullable: true
      additionalProperties: false
      x-schema-id: RateGroup
    RateGroupFilterParameters:
      title: RateGroupFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        RateGroupIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Rate group](https://mews-systems.gitbook.io/connector-api/operations/#rate-group). Required if ServiceIds filter is not provided.'
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service). Required if RateGroupIds filter is not provided.'
          nullable: true
        ExternalIdentifiers:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: 'Identifiers of [Rate group](https://mews-systems.gitbook.io/connector-api/operations/#rate-group) from external systems.'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: RateGroupFilterParameters
    RateGroupOld:
      title: Rate group (ver 2017-04-12)
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the rate group.
          format: uuid
        ServiceId:
          type: string
          description: Unique identifier of the Service that the rate group belongs to.
          format: uuid
        IsActive:
          type: boolean
          description: Whether the rate group is still active.
        Name:
          type: string
          description: Name of the rate group.
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: External identifier of the rate group.
          nullable: true
      additionalProperties: false
      x-schema-id: RateGroupOld
    RateGroupResult:
      title: RateGroupResult
      required:
        - RateGroups
      type: object
      properties:
        RateGroups:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/RateGroup'
          description: The filtered rate groups.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest rate group returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older rate groups.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RateGroupResult
    RateOptions:
      title: RateOptions
      required:
        - HidePriceFromGuest
        - IsBonusPointsEligible
      type: object
      properties:
        HidePriceFromGuest:
          type: boolean
        IsBonusPointsEligible:
          type: boolean
      additionalProperties: false
      x-schema-id: RateOptions
    RatePriceUpdate:
      title: Rate price update
      type: object
      properties:
        CategoryId:
          type: string
          description: 'Unique identifier of the Resource category whose prices to update. If not specified, base price is updated.'
          format: uuid
          nullable: true
        Value:
          type: number
          description: 'New value of the rate on the interval. If not specified, removes all adjustments within the interval.'
          format: double
          nullable: true
        FirstTimeUnitStartUtc:
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units), in UTC timezone ISO 8601 format.'
          format: date-time
          nullable: true
        LastTimeUnitStartUtc:
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units), in UTC timezone ISO 8601 format. The maximum size of time interval depends on the service''s time unit: 367 hours if hours, 367 days if days, or 24 months if months.'
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: RatePriceUpdate
    RatePriceUpdateParameters:
      title: Rate price update parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - PriceUpdates
        - RateId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        RateId:
          minLength: 1
          type: string
          description: Unique identifier of the `Rate`.
          x-schema-id: HybridIdentifier
        ProductId:
          type: string
          description: Unique identifier of the `Product`.
          format: uuid
          nullable: true
        PriceUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RatePriceUpdate'
          description: Price adjustments for specific time intervals.
      additionalProperties: false
      x-schema-id: RatePriceUpdateParameters
    RatePricing:
      title: Rate pricing
      required:
        - AgeCategoryAdjustments
        - BaseAmountPrices
        - BasePrices
        - CategoryAdjustments
        - CategoryPrices
        - Currency
        - TimeUnitStartsUtc
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          description: 'ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency).'
        DatesUtc:
          type: array
          items:
            type: string
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `TimeUnitStartsUtc` instead.
        TimeUnitStartsUtc:
          type: array
          items:
            type: string
          description: Set of all time units covered by the time interval; expressed in UTC timezone ISO 8601 format.
        BasePrices:
          type: array
          items:
            type: number
            format: double
          deprecated: true
          x-deprecatedMessage: Use `BaseAmountPrices` instead.
        BaseAmountPrices:
          type: array
          items:
            $ref: '#/components/schemas/Amount'
          description: Base prices of the rates for each time unit covered by the time interval.
        CategoryPrices:
          type: array
          items:
            $ref: '#/components/schemas/CategoryPricing'
          description: Resource category prices.
        CategoryAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/CategoryAdjustment'
          description: Resource category adjustments.
        AgeCategoryAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/AgeCategoryAdjustment'
          description: Assigns different pricing or occupancy based on the guest's age.
        RelativeAdjustment:
          type: number
          description: Specific amount which shows the difference between this rate and the base rate.
          format: double
        AbsoluteAdjustment:
          type: number
          description: Relative amount which shows the difference between this rate and the base rate.
          format: double
        EmptyUnitAdjustment:
          type: number
          description: Price adjustment for when the resource booked with this rate is not full to capacity.
          format: double
        ExtraUnitAdjustment:
          type: number
          description: Price adjustment for when the resource booked with this rate exceeds capacity.
          format: double
      additionalProperties: false
      x-schema-id: RatePricing
    RatePricingData:
      title: RatePricingData
      type: object
      properties:
        Discriminator:
          title: Rate pricing discriminator
          allOf:
            - $ref: '#/components/schemas/RatePricingDiscriminatorEnum'
          description: "\n\nBaseRatePricing\n\nDependentRatePricing"
          readOnly: true
          x-enumNames:
            - BaseRatePricing
            - DependentRatePricing
          x-enumDescriptions:
            - ''
            - ''
        BaseRatePricing:
          title: Base rate pricing
          allOf:
            - $ref: '#/components/schemas/BaseRatePricingData'
          nullable: true
        DependentRatePricing:
          title: Dependent rate pricing
          allOf:
            - $ref: '#/components/schemas/DependentRatePricingData'
          nullable: true
          readOnly: true
      additionalProperties: false
      x-schema-id: RatePricingData
    RatePricingDiscriminatorEnum:
      title: Rate pricing discriminator
      enum:
        - BaseRatePricing
        - DependentRatePricing
      type: string
      description: "\n\nBaseRatePricing\n\nDependentRatePricing"
      x-enumNames:
        - BaseRatePricing
        - DependentRatePricing
      x-enumDescriptions:
        - ''
        - ''
    RatePricingFilterParameters:
      title: Rate pricing filter parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - FirstTimeUnitStartUtc
        - LastTimeUnitStartUtc
        - RateId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        RateId:
          type: string
          description: Unique identifier of the `Rate`.
          format: uuid
        ProductId:
          type: string
          description: Unique identifier of the `Product`.
          format: uuid
          nullable: true
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units), in UTC timezone ISO 8601 format.'
          format: date-time
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units), in UTC timezone ISO 8601 format. The maximum size of time interval depends on the service''s time unit: 367 hours if hours, 367 days if days, or 24 months if months.'
          format: date-time
      additionalProperties: false
      x-schema-id: RatePricingFilterParameters
    RateRestrictionResult:
      title: Rate restriction result
      required:
        - DateRestrictions
        - EarlinessRestrictions
        - LengthRestrictions
      type: object
      properties:
        DateRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/DateRestriction'
          description: Date restrictions for the rate.
        EarlinessRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/EarlinessRestriction'
          description: Earliness restrictions for the rates that are only available up to before arrival.
        LengthRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/LengthRestriction'
          description: Length restrictions for the rate.
      additionalProperties: false
      x-schema-id: RateRestrictionResult
    RateResult:
      title: Rate result
      required:
        - RateGroups
        - RateRestrictions
        - Rates
      type: object
      properties:
        Rates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/Rate'
          description: Rates of the default service.
        RateGroups:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/RateGroupOld'
          description: Rate groups of the default service.
          deprecated: true
          x-deprecatedMessage: 'Use [rateGroups/getAll](https://mews-systems.gitbook.io/connector-api/operations/rategroups#request).'
        RateRestrictions:
          title: Rate restriction result
          allOf:
            - $ref: '#/components/schemas/RateRestrictionResult'
          deprecated: true
          x-deprecatedMessage: 'Use [restrictions/getAll](https://mews-systems.gitbook.io/connector-api/operations/restrictions#request).'
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RateResult
    RateSetData:
      title: Set rate parameters
      required:
        - Names
        - PricingType
        - ServiceId
        - Type
      type: object
      properties:
        Id:
          type: string
          description: 'Unique identifier of the rate. If it matches an existing rate, that rate will be updated. If no match is found, an error will be returned.'
          format: uuid
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: 'Unique identifier of the rate in the external system. If `Id` is not provided and `ExternalIdentifier` matches an existing rate, the corresponding rate will be updated. If no match is found, a new rate will be created.'
          nullable: true
        ServiceId:
          minLength: 1
          type: string
          description: Unique identifier of the service. Ignored in case of updating an existing rate.
          x-schema-id: HybridIdentifier
        RateGroupId:
          type: string
          description: 'Unique identifier of the rate group under which rate is assigned. Empty value means that rate is added to a default group or the current group is kept for update, respectively.'
          nullable: true
          x-schema-id: HybridIdentifier
        IsEnabled:
          type: boolean
          description: Whether the rate is available to customers. `true` will be used as a default if not provided.
          nullable: true
        Type:
          title: Rate Add Type
          allOf:
            - $ref: '#/components/schemas/RateAddTypeEnum'
          description: "Type of the rate. `Private` will be used as a default if not provided.\n\nPublic\n\nPrivate"
        Names:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the name of the rate.
          x-schema-id: LocalizedStrings
        Descriptions:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the description.
          nullable: true
          x-schema-id: LocalizedStrings
        PricingType:
          title: Rate pricing discriminator
          allOf:
            - $ref: '#/components/schemas/RatePricingDiscriminatorEnum'
          description: "Rate pricing type. Must match existing pricing type in case of update.\n\nBaseRatePricing\n\nDependentRatePricing"
          x-enumNames:
            - BaseRatePricing
            - DependentRatePricing
          x-enumDescriptions:
            - ''
            - ''
        Pricing:
          title: Rate set pricing data parameters
          allOf:
            - $ref: '#/components/schemas/RateSetPricingDataParameters'
          description: Contains additional data about pricing of the rate.
          nullable: true
      additionalProperties: false
      x-schema-id: RateSetData
    RateSetParameters:
      title: Set rates parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Rates
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        Rates:
          maxItems: 100
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RateSetData'
          description: Rates to be added or updated.
      additionalProperties: false
      x-schema-id: RateSetParameters
    RateSetPricingDataParameters:
      title: Rate set pricing data parameters
      type: object
      properties:
        BaseRatePricing:
          title: Base rate pricing parameters (without occupancy adjustments)
          allOf:
            - $ref: '#/components/schemas/BaseRatePricingWithoutAdjustmentsParameters'
          description: 'Additional data for rates with base rate pricing. Used when `PricingType` is `BaseRatePricing`. Defaults are applied if not specified: amount is set to 10000 in default Enterprise''s currency and with its default accommodation tax rate code.'
          nullable: true
        DependentRatePricing:
          title: Dependent rate pricing parameters
          allOf:
            - $ref: '#/components/schemas/DependentRatePricingParameters'
          description: Additional data for rate with dependent rate pricing. Required when `PricingType` is `DependentRatePricing`.
          nullable: true
      additionalProperties: false
      x-schema-id: RateSetPricingDataParameters
    RateSetResult:
      title: Rate set result
      type: object
      properties:
        Rates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/Rate'
          description: Rates that were added or updated.
          nullable: true
      additionalProperties: false
      x-schema-id: RateSetResult
    RateTypeEnum:
      title: Rate type
      enum:
        - Public
        - Private
        - AvailabilityBlock
      type: string
      description: "\n\nPublic\n\nPrivate\n\nAvailabilityBlock"
      x-enumNames:
        - Public
        - Private
        - AvailabilityBlock
      x-enumDescriptions:
        - ''
        - ''
        - ''
    RebateOrderItemData:
      title: RebateOrderItemData
      type: object
      properties:
        RebatedItemId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RebateOrderItemData
    RefundTypeEnum:
      title: Refund type
      enum:
        - CreditCardPayment
        - AlternativePayment
      type: string
      description: "\n\nCreditCardPayment\n\nAlternativePayment"
      x-enumNames:
        - CreditCardPayment
        - AlternativePayment
      x-enumDescriptions:
        - ''
        - ''
    RelativeProductPrice:
      title: Relative product price
      type: object
      properties:
        Multiplier:
          type: number
          format: double
          deprecated: true
        Target:
          type: string
          nullable: true
          deprecated: true
        TaxRateCodes:
          type: array
          items:
            type: string
          nullable: true
          deprecated: true
        ProductIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
          deprecated: true
      additionalProperties: false
      description: ''
      x-schema-id: RelativeProductPrice
    RelativeTaxRateStrategy:
      title: RelativeTaxRateStrategy
      type: object
      properties:
        Value:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: RelativeTaxRateStrategy
    ReleaseStrategyEnum:
      title: Release strategy
      enum:
        - FixedRelease
        - RollingRelease
        - None
      type: string
      description: "The strategy for automatic release of the availability block.\n\nFixedRelease (The availability block is released at a fixed time.)\n\nRollingRelease (Each availability adjustment is released at a fixed offset from its start.)\n\nNone (The availability block is not automatically released.)"
      x-enumNames:
        - FixedRelease
        - RollingRelease
        - None
      x-enumDescriptions:
        - The availability block is released at a fixed time.
        - Each availability adjustment is released at a fixed offset from its start.
        - The availability block is not automatically released.
    ReleaseStrategyUpdateValue:
      title: Release strategy update value
      type: object
      properties:
        Value:
          title: Release strategy
          allOf:
            - $ref: '#/components/schemas/ReleaseStrategyEnum'
          description: "The strategy for automatic release of the availability block.\n\nFixedRelease (The availability block is released at a fixed time.)\n\nRollingRelease (Each availability adjustment is released at a fixed offset from its start.)\n\nNone (The availability block is not automatically released.)"
          x-enumNames:
            - FixedRelease
            - RollingRelease
            - None
          x-enumDescriptions:
            - The availability block is released at a fixed time.
            - Each availability adjustment is released at a fixed offset from its start.
            - The availability block is not automatically released.
      additionalProperties: false
      x-schema-id: ReleaseStrategyUpdateValue
    Reservation:
      title: Reservation (ver 2023-06-06)
      required:
        - AccountId
        - AccountType
        - CreatedUtc
        - CreatorProfileId
        - EndUtc
        - GroupId
        - Id
        - Number
        - Options
        - Origin
        - PersonCounts
        - RateId
        - RequestedResourceCategoryId
        - ScheduledEndUtc
        - ScheduledStartUtc
        - ServiceId
        - StartUtc
        - State
        - UpdatedUtc
        - UpdaterProfileId
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the reservation.
          format: uuid
        ServiceId:
          type: string
          description: Unique identifier of the `Service` that reservation is made against.
          format: uuid
        AccountId:
          type: string
          description: 'Unique identifier of the Customer or Company who owns the reservation, i.e. the main guest linked to the reservation.'
          format: uuid
        AccountType:
          $ref: '#/components/schemas/AccountType'
        CreatorProfileId:
          type: string
          description: Unique identifier of the user who created the reservation.
          format: uuid
        UpdaterProfileId:
          type: string
          description: Unique identifier of the user who updated the reservation.
          format: uuid
        BookerId:
          type: string
          description: 'Unique identifier of the booker who made the reservation on behalf of the reservation owner, in the special case where the booker is also a registered customer in Mews.'
          format: uuid
          nullable: true
        Number:
          minLength: 1
          type: string
          description: Confirmation number of the reservation in Mews.
        State:
          title: Service order state
          allOf:
            - $ref: '#/components/schemas/ServiceOrderStateEnum'
          description: "State of the reservation.\n\nInquired (Confirmed neither by the customer nor enterprise.)\n\nConfirmed (Confirmed by both parties, before check-in.)\n\nStarted (Checked in.)\n\nProcessed (Checked out.)\n\nCanceled (Canceled.)\n\nOptional (Confirmed by enterprise but not by the guest (the enterprise is holding resource for the guest).)\n\nRequested (Confirmed by the customer but not by the enterprise (waitlist).)"
          x-enumNames:
            - Inquired
            - Confirmed
            - Started
            - Processed
            - Canceled
            - Optional
            - Requested
          x-enumDescriptions:
            - Confirmed neither by the customer nor enterprise.
            - 'Confirmed by both parties, before check-in.'
            - Checked in.
            - Checked out.
            - Canceled.
            - Confirmed by enterprise but not by the guest (the enterprise is holding resource for the guest).
            - Confirmed by the customer but not by the enterprise (waitlist).
        Origin:
          title: Service order origin
          allOf:
            - $ref: '#/components/schemas/ServiceOrderOriginEnum'
          description: "Origin of the reservation.\n\nDistributor (From the Mews Booking Engine or Booking Engine API.)\n\nChannelManager (From a channel manager.)\n\nCommander (From Mews Operations.)\n\nImport (From an import process.)\n\nConnector (From the Mews Connector API.)\n\nNavigator (From Mews Guest Services.)"
          x-enumNames:
            - Distributor
            - ChannelManager
            - Commander
            - Import
            - Connector
            - Navigator
          x-enumDescriptions:
            - From the Mews Booking Engine or Booking Engine API.
            - From a channel manager.
            - From Mews Operations.
            - From an import process.
            - From the Mews Connector API.
            - From Mews Guest Services.
        CommanderOrigin:
          allOf:
            - $ref: '#/components/schemas/ServiceOrderCommanderOriginEnum'
          description: "Further detail about origin in case of Origin `Commander`.\n\nInPerson\n\nChannel\n\nPhone\n\nEmail\n\nWebsite\n\nMessage\n\nCallCenter"
          nullable: true
        OriginDetails:
          type: string
          description: Details about the reservation `Origin`.
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the reservation in UTC timezone.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the reservation in UTC timezone.
          format: date-time
        CancelledUtc:
          type: string
          description: Cancellation date and time in UTC timezone.
          format: date-time
          nullable: true
        VoucherId:
          type: string
          description: Unique identifier of the `Voucher` that has been used to create reservation.
          format: uuid
          nullable: true
        BusinessSegmentId:
          type: string
          description: Identifier of the reservation `BusinessSegment`.
          format: uuid
          nullable: true
        Options:
          title: Service Order Options
          allOf:
            - $ref: '#/components/schemas/ServiceOrderOptions'
          description: Options of the reservation.
        RateId:
          type: string
          description: Identifier of the reservation `Rate`.
          format: uuid
        CreditCardId:
          type: string
          description: Unique identifier of the Credit card.
          format: uuid
          nullable: true
        GroupId:
          type: string
          description: Unique identifier of the Reservation group.
          format: uuid
        RequestedResourceCategoryId:
          type: string
          description: Unique identifier of the Resource category.
          format: uuid
        AssignedResourceId:
          type: string
          description: Identifier of the assigned Resource.
          format: uuid
          nullable: true
        AvailabilityBlockId:
          type: string
          description: Unique identifier of the Availability block the reservation is assigned to.
          format: uuid
          nullable: true
        PartnerCompanyId:
          type: string
          description: Identifier of the `Company` on behalf of which the reservation was made.
          format: uuid
          nullable: true
        TravelAgencyId:
          type: string
          description: Identifier of the Travel Agency (`Company`) that mediated the reservation.
          format: uuid
          nullable: true
        AssignedResourceLocked:
          type: boolean
          description: Whether the reservation is locked to the assigned Resource and cannot be moved.
        ChannelNumber:
          type: string
          description: 'Number of the reservation within the Channel (i.e. OTA, GDS, CRS, etc) in case the reservation group originates there (e.g. Booking.com confirmation number).'
          nullable: true
        ChannelManagerNumber:
          type: string
          description: Unique number of the reservation within the reservation group.
          nullable: true
        CancellationReason:
          allOf:
            - $ref: '#/components/schemas/ServiceOrderCancellationReasonEnum'
          description: "Cancellation reason of the reservation.\n\nOther\n\nConfirmationMissed\n\nBookedElsewhere\n\nForceMajeure\n\nGuestComplaint\n\nNoShow\n\nPriceTooHigh\n\nServiceNotAvailable\n\nInputError\n\nInvalidPayment\n\nTravelAgency\n\nRequestedByGuest\n\nUpdate\n\nBookingAbandoned\n\nRequestedByBooker"
          nullable: true
        ReleasedUtc:
          type: string
          description: Date when the optional reservation is released in UTC timezone.
          format: date-time
          nullable: true
        StartUtc:
          minLength: 1
          type: string
          description: Reservation start or check-in time (if it's earlier than scheduled start) in UTC timezone in ISO 8601 format.
          format: date-time
          deprecated: true
          x-deprecatedMessage: Use `ScheduledStartUtc` and `ActualStartUtc` instead.
        EndUtc:
          minLength: 1
          type: string
          description: Scheduled end time of reservation in UTC timezone in ISO 8601 format
          format: date-time
          deprecated: true
          x-deprecatedMessage: Use `ScheduledEndUtc` and `ActualEndUtc` instead.
        ScheduledStartUtc:
          minLength: 1
          type: string
          description: Scheduled start time of reservation in UTC timezone.
          format: date-time
        ActualStartUtc:
          type: string
          description: Actual customer check-in time of reservation in UTC timezone.
          format: date-time
          nullable: true
        ScheduledEndUtc:
          minLength: 1
          type: string
          description: Scheduled end time of reservation in UTC timezone in ISO 8601 format.
          format: date-time
        ActualEndUtc:
          type: string
          description: Actual end time of reservation in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        Purpose:
          allOf:
            - $ref: '#/components/schemas/ReservationPurposeEnum'
          description: "Purpose of the reservation.\n\nLeisure\n\nBusiness\n\nStudent"
          nullable: true
        QrCodeData:
          type: string
          description: QR code data of the reservation.
          nullable: true
        PersonCounts:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ReservationPersonCount'
          description: Number of people per age category the reservation was booked for.
      additionalProperties: false
      x-schema-id: Reservation
    ReservationAdditionParameters:
      title: ReservationAdditionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Reservations
        - ServiceId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ServiceId:
          type: string
          description: Unique identifier of the `Service` to be reserved.
          format: uuid
        GroupId:
          type: string
          description: 'Unique identifier of the `ReservationGroup` where the reservations are added. If not specified, a new group is created.'
          format: uuid
          nullable: true
        GroupName:
          type: string
          description: 'Name of the `ReservationGroup` where the reservations are added to. If `GroupId` is specified, this field is ignored. If not specified, the group name is automatically created.'
          nullable: true
        Reservations:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ReservationData'
          description: Parameters of the new reservations.
        CheckRateApplicability:
          type: boolean
          description: 'Indicates whether the system will check and prevent a booking being made using a restricted rate, e.g. a private rate. The default is `true`, i.e. the system will normally check for this unless the property is set to `false`.'
          nullable: true
        CheckOverbooking:
          type: boolean
          description: 'Indicates whether the system will check and prevent a booking being made in the case of an overbooking, i.e. where there is an insufficient number of resources available to meet the request. The default is `true`, i.e. the system will normally check for this unless the property is set to `false`.'
          nullable: true
        SendConfirmationEmail:
          type: boolean
          description: Whether the confirmation email is sent. Default value is `true`.
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationAdditionParameters
    ReservationAdditionResult:
      title: ReservationAdditionResult
      required:
        - Reservations
      type: object
      properties:
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/AddedReservation'
          description: The added reservations.
      additionalProperties: false
      x-schema-id: ReservationAdditionResult
    ReservationCancellationParameters:
      title: ReservationCancellationParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ReservationIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the reservation to cancel.
        ReservationId:
          type: string
          format: uuid
          deprecated: true
        PostCancellationFee:
          type: boolean
          description: Whether the cancellation fees should be charged according to rate conditions. The default is `false`.
          nullable: true
        SendEmail:
          type: boolean
          description: Whether the cancellation email should be sent. The default is `true`.
          nullable: true
        Notes:
          type: string
          description: Additional notes describing the reason for the cancellation.
      additionalProperties: false
      x-schema-id: ReservationCancellationParameters
    ReservationData:
      title: Reservation parameters
      required:
        - CustomerId
        - EndUtc
        - PersonCounts
        - RateId
        - RequestedCategoryId
        - StartUtc
      type: object
      properties:
        Identifier:
          type: string
          description: Identifier of the reservation within the transaction.
          nullable: true
        ChannelNumber:
          type: string
          nullable: true
        State:
          anyOf:
            - $ref: '#/components/schemas/ServiceOrderStateOld'
          description: 'State of the newly created reservation (either `Optional`, `Enquired` or `Confirmed`). If not specified, `Confirmed` is used.'
          nullable: true
        StartUtc:
          minLength: 1
          type: string
          description: Reservation start in UTC timezone in ISO 8601 format.
          format: date-time
        EndUtc:
          minLength: 1
          type: string
          description: Reservation end in UTC timezone in ISO 8601 format.
          format: date-time
        ReleasedUtc:
          type: string
          description: Release date and time of an unconfirmed reservation in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        AdultCount:
          type: integer
          format: int32
          deprecated: true
          x-deprecatedMessage: Use `PersonCounts` instead.
        ChildCount:
          type: integer
          format: int32
          deprecated: true
          x-deprecatedMessage: Use `PersonCounts` instead.
        PersonCounts:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ReservationPersonCount'
          description: Number of people per age category the reservation was booked for. At least one category with valid count must be provided.
        CustomerId:
          type: string
          description: Unique identifier of the `Customer` who owns the reservation.
          format: uuid
        BookerId:
          type: string
          description: Unique identifier of the `Customer` on whose behalf the reservation was made.
          format: uuid
          nullable: true
        RequestedCategoryId:
          type: string
          description: Identifier of the requested `ResourceCategory`.
          format: uuid
        RateId:
          type: string
          description: Identifier of the reservation `Rate`.
          format: uuid
        VoucherCode:
          type: string
          description: Voucher code value providing access to specified private `Rate` applied to this reservation.
          nullable: true
        CreditCardId:
          type: string
          description: Identifier of `CreditCard` belonging either to the `Customer` who owns the reservation or to the `Booker`.
          format: uuid
          nullable: true
        TravelAgencyId:
          type: string
          description: Identifier of the `Company` that mediated the reservation.
          format: uuid
          nullable: true
        CompanyId:
          type: string
          description: Identifier of the `Company` on behalf of which the reservation was made.
          format: uuid
          nullable: true
        BusinessSegmentId:
          type: string
          description: Identifier of the reservation `BusinessSegment`.
          format: uuid
          nullable: true
        Notes:
          type: string
          description: Additional notes.
          nullable: true
        TimeUnitAmount:
          title: Amount parameters
          allOf:
            - $ref: '#/components/schemas/AmountParameters'
          description: Amount of each night of the reservation.
          nullable: true
        TimeUnitPrices:
          type: array
          items:
            $ref: '#/components/schemas/PerUnitPriceParameters'
          description: Prices for time units of the reservation. E.g. prices for the first or second night.
          nullable: true
        ProductOrders:
          type: array
          items:
            $ref: '#/components/schemas/ProductOrderAdditionData'
          description: Parameters of the products ordered together with the reservation.
          nullable: true
        AvailabilityBlockId:
          type: string
          description: Unique identifier of the `AvailabilityBlock` the reservation is assigned to.
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationData
    ReservationDataParameters:
      title: ReservationDataParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Reservations
        - ServiceId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ServiceId:
          type: string
          description: Unique identifier of the `Service` to be priced.
          format: uuid
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/ReservationData'
          description: Parameters of the reservations to price. Note that `CustomerId` is not required when pricing reservations.
      additionalProperties: false
      x-schema-id: ReservationDataParameters
    ReservationExtent:
      title: Reservation extent
      type: object
      properties:
        Reservations:
          type: boolean
          description: Whether the response should contain reservations.
          nullable: true
        ReservationGroups:
          type: boolean
          description: Whether the response should contain groups of the reservations.
          nullable: true
        Customers:
          type: boolean
          description: Whether the response should contain customers of the reservations.
          nullable: true
        CustomerAdresses:
          type: boolean
          description: Whether the response should contain addresses of the customers.
          nullable: true
        CustomerIdentityDocuments:
          type: boolean
          description: Whether the response should contain identity documents of the customers.
          nullable: true
        Services:
          type: boolean
          description: Whether the response should contain services reserved by the reservations.
          nullable: true
        Products:
          type: boolean
          description: Whether the response should contain products orderable with the reservations.
          nullable: true
        BusinessSegments:
          type: boolean
          description: Whether the response should contain business segmentation.
          nullable: true
        Resources:
          type: boolean
          description: Whether the response should contain resources.
          nullable: true
        ResourceCategories:
          type: boolean
          description: Whether the response should contain resource categories.
          nullable: true
        ResourceCategoryAssignments:
          type: boolean
          description: Whether the response should contain assignments of the resources to categories.
          nullable: true
        Rates:
          type: boolean
          description: Whether the response should contain rates and rate groups.
          nullable: true
        Items:
          type: boolean
          description: Whether the response should contain accounting items.
          nullable: true
        OrderItems:
          type: boolean
          description: Whether the response should contain reservation items.
          nullable: true
        Notes:
          type: boolean
          description: Whether the response should contain notes.
          nullable: true
        QrCodeData:
          type: boolean
          description: Whether the response should contain QR code data.
          nullable: true
        Companies:
          type: boolean
          description: Whether the response should contain companies.
          nullable: true
        AccountingStates:
          type: array
          items:
            $ref: '#/components/schemas/AccountingState'
          description: 'States the items should be in. If not specified, items in `Open` or `Closed` states are returned.'
          nullable: true
      additionalProperties: false
      description: 'Extent of data to be returned. E.g. it is possible to specify that together with the reservations, customers, groups and rates should be also returned.'
      x-schema-id: ReservationExtent
    ReservationFilterParameters:
      title: ReservationFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) from which the reservations are requested.'
        ServiceId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
        GroupIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the requested [Reservation groups](https://mews-systems.gitbook.io/connector-api/operations/#reservation-group).'
          nullable: true
        ReservationIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the requested [Reservations](https://mews-systems.gitbook.io/connector-api/operations/#reservation-ver-2017-04-12).'
          nullable: true
        CustomerIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer) which own the reservations.'
          nullable: true
        AssignedResourceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Resources](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource) assigned to the reservations.'
          nullable: true
        RateIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate) assigned to the reservations.'
          nullable: true
        BusinessSegmentIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Business segments](https://mews-systems.gitbook.io/connector-api/operations/businesssegments/#business-segment) assigned to the reservations.'
          nullable: true
        ChannelNumbers:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: 'Set of numbers or references used by the Channel (i.e. OTA, GDS, CRS, etc.) in case the reservation group originates there, e.g. Booking.com confirmation numbers.'
          nullable: true
        Numbers:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: 'Confirmation numbers of [Reservations](https://mews-systems.gitbook.io/connector-api/operations/#reservation-ver-2017-04-12).'
          nullable: true
        StartUtc:
          type: string
          description: Start of the interval in UTC timezone in ISO 8601 format. Required when used in conjunction with the TimeFilter or States search parameter.
          format: date-time
          nullable: true
        EndUtc:
          type: string
          description: End of the interval in UTC timezone in ISO 8601 format. Required when used in conjunction with the TimeFilter or States search parameter.
          format: date-time
          nullable: true
        TimeFilter:
          anyOf:
            - $ref: '#/components/schemas/ReservationTimeFilter'
          description: 'Time filter of the interval. If not specified, reservations Colliding with the interval are returned.'
          nullable: true
        Currency:
          type: string
          description: 'ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency) the item costs should be converted to.'
          format: currency
          nullable: true
        States:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderStateOld'
          description: 'States the reservations should be in. If not specified, reservations in Confirmed, Started or Processed states or reservations specified by ReservationIds regardless of state are returned.'
          nullable: true
        Extent:
          title: Reservation extent
          allOf:
            - $ref: '#/components/schemas/ReservationExtent'
          description: 'Extent of data to be returned. E.g. it is possible to specify that together with the reservations, customers, groups and rates should be also returned.'
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
      additionalProperties: false
      x-schema-id: ReservationFilterParameters
    ReservationGroup:
      title: Reservation Group
      required:
        - EnterpriseId
        - Id
        - Name
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the reservation group.
          format: uuid
        Name:
          minLength: 1
          type: string
          description: 'Name of the reservation group, might be empty or same for multiple groups.'
        ChannelManager:
          type: string
          description: Name of the corresponding channel manager.
          nullable: true
        ChannelManagerGroupNumber:
          type: string
          description: Identifier of the channel manager.
          nullable: true
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise) the reservation group belongs to.'
          format: uuid
      additionalProperties: false
      x-schema-id: ReservationGroup
    ReservationGroupFilterParameters:
      title: ReservationGroupFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ReservationGroupIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Reservation Group](https://mews-systems.gitbook.io/connector-api/operations/#reservation-group). Required if no other filter is provided.'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: ReservationGroupFilterParameters
    ReservationGroupOld:
      title: Reservation groups (ver 2017-04-12)
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the reservation group.
          format: uuid
        Name:
          type: string
          description: Name of the reservation group.
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationGroupOld
    ReservationGroupResult:
      title: ReservationGroupResult
      required:
        - ReservationGroups
      type: object
      properties:
        ReservationGroups:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ReservationGroup'
          description: The filtered reservation groups.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest reservation group returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older reservation groups.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationGroupResult
    ReservationItemParameters:
      title: ReservationItemParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ReservationIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the reservation.
        Currency:
          type: string
          description: 'ISO-4217 code of the [Currency](https://mews-systems.gitbook.io/connector-api/operations/currencies/#currency) the item costs should be converted to.'
          format: currency
          nullable: true
        AccountingStates:
          type: array
          items:
            type: string
          description: 'States the items should be in. If not specified, items in Open or Closed states are returned.'
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationItemParameters
    ReservationItemResult:
      title: ReservationItemResult
      required:
        - Reservations
      type: object
      properties:
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/ReservationItems'
          description: The reservations with their items.
      additionalProperties: false
      x-schema-id: ReservationItemResult
    ReservationItems:
      title: Reservation items
      required:
        - Items
        - OrderItems
      type: object
      properties:
        ReservationId:
          type: string
          description: Unique identifier of the reservation.
          format: uuid
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItem'
          description: Accounting items associated with the reservation.
        OrderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemOld'
          description: Order items associated with the reservation.
      additionalProperties: false
      x-schema-id: ReservationItems
    ReservationOld:
      title: Reservation (ver 2017-04-12)
      required:
        - AssignedResourceLocked
        - CompanionIds
        - CreatedUtc
        - CustomerId
        - EndUtc
        - GroupId
        - Id
        - Number
        - Options
        - Origin
        - OwnerId
        - PersonCounts
        - RateId
        - RequestedCategoryId
        - ServiceId
        - StartUtc
        - State
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the reservation.
          format: uuid
        ServiceId:
          type: string
          description: Unique identifier of the Service that is reserved.
          format: uuid
        GroupId:
          type: string
          description: Unique identifier of the Reservation group.
          format: uuid
        Number:
          minLength: 1
          type: string
          description: Confirmation number of the reservation in Mews.
        ChannelNumber:
          type: string
          description: 'Number of the reservation within the Channel (i.e. OTA, GDS, CRS, etc) in case the reservation group originates there (e.g. Booking.com confirmation number).'
          nullable: true
        ChannelManagerNumber:
          type: string
          description: Unique number of the reservation within the reservation group.
          nullable: true
        ChannelManagerGroupNumber:
          type: string
          description: Number of the reservation group within a Channel manager that transferred the reservation from Channel to Mews.
          nullable: true
        ChannelManager:
          type: string
          description: 'Name of the Channel manager (e.g. AvailPro, SiteMinder, TravelClick, etc).'
          nullable: true
        State:
          $ref: '#/components/schemas/ServiceOrderStateOld'
        Origin:
          $ref: '#/components/schemas/ReservationOldOrigin'
        OriginDetails:
          type: string
          description: Details about the reservation origin.
          nullable: true
        Purpose:
          anyOf:
            - $ref: '#/components/schemas/ReservationPurpose'
          description: Purpose of the reservation.
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the reservation in UTC timezone in ISO 8601 format.
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the reservation in UTC timezone in ISO 8601 format.
        CancelledUtc:
          type: string
          description: Cancellation date and time in UTC timezone in ISO 8601 format.
          nullable: true
        StartUtc:
          minLength: 1
          type: string
          description: 'Start of the reservation in UTC timezone in ISO 8601 format. This is either the scheduled reservation start time, or the actual customer check-in time if this is earlier than the scheduled start time.'
        EndUtc:
          minLength: 1
          type: string
          description: End of the reservation (departure) in UTC timezone in ISO 8601 format.
        ReleasedUtc:
          type: string
          description: Date when the optional reservation is released in UTC timezone in ISO 8601 format.
          nullable: true
        RequestedCategoryId:
          type: string
          description: Identifier of the requested Resource category.
          format: uuid
        AssignedSpaceId:
          type: string
          description: Identifier of the assigned Space.
          format: uuid
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `AssignedResourceId` instead.
        AssignedSpaceLocked:
          type: boolean
          description: Whether the reservation is locked to the assigned Space and cannot be moved.
          deprecated: true
          x-deprecatedMessage: Use `AssignedResourceLocked` instead.
        AssignedResourceId:
          type: string
          description: Identifier of the assigned Resource.
          format: uuid
          nullable: true
        AssignedResourceLocked:
          type: boolean
          description: Whether the reservation is locked to the assigned Resource and cannot be moved.
        BusinessSegmentId:
          type: string
          description: Identifier of the reservation Business segment.
          format: uuid
          nullable: true
        CompanyId:
          type: string
          description: Identifier of the Company on behalf of which the reservation was made.
          format: uuid
          nullable: true
        TravelAgencyId:
          type: string
          description: Identifier of the Company that mediated the reservation.
          format: uuid
          nullable: true
        AvailabilityBlockId:
          type: string
          description: Unique identifier of the Availability block the reservation is assigned to.
          format: uuid
          nullable: true
        RateId:
          type: string
          description: Identifier of the reservation Rate.
          format: uuid
        VoucherId:
          type: string
          description: Unique identifier of the Voucher that has been used to create reservation.
          format: uuid
          nullable: true
        CreditCardId:
          type: string
          description: Unique identifier of the Credit card.
          format: uuid
          nullable: true
        CancellationReason:
          anyOf:
            - $ref: '#/components/schemas/CancellationReason'
          description: Cancellation reason of the reservation.
          nullable: true
        AdultCount:
          type: integer
          description: Count of adults the reservation was booked for.
          format: int32
          deprecated: true
          x-deprecatedMessage: Use `PersonCounts` instead.
        ChildCount:
          type: integer
          description: Count of children the reservation was booked for.
          format: int32
          deprecated: true
          x-deprecatedMessage: Use `PersonCounts` instead.
        PersonCounts:
          type: array
          items:
            $ref: '#/components/schemas/ReservationPersonCount'
          description: Number of people per age category the reservation was booked for.
        OwnerId:
          type: string
          description: Unique identifier of the Customer or Company who owns the reservation.
          format: uuid
        CustomerId:
          type: string
          description: Unique identifier of the Customer who owns the reservation.
          format: uuid
          deprecated: true
          x-deprecatedMessage: Use `OwnerId` instead.
        BookerId:
          type: string
          description: Unique identifier of the Customer on whose behalf the reservation was made.
          format: uuid
          nullable: true
        CompanionIds:
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Customer`s that will use the resource.
          deprecated: true
          x-deprecatedMessage: Use `companionships/getAll` instead.
        ChannelManagerId:
          type: string
          description: Channel Manager number.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `ChannelManagerNumber` instead.
        Options:
          title: Reservation options
          allOf:
            - $ref: '#/components/schemas/ReservationOptions'
          description: Options of the reservation.
      additionalProperties: false
      description: ''
      x-schema-id: ReservationOld
    ReservationOldOrigin:
      title: Reservation origin (ver 2017-04-12)
      enum:
        - Distributor
        - ChannelManager
        - Import
        - Connector
        - Navigator
        - CommanderInPerson
        - CommanderChannel
        - CommanderPhone
        - CommanderEmail
        - CommanderWebsite
        - CommanderMessage
        - CommanderCallCenter
      type: string
      x-enumDescriptions:
        - From the Mews Booking Engine or Booking Engine API.
        - From a channel manager.
        - From an import process.
        - From the Mews Connector API.
        - From Mews Guest Services.
        - 'From Mews Operations, in person.'
        - 'From Mews Operations, via channel.'
        - 'From Mews Operations, via telephone.'
        - 'From Mews Operations, via email.'
        - 'From Mews Operations, via website.'
        - 'From Mews Operations, via message person.'
        - 'From Mews Operations, via call center.'
    ReservationOptions:
      title: Reservation options
      required:
        - AllCompanionsCheckedIn
        - AnyCompanionCheckedIn
        - OwnerCheckedIn
      type: object
      properties:
        OwnerCheckedIn:
          type: boolean
          description: Owner of the reservation checked in.
        AllCompanionsCheckedIn:
          type: boolean
          description: All companions of the reservation checked in.
        AnyCompanionCheckedIn:
          type: boolean
          description: Any companion of the reservation checked in.
      additionalProperties: false
      x-schema-id: ReservationOptions
    ReservationPersonCount:
      title: Age category parameters
      required:
        - AgeCategoryId
        - Count
      type: object
      properties:
        AgeCategoryId:
          type: string
          description: 'Unique identifier of the [Age category](https://mews-systems.gitbook.io/connector-api/operations/agecategories#age-category).'
          format: uuid
        Count:
          type: integer
          description: Number of people of a given age category. Only positive value is accepted.
          format: int32
      additionalProperties: false
      x-schema-id: ReservationPersonCount
    ReservationPrice:
      title: Reservation price
      required:
        - TotalAmount
      type: object
      properties:
        Identifier:
          type: string
          description: Identifier of the reservation within the transaction.
          nullable: true
        TotalAmount:
          title: Amount
          allOf:
            - $ref: '#/components/schemas/Amount'
          description: Total price of the reservation.
        Total:
          title: Currency value (ver 2018-06-07)
          allOf:
            - $ref: '#/components/schemas/CurrencyValueOld'
          description: Total price of the reservation.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `TotalAmount` instead.
      additionalProperties: false
      x-schema-id: ReservationPrice
    ReservationPricingResult:
      title: ReservationPricingResult
      required:
        - ReservationPrices
      type: object
      properties:
        ReservationPrices:
          type: array
          items:
            $ref: '#/components/schemas/ReservationPrice'
          description: The reservation prices.
      additionalProperties: false
      x-schema-id: ReservationPricingResult
    ReservationProcessingParameters:
      title: ReservationProcessingParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the reservation to process.
          format: uuid
        CloseBills:
          type: boolean
          description: Whether closable bills of the reservation members should be automatically closed.
          nullable: true
        AllowOpenBalance:
          type: boolean
          description: Whether non-zero consumed balance of all reservation members is allowed.
          nullable: true
        Notes:
          type: string
          description: Required if AllowOpenBalance set to true. Used to provide reason for closing with unbalanced bill.
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationProcessingParameters
    ReservationProductParameters:
      title: ReservationProductParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Count
        - ProductId
        - ReservationId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ReservationId:
          type: string
          description: Unique identifier of the reservation.
          format: uuid
        ProductId:
          type: string
          description: 'Unique identifier of the [Product](https://mews-systems.gitbook.io/connector-api/operations/products/#product).'
          format: uuid
        Count:
          type: integer
          description: 'The amount of the products to be added. Note that if the product is charged e.g. per night, count 1 means a single product every night. Count 2 means two products every night.'
          format: int32
        UnitAmount:
          title: Amount parameters
          allOf:
            - $ref: '#/components/schemas/AmountParameters'
          description: Price of the product that overrides the price defined in Mews.
          nullable: true
        StartUtc:
          type: string
          description: Product start in UTC timezone in ISO 8601 format. For products with charging Once and PerPerson must be set to same value as EndUtc.
          format: date-time
          nullable: true
        EndUtc:
          type: string
          description: Product end in UTC timezone in ISO 8601 format. For products with charging Once and PerPerson must be set to same value as StartUtc.
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationProductParameters
    ReservationPurpose:
      title: Reservation purpose
      enum:
        - Leisure
        - Business
        - Student
      type: string
    ReservationPurposeEnum:
      title: Reservation purpose
      enum:
        - Leisure
        - Business
        - Student
      type: string
      description: "\n\nLeisure\n\nBusiness\n\nStudent"
      x-enumNames:
        - Leisure
        - Business
        - Student
      x-enumDescriptions:
        - ''
        - ''
        - ''
    ReservationQrCodeData:
      title: Reservation QR code data
      type: object
      properties:
        ReservationId:
          type: string
          description: Unique identifier of the reservation.
          format: uuid
        Data:
          type: string
          description: Reservation data for QR code generation.
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationQrCodeData
    ReservationResult:
      title: ReservationResult
      type: object
      properties:
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/ReservationOld'
          description: The reservations that collide with the specified interval.
          nullable: true
        ReservationGroups:
          type: array
          items:
            $ref: '#/components/schemas/ReservationGroupOld'
          description: Reservation groups that the reservations are members of.
          nullable: true
        Customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          description: Customers that are members of the reservations.
          nullable: true
        Services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          description: Services that have been reserved.
          nullable: true
        Products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          description: Products orderable with reservations.
          nullable: true
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          description: Assigned resources of the reservations.
          nullable: true
        ResourceCategories:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategory'
          description: Resource categories of the resources.
          nullable: true
        ResourceCategoryAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategoryAssignment'
          description: Assignments of the resources to categories.
          nullable: true
        BusinessSegments:
          type: array
          items:
            $ref: '#/components/schemas/BusinessSegment'
          description: Business segments of the reservations.
          nullable: true
        Rates:
          type: array
          items:
            $ref: '#/components/schemas/RateForExtent'
          description: Rates of the reservations.
          nullable: true
        RateGroups:
          type: array
          items:
            $ref: '#/components/schemas/RateGroupOld'
          description: Rate groups of the reservation rates.
          nullable: true
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItem'
          description: Accounting items that are part of the reservations.
          nullable: true
        OrderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemOld'
          description: Revenue items of the reservations.
          nullable: true
        Notes:
          type: array
          items:
            $ref: '#/components/schemas/OrderNote'
          description: Notes of the reservations.
          nullable: true
        QrCodeData:
          type: array
          items:
            $ref: '#/components/schemas/ReservationQrCodeData'
          description: QR code data of the reservations.
          nullable: true
        Companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
          description: Companies related to the reservations.
          nullable: true
        ResourceAccessTokens:
          type: array
          items:
            $ref: '#/components/schemas/ResourceAccessToken'
          description: Resource access tokens for the reservations.
          nullable: true
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest reservation returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older reservations.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationResult
    ReservationServiceOrderFilterParameters:
      title: ReservationServiceOrderFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ReservationIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Reservations](https://mews-systems.gitbook.io/connector-api/operations/#reservation-ver-2023-06-06).'
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service). If not provided, all bookable services are used.'
          nullable: true
        ReservationGroupIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Reservation groups](https://mews-systems.gitbook.io/connector-api/operations/#reservation-group).'
          nullable: true
        AccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of accounts (currently only [Customers](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer), in the future also [Companies](https://mews-systems.gitbook.io/connector-api/operations/companies/#company)) the reservation is associated with.'
          nullable: true
        PartnerCompanyIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Companies` on behalf of which the reservations were made.
          nullable: true
        TravelAgencyIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Identifier of the Travel Agencies (`Company`) that mediated the reservations.
          nullable: true
        Numbers:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: Reservation confirmation numbers.
          nullable: true
        ChannelNumbers:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
          description: 'Numbers or references used by a Channel (OTA, GDS, CRS, etc.) in case the reservation group originates there, e.g. Booking.com confirmation numbers.'
          nullable: true
        AssignedResourceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Resources](https://mews-systems.gitbook.io/connector-api/operations/resources#resource) assigned to the reservations.'
          nullable: true
        AvailabilityBlockIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Availability blocks` assigned to the reservations.
          nullable: true
        CreatedUtc:
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: 'Interval in which the [Reservation](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-ver-2023-06-06) was created.'
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Reservations` were updated.
          nullable: true
          x-max-interval-in-months: 3
        CollidingUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the reservations are active. This is defined for a `Reservation` as the period between the reservation's scheduled start time `ScheduledStartUtc` and its scheduled end time `EndUtc`. Reservation is selected if any part of its interval intersects with the interval specified in `CollidingUtc
          nullable: true
          x-max-interval-in-months: 3
        ScheduledStartUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval filtering Reservations by their scheduled start time. Cannot be used with `ActualStartUtc`.
          nullable: true
          x-max-interval-in-months: 3
        ActualStartUtc:
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval filtering Reservations by their actual start (check-in) time. Cannot be used with `ScheduledStartUtc`. Note that the filter applies only to started or processed reservations.
          nullable: true
          x-max-interval-in-months: 3
        ActualEndUtc:
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval filtering Reservations by their actual end (check-out) time. Cannot be used with `ScheduledEndUtc`.
          nullable: true
          x-max-interval-in-months: 3
        ScheduledEndUtc:
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval filtering Reservations by their scheduled end time. Cannot be used with `ActualEndUtc`.
          nullable: true
          x-max-interval-in-months: 3
        States:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderStateEnum'
          description: A list of service order states to filter by.
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationServiceOrderFilterParameters
    ReservationServiceOrderResult:
      title: ReservationServiceOrderResult
      required:
        - Reservations
      type: object
      properties:
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/Reservation'
          description: The reservations of the enterprise.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationServiceOrderResult
    ReservationStartParameters:
      title: ReservationStartParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the reservation to start.
          format: uuid
      additionalProperties: false
      x-schema-id: ReservationStartParameters
    ReservationTimeFilter:
      title: Reservation time filter
      enum:
        - Colliding
        - Created
        - Updated
        - Start
        - End
        - Overlapping
        - Canceled
      type: string
      x-enumDescriptions:
        - Reservations whose intervals collide with the specified interval.
        - Reservations created within the specified interval.
        - Reservations updated within the specified interval.
        - Reservations starting (arriving) within the specified interval.
        - Reservations ending (departing) within the specified interval.
        - Reservations whose intervals contain the specified interval.
        - Reservations canceled within the specified interval.
    ReservationUpdateIntervalParameters:
      title: ReservationUpdateIntervalParameters
      required:
        - AccessToken
        - ChargeCancellationFee
        - Client
        - ClientToken
        - ReservationId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the reservation to be updated.
          format: uuid
        StartUtc:
          type: string
          description: New reservation start in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        EndUtc:
          type: string
          description: New reservation end in UTC timezone in ISO 8601 format.
          format: date-time
          nullable: true
        ChargeCancellationFee:
          type: boolean
          description: Whether cancellation fee should be charged for potentially canceled nights.
      additionalProperties: false
      x-schema-id: ReservationUpdateIntervalParameters
    ReservationUpdateOptionsParameters:
      title: Reservations options parameters update values
      type: object
      properties:
        OwnerCheckedIn:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: True if the owner of the reservation is checked in. (or `null` if the value should not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationUpdateOptionsParameters
    ReservationUpdateParameters:
      title: Reservation updates
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the reservation.
          format: uuid
        ChannelNumber:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: 'Number of the reservation within the Channel (i.e. OTA, GDS, CRS, etc) in case the reservation group originates there (e.g. Booking.com confirmation number) (or `null` if the channel number should not be updated).'
          nullable: true
        StartUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Reservation start in UTC timezone in ISO 8601 format. (or `null` if the start time should not be updated).
          nullable: true
        EndUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Reservation end in UTC timezone in ISO 8601 format. (or `null` if the end time should not be updated).
          nullable: true
        ReleasedUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Date when the optional reservation is released in UTC timezone in ISO 8601 format. (or `null` if the release time should not be updated).
          nullable: true
        PersonCounts:
          title: Person counts update value
          allOf:
            - $ref: '#/components/schemas/ReservationUpdatePersonCountParameters'
          description: 'Number of people per age category the reservation is for. If supplied, the person counts will be replaced. (or `null` if the person counts should not be updated).'
          nullable: true
        AssignedResourceId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: 'Identifier of the assigned `Resource`. If the assigned resource is locked, see `AssignedResourceLocked` for updating the assigned resource. (`null` if the assigned resource should not be updated)'
          nullable: true
        RequestedCategoryId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidUpdateValue'
          description: Identifier of the requested `ResourceCategory` (or `null` if resource category should not be updated).
          nullable: true
        TravelAgencyId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the `Company` that mediated the reservation (or `null` if travel agency should not be updated).
          nullable: true
        CompanyId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the `Company` on behalf of which the reservation was made (or `null` if company should not be updated).
          nullable: true
        BusinessSegmentId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the reservation `BusinessSegment` (or `null` if the business segment should not be updated).
          nullable: true
        Purpose:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: '`Purpose` of the reservation (or `null` if the purpose should not be updated).'
          nullable: true
        RateId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidUpdateValue'
          description: Identifier of the reservation `Rate` (or `null` if the rate should not be updated).
          nullable: true
        CreditCardId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of `CreditCard` belonging to `Customer` who owns the reservation.  (or `null` if the credit card should not be updated).
          nullable: true
        TimeUnitPrices:
          title: Time unit amount update value
          allOf:
            - $ref: '#/components/schemas/ReservationUpdatePerUnitPriceParameters'
          description: Prices for time units of the reservation. E.g. prices for the first or second night. (or `null` if the unit amounts should not be updated).
          nullable: true
        BookerId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Identifier of the `Customer` on whose behalf the reservation was made. (or `null` if the booker should not be updated).
          nullable: true
        AssignedResourceLocked:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          description: 'Whether the reservation should be locked to the assigned `Resource`. To reassign the reservation to a new `Resource`, first set `AssignedResourceLocked` to `false` to unlock the resource. Then, assign the reservation to a new `Resource` by setting `AssignedResourceId` to the new resource ID. (`null` if the lock should not be updated)'
          nullable: true
        AvailabilityBlockId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Unique identifier of the `AvailabilityBlock` the reservation is assigned to.
          nullable: true
        Options:
          title: Reservations options parameters update values
          allOf:
            - $ref: '#/components/schemas/ReservationUpdateOptionsParameters'
          description: Options of the reservations.
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationUpdateParameters
    ReservationUpdatePerUnitPriceParameters:
      title: Time unit amount update value
      type: object
      properties:
        Value:
          type: array
          items:
            $ref: '#/components/schemas/PerUnitPriceParameters'
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationUpdatePerUnitPriceParameters
    ReservationUpdatePersonCountParameters:
      title: Person counts update value
      type: object
      properties:
        Value:
          type: array
          items:
            $ref: '#/components/schemas/ReservationPersonCount'
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationUpdatePersonCountParameters
    ReservationsChannelManagerDetailsFilterParameters:
      title: Reservation channel manager details filter parameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ReservationIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Reservations`.
      additionalProperties: false
      x-schema-id: ReservationsChannelManagerDetailsFilterParameters
    ReservationsChannelManagerDetailsResult:
      title: Reservation channel manager details result
      required:
        - ChannelManagerDetails
      type: object
      properties:
        ChannelManagerDetails:
          type: array
          items:
            $ref: '#/components/schemas/ChannelManagerDetails'
          description: List of reservation channel manager details.
      additionalProperties: false
      x-schema-id: ReservationsChannelManagerDetailsResult
    ReservationsUpdateCustomerParameters:
      title: ReservationsUpdateCustomerParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerId
        - ReservationId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ReservationId:
          type: string
          description: Unique identifier of the reservation to be updated.
          format: uuid
        CustomerId:
          type: string
          description: 'Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).'
          format: uuid
      additionalProperties: false
      x-schema-id: ReservationsUpdateCustomerParameters
    Resource:
      title: Resource
      required:
        - CreatedUtc
        - Data
        - Descriptions
        - Directions
        - EnterpriseId
        - ExternalNames
        - Id
        - IsActive
        - Name
        - State
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the resource.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        IsActive:
          type: boolean
          description: Whether the resource is still active.
        ParentResourceId:
          type: string
          description: 'Identifier of the parent [Resource](https://mews-systems.gitbook.io/connector-api/operations/#resource) (e.g. room of a bed).'
          format: uuid
          nullable: true
        Name:
          minLength: 1
          type: string
          description: Name of the resource (e.g. room number).
        State:
          minLength: 1
          type: string
          description: State of the resource.
        Descriptions:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the description.
          x-schema-id: LocalizedStrings
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the resource in UTC timezone in ISO 8601 format.
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the resource in UTC timezone in ISO 8601 format.
        Data:
          title: Data
          type: object
          properties:
            Discriminator:
              type: string
            Value:
              oneOf:
                - $ref: '#/components/schemas/SpaceData'
                - type: object
                  additionalProperties: false
                - type: object
                  additionalProperties: false
          description: Additional data of the resource.
          x-coproduct: true
          x-schema-id: ResourceDataCoproductOfSpaceDataObjectDataPersonData
        ExternalNames:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of external name.
          x-schema-id: LocalizedStrings
        Directions:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of direction.
          x-schema-id: LocalizedStrings
      additionalProperties: false
      x-schema-id: Resource
    ResourceAccessToken:
      title: Resource access token
      required:
        - CreatedUtc
        - EnterpriseId
        - Id
        - IsActive
        - ServiceOrderId
        - Type
        - UpdatedUtc
        - ValidityEndUtc
        - ValidityStartUtc
      type: object
      properties:
        Id:
          type: string
          description: 'Unique identifier of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).'
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        ServiceOrderId:
          type: string
          description: Unique identifier of a reservation.
          format: uuid
        CompanionshipId:
          type: string
          description: 'Unique identifier of [Companionship](https://mews-systems.gitbook.io/connector-api/operations/companionships/#companionship).'
          format: uuid
          nullable: true
        ResourceId:
          type: string
          description: 'Unique identifier of [Resource](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource).'
          format: uuid
          nullable: true
        Type:
          $ref: '#/components/schemas/ResourceAccessTokenType'
        Value:
          type: string
          description: Value of resource access token
          nullable: true
        SerialNumber:
          type: string
          description: 'Serial number of [Resource access token type](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token-type).'
          nullable: true
        ValidityStartUtc:
          minLength: 1
          type: string
          description: Marks the start of interval in which the resource access token can be used.
          format: date-time
        ValidityEndUtc:
          minLength: 1
          type: string
          description: Marks the end of interval in which the resource access token can be used.
          format: date-time
        Permissions:
          title: ResourceAccessTokenPermissions
          allOf:
            - $ref: '#/components/schemas/ResourceAccessTokenPermissions'
          description: 'Specify permissions of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).'
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the resource access token in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the resource access token in UTC timezone in ISO 8601 format.
          format: date-time
        IsActive:
          type: boolean
          description: Whether the resource access token is still active.
      additionalProperties: false
      x-schema-id: ResourceAccessToken
    ResourceAccessTokenDeleteParameters:
      title: ResourceAccessTokenDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Ids:
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceAccessTokenDeleteParameters
    ResourceAccessTokenFilterParameters:
      title: ResourceAccessTokenFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ResourceAccessTokenIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Resource access tokens](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token). Required if no other filter is provided.'
          nullable: true
        ServiceOrderIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of reservations. Required if no other filter is provided.
          nullable: true
        CollidingUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            type: string
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceAccessTokenFilterParameters
    ResourceAccessTokenParameters:
      title: ResourceAccessTokenParameters
      type: object
      properties:
        ServiceOrderId:
          type: string
          format: uuid
        CompanionshipId:
          type: string
          format: uuid
          nullable: true
        ResourceId:
          type: string
          format: uuid
          nullable: true
        Value:
          type: string
          nullable: true
        Type:
          type: string
          nullable: true
        SerialNumber:
          type: string
          nullable: true
        ValidityStartUtc:
          type: string
          nullable: true
        ValidityEndUtc:
          type: string
          nullable: true
        Permissions:
          title: ResourceAccessTokenPermissionsParameters
          allOf:
            - $ref: '#/components/schemas/ResourceAccessTokenPermissionsParameters'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceAccessTokenParameters
    ResourceAccessTokenPermissions:
      title: ResourceAccessTokenPermissions
      type: object
      properties:
        Bed:
          type: boolean
        Room:
          type: boolean
        Floor:
          type: boolean
        Building:
          type: boolean
      additionalProperties: false
      description: 'Specify permissions of [Resource access token](https://mews-systems.gitbook.io/connector-api/operations/#resource-access-token).'
      x-schema-id: ResourceAccessTokenPermissions
    ResourceAccessTokenPermissionsParameters:
      title: ResourceAccessTokenPermissionsParameters
      type: object
      properties:
        Bed:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
        Room:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
        Floor:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
        Building:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceAccessTokenPermissionsParameters
    ResourceAccessTokenResult:
      title: ResourceAccessTokenResult
      type: object
      properties:
        ResourceAccessTokens:
          type: array
          items:
            $ref: '#/components/schemas/ResourceAccessToken'
          description: Resource access tokens.
          nullable: true
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest item returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older tokens. If [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) is specified in the request message, then Cursor will always be included in the response message.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceAccessTokenResult
    ResourceAccessTokenType:
      enum:
        - PinCode
        - RfidTag
      type: string
    ResourceAccessTokenUpdateParameters:
      title: ResourceAccessTokenUpdateParameters
      type: object
      properties:
        ResourceAccessTokenId:
          type: string
          format: uuid
        ValidityStartUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
        ValidityEndUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
        Value:
          title: String update value
          maxLength: 255
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Value of resource access token (or null if the value should not be updated).
          nullable: true
        Permissions:
          title: ResourceAccessTokenPermissionsParameters
          allOf:
            - $ref: '#/components/schemas/ResourceAccessTokenPermissionsParameters'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceAccessTokenUpdateParameters
    ResourceAvailabilityMetricTypeEnum:
      title: Service availability metrics
      enum:
        - OutOfOrderBlocks
        - PublicAvailabilityAdjustment
        - OtherServiceReservationCount
        - Occupied
        - ConfirmedReservations
        - OptionalReservations
        - BlockAvailability
        - AllocatedBlockAvailability
        - UsableResources
        - ActiveResources
      type: string
      description: "\n\nOutOfOrderBlocks (Number of resources that are out of order for the resource category (see `Resource Block`).)\n\nPublicAvailabilityAdjustment (Number of resources marked as manual availability adjustments.)\n\nOtherServiceReservationCount (Number of resources occupied by another service.)\n\nOccupied (Number of bookings that have been assigned to the resource category (i.e. reservations and blocks).)\n\nConfirmedReservations (Number of confirmed reservations that have been assigned to the resource category.)\n\nOptionalReservations (Number of optional reservations that have been assigned to the resource category.)\n\nBlockAvailability (Number of blocked resources (from an availability block / allotment).)\n\nAllocatedBlockAvailability (Number of blocked resources that are in a deducting state (from an availability block / allotment).)\n\nUsableResources (Number of usable resources (i.e. which are not out of order).)\n\nActiveResources (Number of active resources.)"
      x-enumNames:
        - OutOfOrderBlocks
        - PublicAvailabilityAdjustment
        - OtherServiceReservationCount
        - Occupied
        - ConfirmedReservations
        - OptionalReservations
        - BlockAvailability
        - AllocatedBlockAvailability
        - UsableResources
        - ActiveResources
      x-enumDescriptions:
        - Number of resources that are out of order for the resource category (see `Resource Block`).
        - Number of resources marked as manual availability adjustments.
        - Number of resources occupied by another service.
        - Number of bookings that have been assigned to the resource category (i.e. reservations and blocks).
        - Number of confirmed reservations that have been assigned to the resource category.
        - Number of optional reservations that have been assigned to the resource category.
        - Number of blocked resources (from an availability block / allotment).
        - Number of blocked resources that are in a deducting state (from an availability block / allotment).
        - Number of usable resources (i.e. which are not out of order).
        - Number of active resources.
    ResourceBlock:
      title: Resource block
      required:
        - AssignedResourceId
        - CreatedUtc
        - EndUtc
        - EnterpriseId
        - Id
        - IsActive
        - Name
        - StartUtc
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the block.
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        AssignedResourceId:
          type: string
          description: 'Unique identifier of the assigned [Resource](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource).'
          format: uuid
        IsActive:
          type: boolean
          description: Whether the block is still active.
        Type:
          $ref: '#/components/schemas/ResourceBlockType'
        StartUtc:
          minLength: 1
          type: string
          description: Start of the block in UTC timezone in ISO 8601 format.
        EndUtc:
          minLength: 1
          type: string
          description: End of the block in UTC timezone in ISO 8601 format.
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the block in UTC timezone in ISO 8601 format.
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the block in UTC timezone in ISO 8601 format.
        DeletedUtc:
          type: string
          description: Date and time when the block was deleted (for inactive ones) in UTC timezone in ISO 8601 format.
          nullable: true
        Name:
          minLength: 1
          type: string
          description: Name of the resource block.
        Notes:
          type: string
          description: Note describing the resource block.
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceBlock
    ResourceBlockAddParameters:
      title: ResourceBlockAddParameters
      required:
        - EndUtc
        - Name
        - ResourceId
        - StartUtc
        - Type
      type: object
      properties:
        ResourceId:
          type: string
          format: uuid
        Name:
          minLength: 1
          type: string
        Type:
          $ref: '#/components/schemas/ResourceBlockType'
        StartUtc:
          minLength: 1
          type: string
          format: date-time
        EndUtc:
          minLength: 1
          type: string
          format: date-time
        Notes:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceBlockAddParameters
    ResourceBlockDeleteParameters:
      title: ResourceBlockDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ResourceBlockIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ResourceBlockIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifier of [Resource blocks](https://mews-systems.gitbook.io/connector-api/operations/#resource-block) to be removed.'
      additionalProperties: false
      x-schema-id: ResourceBlockDeleteParameters
    ResourceBlockExtent:
      title: ResourceBlockExtent
      type: object
      properties:
        Inactive:
          type: boolean
      additionalProperties: false
      description: Extent of data to be returned.
      x-schema-id: ResourceBlockExtent
    ResourceBlockParameters:
      title: ResourceBlockParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        Extent:
          title: ResourceBlockExtent
          allOf:
            - $ref: '#/components/schemas/ResourceBlockExtent'
          description: Extent of data to be returned.
          nullable: true
          deprecated: true
          x-deprecatedMessage: 'Use ActivityStates with `["Active", "Deleted"]` instead.'
        ResourceBlockIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the requested [Resource blocks](https://mews-systems.gitbook.io/connector-api/operations/#resource-block).'
          nullable: true
        AssignedResourceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the requested Assigned [Resources](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource).'
          nullable: true
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records. Defaults to `Active` if not specified.'
          nullable: true
        CollidingUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: ResourceBlockParameters
    ResourceBlockResult:
      title: ResourceBlockResult
      required:
        - ResourceBlocks
      type: object
      properties:
        ResourceBlocks:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceBlock'
          description: Resource blocks added.
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceBlockResult
    ResourceBlockType:
      enum:
        - OutOfOrder
        - InternalUse
      type: string
    ResourceCategory:
      title: Resource category
      required:
        - Capacity
        - Classification
        - Descriptions
        - EnterpriseId
        - ExtraCapacity
        - Id
        - IsActive
        - Names
        - Ordering
        - ServiceId
        - ShortNames
        - Type
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the category.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) of the resource category.'
          format: uuid
        IsActive:
          type: boolean
          description: Whether the category is still active.
        Type:
          $ref: '#/components/schemas/ResourceCategoryType'
        Classification:
          $ref: '#/components/schemas/ResourceClassification'
        Names:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the name.
          x-schema-id: LocalizedStrings
        ShortNames:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the short name.
          x-schema-id: LocalizedStrings
        Descriptions:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the description.
          x-schema-id: LocalizedStrings
        Ordering:
          type: integer
          format: int32
        Capacity:
          type: integer
          format: int32
        ExtraCapacity:
          type: integer
          description: Extra capacity that can be served (e.g. extra bed count).
          format: int32
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the resource category from external system.
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategory
    ResourceCategoryAssignment:
      title: Resource category assignment
      required:
        - CategoryId
        - CreatedUtc
        - Id
        - IsActive
        - ResourceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the assignment.
          format: uuid
        IsActive:
          type: boolean
          description: Whether the assignment is still active.
        ResourceId:
          type: string
          description: 'Unique identifier of the [Resource](https://mews-systems.gitbook.io/connector-api/operations/#resource) assigned to the Resource category.'
          format: uuid
        CategoryId:
          type: string
          description: 'Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/#resource-category).'
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the assignment in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the assignment in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: ResourceCategoryAssignment
    ResourceCategoryAssignmentFilterParameters:
      title: ResourceCategoryAssignmentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ResourceCategoryIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ResourceCategoryAssignmentIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Resource category assignment](https://mews-systems.gitbook.io/connector-api/operations/resourcecategories/#resource-category-assignment).'
          nullable: true
        ResourceCategoryIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Resource categories](https://mews-systems.gitbook.io/connector-api/operations/#resource-category) to which the resource category assignment belong.'
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the resource category assignments were updated.
          nullable: true
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
        ResourceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of resources to which the resource category assignments belong.
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategoryAssignmentFilterParameters
    ResourceCategoryAssignmentResult:
      title: ResourceCategoryAssignmentResult
      required:
        - ResourceCategoryAssignments
      type: object
      properties:
        ResourceCategoryAssignments:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategoryAssignment'
          description: Resource category assignments.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest resource category assignment returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older resource category assignments.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategoryAssignmentResult
    ResourceCategoryAvailabilityV20240122:
      title: Resource category availability (ver 2024-01-22)
      required:
        - Metrics
        - ResourceCategoryId
      type: object
      properties:
        ResourceCategoryId:
          type: string
          description: 'Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources#resource-category).'
          format: uuid
        Metrics:
          title: ResourceAvailabilityMetricTypeInt32IEnumerableIDictionary
          type: object
          properties:
            OutOfOrderBlocks:
              type: array
              items:
                type: integer
                format: int32
            PublicAvailabilityAdjustment:
              type: array
              items:
                type: integer
                format: int32
            OtherServiceReservationCount:
              type: array
              items:
                type: integer
                format: int32
            Occupied:
              type: array
              items:
                type: integer
                format: int32
            ConfirmedReservations:
              type: array
              items:
                type: integer
                format: int32
            OptionalReservations:
              type: array
              items:
                type: integer
                format: int32
            BlockAvailability:
              type: array
              items:
                type: integer
                format: int32
            AllocatedBlockAvailability:
              type: array
              items:
                type: integer
                format: int32
            UsableResources:
              type: array
              items:
                type: integer
                format: int32
            ActiveResources:
              type: array
              items:
                type: integer
                format: int32
          additionalProperties: false
          description: 'Dictionary keys are names of [Service availability metrics](https://mews-systems.gitbook.io/connector-api/operations/services#service-availability-metrics), values are arrays of integers with metric values for corresponding time unit in `TimeUnitStartsUtc`.'
          x-schema-id: ResourceAvailabilityMetricTypeInt32IEnumerableIDictionary
      additionalProperties: false
      x-schema-id: ResourceCategoryAvailabilityV20240122
    ResourceCategoryFilterParameters:
      title: ResourceCategoryFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ResourceCategoryIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Resource categories](https://mews-systems.gitbook.io/connector-api/operations/#resource-category).'
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) to which the resource categories belong.'
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the resource categories were updated.
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategoryFilterParameters
    ResourceCategoryImageAssignment:
      title: Resource category image assignment
      required:
        - CategoryId
        - CreatedUtc
        - Id
        - ImageId
        - IsActive
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the assignment.
          format: uuid
        IsActive:
          type: boolean
          description: Whether the assignment is still active.
        CategoryId:
          type: string
          description: 'Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/#resource-category).'
          format: uuid
        ImageId:
          type: string
          description: Unique identifier of the image assigned to the Resource category.
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the assignment in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the assignment in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: ResourceCategoryImageAssignment
    ResourceCategoryImageAssignmentFilterParameters:
      title: ResourceCategoryImageAssignmentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ResourceCategoryIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ResourceCategoryImageAssignmentIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Resource category image assignments](https://mews-systems.gitbook.io/connector-api/operations/resourcecategories/#resource-category-image-assignment).'
          nullable: true
        ResourceCategoryIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Resource categories](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource-category) to which the resource category image assignments belong.'
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the resource category image assignments were updated.
          nullable: true
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategoryImageAssignmentFilterParameters
    ResourceCategoryImageAssignmentResult:
      title: ResourceCategoryImageAssignmentResult
      required:
        - ResourceCategoryImageAssignments
      type: object
      properties:
        ResourceCategoryImageAssignments:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategoryImageAssignment'
          description: Resource category image assignments.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest resource category image assignment returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older resource category image assignments.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategoryImageAssignmentResult
    ResourceCategoryOccupancyState:
      title: Resource category occupancy state
      required:
        - ResourceCategoryId
        - ResourceOccupancyStates
      type: object
      properties:
        ResourceCategoryId:
          type: string
          description: Unique identifier of the 'Resource category'.
          format: uuid
        ResourceOccupancyStates:
          type: array
          items:
            $ref: '#/components/schemas/ResourceOccupancyState'
          description: The resource occupancy states.
      additionalProperties: false
      description: The list of `ResourceOccupancyState`s grouped by resource category.
      x-schema-id: ResourceCategoryOccupancyState
    ResourceCategoryResult:
      title: ResourceCategoryResult
      required:
        - ResourceCategories
      type: object
      properties:
        ResourceCategories:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategory'
          description: Resource categories of the resources.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest resource category returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older resource categories.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategoryResult
    ResourceCategoryType:
      title: Resource category type
      enum:
        - Room
        - Bed
        - Dorm
        - Apartment
        - Suite
        - Villa
        - Site
        - Office
        - MeetingRoom
        - ParkingSpot
        - Desk
        - TeamArea
        - Membership
        - Tent
        - CaravanOrRV
        - UnequippedCampsite
        - Bike
        - ExtraBed
        - Cot
        - Crib
        - ConferenceRoom
        - Rooftop
        - Garden
        - Restaurant
        - Amphitheater
        - PrivateSpaces
      type: string
    ResourceCategoryTypeEnum:
      title: Resource category type
      enum:
        - Room
        - Bed
        - Dorm
        - Apartment
        - Suite
        - Villa
        - Site
        - Office
        - MeetingRoom
        - ParkingSpot
        - Desk
        - TeamArea
        - Membership
        - Tent
        - CaravanOrRV
        - UnequippedCampsite
        - Bike
        - ExtraBed
        - Cot
        - Crib
        - ConferenceRoom
        - Rooftop
        - Garden
        - Restaurant
        - Amphitheater
        - PrivateSpaces
      type: string
      description: "\n\nRoom\n\nBed\n\nDorm\n\nApartment\n\nSuite\n\nVilla\n\nSite\n\nOffice\n\nMeetingRoom\n\nParkingSpot\n\nDesk\n\nTeamArea\n\nMembership\n\nTent\n\nCaravanOrRV\n\nUnequippedCampsite\n\nBike\n\nExtraBed\n\nCot\n\nCrib\n\nConferenceRoom\n\nRooftop\n\nGarden\n\nRestaurant\n\nAmphitheater\n\nPrivateSpaces"
      x-enumNames:
        - Room
        - Bed
        - Dorm
        - Apartment
        - Suite
        - Villa
        - Site
        - Office
        - MeetingRoom
        - ParkingSpot
        - Desk
        - TeamArea
        - Membership
        - Tent
        - CaravanOrRV
        - UnequippedCampsite
        - Bike
        - ExtraBed
        - Cot
        - Crib
        - ConferenceRoom
        - Rooftop
        - Garden
        - Restaurant
        - Amphitheater
        - PrivateSpaces
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
    ResourceClassification:
      enum:
        - StandardSingle
        - StandardDouble
        - SuperiorTwin
        - SuperiorDouble
        - JuniorSuite
        - SharedOrDorm
        - Other
        - SuperiorSingle
        - Triple
        - Family
        - StandardTwin
        - Studio
        - SuperiorTripleRoom
        - OneBedroomApartment
        - ThreeBedroomsApartment
        - TwoBedroomsApartment
      type: string
    ResourceDataDiscriminator:
      enum:
        - Space
        - Object
        - Person
      type: string
    ResourceExtent:
      title: ResourceExtent
      type: object
      properties:
        Resources:
          type: boolean
        ResourceCategories:
          type: boolean
          deprecated: true
          x-deprecatedMessage: Use `resourceCategories/getAll`
        ResourceCategoryAssignments:
          type: boolean
          deprecated: true
          x-deprecatedMessage: Use `resourceCategoryAssignments/getAll`
        ResourceCategoryImageAssignments:
          type: boolean
          deprecated: true
          x-deprecatedMessage: Use `resourceCategoryImageAssignments/getAll`
        ResourceFeatures:
          type: boolean
          deprecated: true
          x-deprecatedMessage: Use `resourceFeatures/getAll`
        ResourceFeatureAssignments:
          type: boolean
          deprecated: true
          x-deprecatedMessage: Use `resourceFeatureAssignments/getAll`
        Inactive:
          type: boolean
      additionalProperties: false
      description: Extent of data to be returned.
      x-schema-id: ResourceExtent
    ResourceFeature:
      title: Resource feature
      required:
        - Classification
        - CreatedUtc
        - Descriptions
        - Id
        - IsActive
        - Names
        - ServiceId
        - ShortNames
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the feature.
          format: uuid
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service).'
          format: uuid
        IsActive:
          type: boolean
          description: Whether the resource feature is still active.
        Classification:
          $ref: '#/components/schemas/ResourceFeatureClassification'
        Names:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the name.
          x-schema-id: LocalizedStrings
        ShortNames:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the short name.
          x-schema-id: LocalizedStrings
        Descriptions:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the description.
          x-schema-id: LocalizedStrings
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: ResourceFeature
    ResourceFeatureAssignment:
      title: Resource feature assignment
      required:
        - CreatedUtc
        - FeatureId
        - Id
        - IsActive
        - ResourceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the assignment.
          format: uuid
        IsActive:
          type: boolean
          description: Whether the assignment is still active.
        ResourceId:
          type: string
          description: 'Unique identifier of the [Resource](https://mews-systems.gitbook.io/connector-api/operations/resources/#resource).'
          format: uuid
        FeatureId:
          type: string
          description: 'Unique identifier of the [Resource feature](https://mews-systems.gitbook.io/connector-api/operations/#resource-feature) assigned to the Resource.'
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the assignment in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the assignment in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: ResourceFeatureAssignment
    ResourceFeatureAssignmentFilterParameters:
      title: ResourceFeatureAssignmentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ResourceFeatureIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ResourceFeatureAssignmentIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ResourceFeatureIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Resource features](https://mews-systems.gitbook.io/connector-api/operations/#resource-feature) to which the resource feature assignments belong.'
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceFeatureAssignmentFilterParameters
    ResourceFeatureAssignmentResult:
      title: ResourceFeatureAssignmentResult
      required:
        - ResourceFeatureAssignments
      type: object
      properties:
        ResourceFeatureAssignments:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceFeatureAssignment'
          description: Resource feature assignments.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest resource feature assignments returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older resource feature assignments.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceFeatureAssignmentResult
    ResourceFeatureClassification:
      title: Resource Feature Classification
      enum:
        - SeaView
        - RiverView
        - OceanView
        - TwinBeds
        - DoubleBed
        - RollawayBed
        - UpperBed
        - LowerBed
        - Balcony
        - AccessibleBathroom
        - AccessibleRoom
        - ElevatorAccess
        - HighFloor
        - Kitchenette
        - AirConditioning
        - PrivateJacuzzi
        - PrivateSauna
        - EnsuiteRoom
        - PrivateBathroom
        - SharedBathroom
      type: string
    ResourceFeatureClassificationEnum:
      title: Resource Feature Classification
      enum:
        - SeaView
        - RiverView
        - OceanView
        - TwinBeds
        - DoubleBed
        - RollawayBed
        - UpperBed
        - LowerBed
        - Balcony
        - AccessibleBathroom
        - AccessibleRoom
        - ElevatorAccess
        - HighFloor
        - Kitchenette
        - AirConditioning
        - PrivateJacuzzi
        - PrivateSauna
        - EnsuiteRoom
        - PrivateBathroom
        - SharedBathroom
      type: string
      description: "\n\nSeaView\n\nRiverView\n\nOceanView\n\nTwinBeds\n\nDoubleBed\n\nRollawayBed\n\nUpperBed\n\nLowerBed\n\nBalcony\n\nAccessibleBathroom\n\nAccessibleRoom\n\nElevatorAccess\n\nHighFloor\n\nKitchenette\n\nAirConditioning\n\nPrivateJacuzzi\n\nPrivateSauna\n\nEnsuiteRoom\n\nPrivateBathroom\n\nSharedBathroom"
      x-enumNames:
        - SeaView
        - RiverView
        - OceanView
        - TwinBeds
        - DoubleBed
        - RollawayBed
        - UpperBed
        - LowerBed
        - Balcony
        - AccessibleBathroom
        - AccessibleRoom
        - ElevatorAccess
        - HighFloor
        - Kitchenette
        - AirConditioning
        - PrivateJacuzzi
        - PrivateSauna
        - EnsuiteRoom
        - PrivateBathroom
        - SharedBathroom
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
    ResourceFeatureFilterParameters:
      title: ResourceFeatureFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ResourceFeatureIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Resource features](https://mews-systems.gitbook.io/connector-api/operations/#resource-feature).'
          nullable: true
        ServiceIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) to which the resource features belong.'
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted or both records.'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceFeatureFilterParameters
    ResourceFeatureResult:
      title: ResourceFeatureResult
      required:
        - ResourceFeatures
      type: object
      properties:
        ResourceFeatures:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceFeature'
          description: Resource features.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest resource features returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older resource feature.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceFeatureResult
    ResourceFilterParameters:
      title: ResourceFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ResourceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the requested [Resources](https://mews-systems.gitbook.io/connector-api/operations/#resource).'
          nullable: true
        Names:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          nullable: true
        Extent:
          title: ResourceExtent
          allOf:
            - $ref: '#/components/schemas/ResourceExtent'
          description: Extent of data to be returned.
          nullable: true
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: ResourceFilterParameters
    ResourceOccupancyState:
      title: Resource occupancy state
      required:
        - OccupancyState
        - ResourceId
        - ResourceState
      type: object
      properties:
        ResourceId:
          type: string
          description: Unique identifier of the resource.
          format: uuid
        ResourceState:
          title: Resource State
          allOf:
            - $ref: '#/components/schemas/ResourceStateEnum'
          description: "Resource state of the resource.\n\nDirty\n\nClean\n\nInspected\n\nOutOfService\n\nOutOfOrder"
          x-enumNames:
            - Dirty
            - Clean
            - Inspected
            - OutOfService
            - OutOfOrder
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
        OccupancyState:
          title: Occupancy State
          allOf:
            - $ref: '#/components/schemas/OccupancyStateEnum'
          description: "State of the resource.\n\nVacant\n\nReservedLocked\n\nReserved\n\nInternalUse\n\nOutOfOrder"
          x-enumNames:
            - Vacant
            - ReservedLocked
            - Reserved
            - InternalUse
            - OutOfOrder
          x-enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
      additionalProperties: false
      description: The occupancy state of a `Resource`.
      x-schema-id: ResourceOccupancyState
    ResourceResult:
      title: ResourceResult
      type: object
      properties:
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          description: The resources of the enterprise.
          nullable: true
        ResourceCategories:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategory'
          description: Categories of resources in the enterprise. **Deprecated!**
          nullable: true
          deprecated: true
        ResourceCategoryAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategoryAssignment'
          description: Assignments of resources to categories. **Deprecated!**
          nullable: true
          deprecated: true
        ResourceCategoryImageAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategoryImageAssignment'
          description: Assignments of images to categories. **Deprecated!**
          nullable: true
          deprecated: true
        ResourceFeatures:
          type: array
          items:
            $ref: '#/components/schemas/ResourceFeature'
          description: Features of resources in the enterprise. **Deprecated!**
          nullable: true
          deprecated: true
        ResourceFeatureAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ResourceFeatureAssignment'
          description: Assignments of resource features to resources. **Deprecated!**
          nullable: true
          deprecated: true
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceResult
    ResourceStateEnum:
      title: Resource State
      enum:
        - Dirty
        - Clean
        - Inspected
        - OutOfService
        - OutOfOrder
      type: string
      description: "\n\nDirty\n\nClean\n\nInspected\n\nOutOfService\n\nOutOfOrder"
      x-enumNames:
        - Dirty
        - Clean
        - Inspected
        - OutOfService
        - OutOfOrder
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
    ResourceUpdateParameters:
      title: ResourceUpdateParameters
      required:
        - ResourceId
      type: object
      properties:
        ResourceId:
          type: string
          format: uuid
        Name:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
        ParentResourceId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
        Data:
          title: Data
          type: object
          properties:
            Discriminator:
              $ref: '#/components/schemas/ResourceDataDiscriminator'
            Value:
              oneOf:
                - $ref: '#/components/schemas/SpaceData'
                - type: object
                  additionalProperties: false
                - type: object
                  additionalProperties: false
          x-coproduct: true
          x-schema-id: ResourceUpdateParametersDataCoproductOfResourceDataDiscriminator
        State:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
        StateReason:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceUpdateParameters
    ResourcesOccupancyStateFilterParameters:
      title: ResourcesOccupancyStateFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ResourceCategoryIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ResourceCategoryIds:
          maxItems: 5
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Resource category`.
        ResourceStates:
          type: array
          items:
            $ref: '#/components/schemas/ResourceStateEnum'
          description: States of the `Resource`
          nullable: true
        OccupancyStates:
          type: array
          items:
            $ref: '#/components/schemas/OccupancyStateEnum'
          description: Occupancy states of the `Resource`.
          nullable: true
      additionalProperties: false
      x-schema-id: ResourcesOccupancyStateFilterParameters
    ResourcesOccupancyStateResult:
      title: ResourcesOccupancyStateResult
      required:
        - ResourceCategoryOccupancyStates
      type: object
      properties:
        ResourceCategoryOccupancyStates:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategoryOccupancyState'
          description: The resource categories.
      additionalProperties: false
      x-schema-id: ResourcesOccupancyStateResult
    Restriction:
      title: Restriction
      required:
        - Conditions
        - Id
        - Origin
        - ServiceId
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the restriction.
          format: uuid
        ServiceId:
          type: string
          description: Unique identifier of the `Service`.
          format: uuid
        ExternalIdentifier:
          type: string
          description: External identifier of the restriction.
          nullable: true
        Origin:
          title: Restriction origin
          allOf:
            - $ref: '#/components/schemas/RestrictionOriginEnum'
          description: "Restriction origin\n\nUser (Restriction was created by a user in Mews.)\n\nIntegration (Restriction was created by a 3rd-party integration.)"
          x-enumNames:
            - User
            - Integration
          x-enumDescriptions:
            - Restriction was created by a user in Mews.
            - Restriction was created by a 3rd-party integration.
        Conditions:
          title: Restriction condition
          allOf:
            - $ref: '#/components/schemas/RestrictionConditions'
          description: The conditions or rules that must be met by a reservation for the restriction to apply.
        Exceptions:
          title: Restriction exception
          allOf:
            - $ref: '#/components/schemas/RestrictionExceptions'
          description: 'The rules that prevent the restriction from applying to a reservation, even when all conditions have been met.'
          nullable: true
      additionalProperties: false
      description: The added restriction.
      x-schema-id: Restriction
    RestrictionAdditionResult:
      title: RestrictionAdditionResult
      type: object
      properties:
        Restrictions:
          type: array
          items:
            $ref: '#/components/schemas/AddedRestriction'
          description: The added restrictions.
          nullable: true
      additionalProperties: false
      x-schema-id: RestrictionAdditionResult
    RestrictionClearData:
      title: Restriction clear data
      required:
        - Days
        - Type
      type: object
      properties:
        Type:
          title: Restriction type
          allOf:
            - $ref: '#/components/schemas/RestrictionTypeEnum'
          description: "Restriction type.\n\nStay (Guests can't stay within specified dates.)\n\nStart (Guests can't check in within specified dates.)\n\nEnd (Guests can't check out within specified dates.)"
          x-enumNames:
            - Stay
            - Start
            - End
          x-enumDescriptions:
            - Guests can't stay within specified dates.
            - Guests can't check in within specified dates.
            - Guests can't check out within specified dates.
        ExactRateId:
          type: string
          description: Unique identifier of the exact `Rate` to which the restriction applies.
          nullable: true
          x-schema-id: HybridIdentifier
        BaseRateId:
          type: string
          description: Unique identifier of the base `Rate` to which the restriction applies.
          nullable: true
          x-schema-id: HybridIdentifier
        RateGroupId:
          type: string
          description: Unique identifier of the `Rate group` to which the restriction applies.
          nullable: true
          x-schema-id: HybridIdentifier
        ResourceCategoryId:
          type: string
          description: Unique identifier of the `Resource category` to which the restriction applies.
          nullable: true
          x-schema-id: HybridIdentifier
        ResourceCategoryType:
          allOf:
            - $ref: '#/components/schemas/ResourceCategoryTypeEnum'
          description: "Name of the `Resource category type` to which the restriction applies.\n\nRoom\n\nBed\n\nDorm\n\nApartment\n\nSuite\n\nVilla\n\nSite\n\nOffice\n\nMeetingRoom\n\nParkingSpot\n\nDesk\n\nTeamArea\n\nMembership\n\nTent\n\nCaravanOrRV\n\nUnequippedCampsite\n\nBike\n\nExtraBed\n\nCot\n\nCrib\n\nConferenceRoom\n\nRooftop\n\nGarden\n\nRestaurant\n\nAmphitheater\n\nPrivateSpaces"
          nullable: true
        StartUtc:
          type: string
          description: 'Start date of the time interval for which the restriction conditions should be applied. This must be in UTC timezone in ISO 8601 format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization#datetimes).'
          format: date-time
          nullable: true
        EndUtc:
          type: string
          description: 'End date of the time interval for which the restriction conditions should be applied. This must be in UTC timezone in ISO 8601 format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization#datetimes).'
          format: date-time
          nullable: true
        Days:
          title: Days parameters
          allOf:
            - $ref: '#/components/schemas/DaysParameters'
          description: The days of week to which the restriction applies.
      additionalProperties: false
      x-schema-id: RestrictionClearData
    RestrictionConditions:
      title: Restriction condition
      required:
        - Type
      type: object
      properties:
        Type:
          title: Restriction type
          allOf:
            - $ref: '#/components/schemas/RestrictionTypeEnum'
          description: "Restriction type.\n\nStay (Guests can't stay within specified dates.)\n\nStart (Guests can't check in within specified dates.)\n\nEnd (Guests can't check out within specified dates.)"
          x-enumNames:
            - Stay
            - Start
            - End
          x-enumDescriptions:
            - Guests can't stay within specified dates.
            - Guests can't check in within specified dates.
            - Guests can't check out within specified dates.
        ExactRateId:
          type: string
          description: Unique identifier of the restricted exact `Rate`.
          format: uuid
          nullable: true
        BaseRateId:
          type: string
          description: Unique identifier of the restricted base `Rate`.
          format: uuid
          nullable: true
        RateGroupId:
          type: string
          description: Unique identifier of the restricted `Rate group`.
          format: uuid
          nullable: true
        ResourceCategoryId:
          type: string
          description: Unique identifier of the restricted `Resource category`.
          format: uuid
          nullable: true
        ResourceCategoryType:
          allOf:
            - $ref: '#/components/schemas/ResourceCategoryTypeEnum'
          description: "Name of the restricted `Resource category type`.\n\nRoom\n\nBed\n\nDorm\n\nApartment\n\nSuite\n\nVilla\n\nSite\n\nOffice\n\nMeetingRoom\n\nParkingSpot\n\nDesk\n\nTeamArea\n\nMembership\n\nTent\n\nCaravanOrRV\n\nUnequippedCampsite\n\nBike\n\nExtraBed\n\nCot\n\nCrib\n\nConferenceRoom\n\nRooftop\n\nGarden\n\nRestaurant\n\nAmphitheater\n\nPrivateSpaces"
          nullable: true
        StartUtc:
          type: string
          description: 'Start date of the restriction time interval, specified in ISO 8601 format and adjusted to UTC - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization#datetimes) for important information on format and implementation.'
          nullable: true
        EndUtc:
          type: string
          description: 'End date of the restriction time interval, specified in ISO 8601 format and adjusted to UTC - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization#datetimes) for important information on format and implementation.'
          nullable: true
        Days:
          type: array
          items:
            type: string
          description: The restricted days of week. Defaults to all days when not provided. Ignored when the service uses a time unit longer than a day.
          nullable: true
        Hours:
          title: Hours
          allOf:
            - $ref: '#/components/schemas/Hours'
          description: The restricted hours. Defaults to all hours when not provided.
          nullable: true
      additionalProperties: false
      description: The conditions or rules that must be met by a reservation for the restriction to apply.
      x-schema-id: RestrictionConditions
    RestrictionConditionsData:
      title: Restriction condition data
      required:
        - Type
      type: object
      properties:
        Type:
          title: Restriction type
          allOf:
            - $ref: '#/components/schemas/RestrictionTypeEnum'
          description: "Restriction type.\n\nStay (Guests can't stay within specified dates.)\n\nStart (Guests can't check in within specified dates.)\n\nEnd (Guests can't check out within specified dates.)"
          x-enumNames:
            - Stay
            - Start
            - End
          x-enumDescriptions:
            - Guests can't stay within specified dates.
            - Guests can't check in within specified dates.
            - Guests can't check out within specified dates.
        ExactRateId:
          type: string
          description: Unique identifier of the exact `Rate` to which the restriction applies.
          nullable: true
          x-schema-id: HybridIdentifier
        BaseRateId:
          type: string
          description: Unique identifier of the base `Rate` to which the restriction applies.
          nullable: true
          x-schema-id: HybridIdentifier
        RateGroupId:
          type: string
          description: Unique identifier of the `Rate group` to which the restriction applies.
          nullable: true
          x-schema-id: HybridIdentifier
        ResourceCategoryId:
          type: string
          description: Unique identifier of the `Resource category` to which the restriction applies.
          nullable: true
          x-schema-id: HybridIdentifier
        ResourceCategoryType:
          allOf:
            - $ref: '#/components/schemas/ResourceCategoryTypeEnum'
          description: "Name of the `Resource category type` to which the restriction applies.\n\nRoom\n\nBed\n\nDorm\n\nApartment\n\nSuite\n\nVilla\n\nSite\n\nOffice\n\nMeetingRoom\n\nParkingSpot\n\nDesk\n\nTeamArea\n\nMembership\n\nTent\n\nCaravanOrRV\n\nUnequippedCampsite\n\nBike\n\nExtraBed\n\nCot\n\nCrib\n\nConferenceRoom\n\nRooftop\n\nGarden\n\nRestaurant\n\nAmphitheater\n\nPrivateSpaces"
          nullable: true
        StartUtc:
          type: string
          description: 'Start date of the time interval for which the restriction conditions should be applied. This must be in UTC timezone in ISO 8601 format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization#datetimes).'
          format: date-time
          nullable: true
        EndUtc:
          type: string
          description: 'End date of the time interval for which the restriction conditions should be applied. This must be in UTC timezone in ISO 8601 format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization#datetimes).'
          format: date-time
          nullable: true
        Days:
          type: array
          items:
            type: string
          description: The restricted days of week. Defaults to all days when not provided. Ignored when the service uses a time unit longer than a day.
          nullable: true
        Hours:
          title: Hours
          allOf:
            - $ref: '#/components/schemas/Hours'
          description: The restricted hours. Defaults to all hours when not provided.
          nullable: true
      additionalProperties: false
      x-schema-id: RestrictionConditionsData
    RestrictionData:
      title: Restriction data
      required:
        - Conditions
      type: object
      properties:
        Identifier:
          type: string
          description: Identifier of the restriction within the transaction.
          nullable: true
        ExternalIdentifier:
          type: string
          description: External identifier of the restriction.
          nullable: true
        Conditions:
          title: Restriction condition data
          allOf:
            - $ref: '#/components/schemas/RestrictionConditionsData'
          description: The conditions or rules that must be met by a reservation for the restriction to apply.
        Exceptions:
          title: Restriction exception data
          allOf:
            - $ref: '#/components/schemas/RestrictionExceptionsData'
          description: 'The rules that prevent the restriction from applying to a reservation, even when all conditions have been met.'
          nullable: true
      additionalProperties: false
      x-schema-id: RestrictionData
    RestrictionExceptions:
      title: Restriction exception
      type: object
      properties:
        MinAdvance:
          type: string
          description: 'The minimum time before the reservation starts, you can reserve in ISO 8601 duration format.'
          nullable: true
        MaxAdvance:
          type: string
          description: 'The maximum time before the reservation starts, you can reserve in ISO 8601 duration format.'
          nullable: true
        MinLength:
          type: string
          description: Minimal reservation length in ISO 8601 duration format.
          nullable: true
        MaxLength:
          type: string
          description: Maximal reservation length in ISO 8601 duration format.
          nullable: true
        MinPrice:
          title: Currency value (ver 2018-06-07)
          allOf:
            - $ref: '#/components/schemas/CurrencyValueOld'
          description: Value of the minimum price per time unit.
          nullable: true
        MaxPrice:
          title: Currency value (ver 2018-06-07)
          allOf:
            - $ref: '#/components/schemas/CurrencyValueOld'
          description: Value of the maximum price per time unit.
          nullable: true
      additionalProperties: false
      description: 'The rules that prevent the restriction from applying to a reservation, even when all conditions have been met.'
      x-schema-id: RestrictionExceptions
    RestrictionExceptionsData:
      title: Restriction exception data
      type: object
      properties:
        MinAdvance:
          type: string
          description: 'The minimum time before the reservation starts, you can reserve in ISO 8601 duration format.'
          format: date-time
          nullable: true
        MaxAdvance:
          type: string
          description: 'The maximum time before the reservation starts, you can reserve in ISO 8601 duration format.'
          format: date-time
          nullable: true
        MinLength:
          type: string
          description: Minimal reservation length in ISO 8601 duration format.
          format: date-time
          nullable: true
        MaxLength:
          type: string
          description: Maximal reservation length in ISO 8601 duration format.
          format: date-time
          nullable: true
        MinPrice:
          title: Currency value (ver 2018-06-07)
          allOf:
            - $ref: '#/components/schemas/CurrencyValueOld'
          description: Value of the minimum price per time unit.
          nullable: true
        MaxPrice:
          title: Currency value (ver 2018-06-07)
          allOf:
            - $ref: '#/components/schemas/CurrencyValueOld'
          description: Value of the maximum price per time unit.
          nullable: true
      additionalProperties: false
      x-schema-id: RestrictionExceptionsData
    RestrictionFilterParameters:
      title: RestrictionFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        TimeFilter:
          type: string
          nullable: true
          deprecated: true
        StartUtc:
          type: string
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          nullable: true
          deprecated: true
        CollidingUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Restriction` is active.
          nullable: true
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Restriction` was created.
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the `Restriction` was updated.
          nullable: true
        RestrictionIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Restriction`.
          nullable: true
        ResourceCategoryIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Resource category`.
          nullable: true
        RateIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of `Rate`. Returns all restrictions that affect the given rates, i.e. ones without any `Restriction Conditions`, ones assigned directly to specified rates, ones assigned to `Rate group` of specified rates, or ones inherited from base rates.`.'
          nullable: true
        ExactRateIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Rate`. Returns only those restrictions which have matching `ExactRateId` set in `Restriction Condition`.
          nullable: true
        BaseRateIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Rate`. Returns only those restrictions which have matching `BaseRateId` set in `Restriction Condition`.
          nullable: true
        Origin:
          anyOf:
            - $ref: '#/components/schemas/RestrictionOrigin'
          description: Restriction origin. Returns only those restrictions which have matching Origin or all if not specified.
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Service` from which the restrictions are requested.
      additionalProperties: false
      x-schema-id: RestrictionFilterParameters
    RestrictionOrigin:
      title: Restriction origin
      enum:
        - User
        - Integration
      type: string
      x-enumDescriptions:
        - Restriction was created by a user in Mews.
        - Restriction was created by a 3rd-party integration.
    RestrictionOriginEnum:
      title: Restriction origin
      enum:
        - User
        - Integration
      type: string
      description: "\n\nUser (Restriction was created by a user in Mews.)\n\nIntegration (Restriction was created by a 3rd-party integration.)"
      x-enumNames:
        - User
        - Integration
      x-enumDescriptions:
        - Restriction was created by a user in Mews.
        - Restriction was created by a 3rd-party integration.
    RestrictionResult:
      title: RestrictionResult
      required:
        - Restrictions
      type: object
      properties:
        Restrictions:
          type: array
          items:
            $ref: '#/components/schemas/Restriction'
          description: Restrictions of the default service.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RestrictionResult
    RestrictionSetData:
      title: Restriction set data
      required:
        - Days
        - Type
      type: object
      properties:
        Type:
          title: Restriction type
          allOf:
            - $ref: '#/components/schemas/RestrictionTypeEnum'
          description: "Restriction type.\n\nStay (Guests can't stay within specified dates.)\n\nStart (Guests can't check in within specified dates.)\n\nEnd (Guests can't check out within specified dates.)"
          x-enumNames:
            - Stay
            - Start
            - End
          x-enumDescriptions:
            - Guests can't stay within specified dates.
            - Guests can't check in within specified dates.
            - Guests can't check out within specified dates.
        ExactRateId:
          type: string
          description: Unique identifier of the exact `Rate` to which the restriction applies.
          nullable: true
          x-schema-id: HybridIdentifier
        BaseRateId:
          type: string
          description: Unique identifier of the base `Rate` to which the restriction applies.
          nullable: true
          x-schema-id: HybridIdentifier
        RateGroupId:
          type: string
          description: Unique identifier of the `Rate group` to which the restriction applies.
          nullable: true
          x-schema-id: HybridIdentifier
        ResourceCategoryId:
          type: string
          description: Unique identifier of the `Resource category` to which the restriction applies.
          nullable: true
          x-schema-id: HybridIdentifier
        ResourceCategoryType:
          allOf:
            - $ref: '#/components/schemas/ResourceCategoryTypeEnum'
          description: "Name of the `Resource category type` to which the restriction applies.\n\nRoom\n\nBed\n\nDorm\n\nApartment\n\nSuite\n\nVilla\n\nSite\n\nOffice\n\nMeetingRoom\n\nParkingSpot\n\nDesk\n\nTeamArea\n\nMembership\n\nTent\n\nCaravanOrRV\n\nUnequippedCampsite\n\nBike\n\nExtraBed\n\nCot\n\nCrib\n\nConferenceRoom\n\nRooftop\n\nGarden\n\nRestaurant\n\nAmphitheater\n\nPrivateSpaces"
          nullable: true
        StartUtc:
          type: string
          description: 'Start date of the time interval for which the restriction conditions should be applied. This must be in UTC timezone in ISO 8601 format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization#datetimes).'
          format: date-time
          nullable: true
        EndUtc:
          type: string
          description: 'End date of the time interval for which the restriction conditions should be applied. This must be in UTC timezone in ISO 8601 format - see [Datetimes](https://mews-systems.gitbook.io/connector-api/guidelines/serialization#datetimes).'
          format: date-time
          nullable: true
        Days:
          title: Days parameters
          allOf:
            - $ref: '#/components/schemas/DaysParameters'
          description: The restricted days of week.
        MinAdvance:
          type: string
          description: 'The minimum time before the reservation starts, you can reserve in ISO 8601 duration format.'
          format: date-time
          nullable: true
        MaxAdvance:
          type: string
          description: 'The maximum time before the reservation starts, you can reserve in ISO 8601 duration format.'
          format: date-time
          nullable: true
        MinLength:
          type: string
          description: Minimal reservation length in ISO 8601 duration format.
          format: date-time
          nullable: true
        MaxLength:
          type: string
          description: Maximal reservation length in ISO 8601 duration format.
          format: date-time
          nullable: true
        MinPrice:
          title: Currency value (ver 2023-02-02)
          allOf:
            - $ref: '#/components/schemas/CurrencyValue'
          description: Value of the minimum price per time unit.
          nullable: true
        MaxPrice:
          title: Currency value (ver 2023-02-02)
          allOf:
            - $ref: '#/components/schemas/CurrencyValue'
          description: Value of the maximum price per time unit.
          nullable: true
      additionalProperties: false
      x-schema-id: RestrictionSetData
    RestrictionTypeEnum:
      title: Restriction type
      enum:
        - Stay
        - Start
        - End
      type: string
      description: "\n\nStay (Guests can't stay within specified dates.)\n\nStart (Guests can't check in within specified dates.)\n\nEnd (Guests can't check out within specified dates.)"
      x-enumNames:
        - Stay
        - Start
        - End
      x-enumDescriptions:
        - Guests can't stay within specified dates.
        - Guests can't check in within specified dates.
        - Guests can't check out within specified dates.
    RevenueTypeEnum:
      title: Revenue type
      enum:
        - Service
        - Product
        - Additional
      type: string
      description: "Revenue type.\n\nService\n\nProduct\n\nAdditional"
      x-enumNames:
        - Service
        - Product
        - Additional
      x-enumDescriptions:
        - ''
        - ''
        - ''
    RoutingRule:
      title: Routing rule
      required:
        - Applicability
        - CompanyId
        - CompanyRelation
        - CreatedUtc
        - EnterpriseId
        - Id
        - RouteType
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the routing rule.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        CompanyId:
          type: string
          description: 'Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) routing rule is assigned to.'
          format: uuid
        CompanyRelation:
          $ref: '#/components/schemas/RoutingRuleCompanyRelation'
        Applicability:
          $ref: '#/components/schemas/RoutingRuleApplicability'
        RouteType:
          $ref: '#/components/schemas/RoutingRuleRouteType'
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) routing rule is assigned to.'
          format: uuid
          nullable: true
        SelectedStayItems:
          title: RoutingRuleStayItems
          allOf:
            - $ref: '#/components/schemas/RoutingRuleStayItems'
          description: Specific items to which the routing rule applies. Returns only if RouteType value is SelectedStayItems.
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the routing rule in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the routing rule in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: RoutingRule
    RoutingRuleAddParameter:
      title: RoutingRuleAddParameter
      required:
        - Applicability
        - CompanyId
        - CompanyRelation
        - RouteType
        - ServiceId
      type: object
      properties:
        CompanyId:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        CompanyRelation:
          $ref: '#/components/schemas/RoutingRuleCompanyRelation'
        Applicability:
          $ref: '#/components/schemas/RoutingRuleApplicability'
        RouteType:
          $ref: '#/components/schemas/RoutingRuleRouteType'
        AssignmentTargetType:
          anyOf:
            - $ref: '#/components/schemas/RoutingRuleRouteType'
          nullable: true
        SelectedStayItems:
          title: RoutingRuleStayItemsAddParameters
          allOf:
            - $ref: '#/components/schemas/RoutingRuleStayItemsAddParameters'
          nullable: true
      additionalProperties: false
      x-schema-id: RoutingRuleAddParameter
    RoutingRuleApplicability:
      enum:
        - Always
        - PrepaidOnly
      type: string
    RoutingRuleCompanyRelation:
      enum:
        - PartnerCompany
        - TravelAgency
      type: string
    RoutingRuleDeleteParameters:
      title: RoutingRuleDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - RoutingRuleIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        RoutingRuleIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the routing rules to be deleted.
      additionalProperties: false
      x-schema-id: RoutingRuleDeleteParameters
    RoutingRuleFilterParameters:
      title: RoutingRuleFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        CompanyIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifier of the [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company).'
          nullable: true
        RoutingRuleIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifier of the [Routing rule](https://mews-systems.gitbook.io/connector-api/operations/routingrules/#routing-rule).'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: RoutingRuleFilterParameters
    RoutingRuleResult:
      title: RoutingRuleResult
      required:
        - RoutingRules
      type: object
      properties:
        RoutingRules:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/RoutingRule'
          description: Collection of Routing rules.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RoutingRuleResult
    RoutingRuleRouteType:
      enum:
        - AllStayItems
        - SelectedStayItems
      type: string
    RoutingRuleStayItems:
      title: RoutingRuleStayItems
      type: object
      properties:
        Nights:
          type: boolean
        CityTax:
          type: boolean
        ProductCategoryIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      description: Specific items to which the routing rule applies. Returns only if RouteType value is SelectedStayItems.
      x-schema-id: RoutingRuleStayItems
    RoutingRuleStayItemsAddParameters:
      title: RoutingRuleStayItemsAddParameters
      type: object
      properties:
        Nights:
          type: boolean
        CityTax:
          type: boolean
        ProductCategoryIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RoutingRuleStayItemsAddParameters
    RoutingRuleStayItemsUpdateParameters:
      title: RoutingRuleStayItemsUpdateParameters
      type: object
      properties:
        Nights:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
        CityTax:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
        ProductCategoryIds:
          title: Guid array update value
          allOf:
            - $ref: '#/components/schemas/GuidIEnumerableUpdateValue'
          nullable: true
      additionalProperties: false
      x-schema-id: RoutingRuleStayItemsUpdateParameters
    RoutingRuleUpdateParameters:
      title: RoutingRuleUpdateParameters
      required:
        - RoutingRuleId
      type: object
      properties:
        RoutingRuleId:
          type: string
          format: uuid
        CompanyId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidUpdateValue'
          nullable: true
        ServiceId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidUpdateValue'
          nullable: true
        CompanyRelation:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
            - $ref: '#/components/schemas/RoutingRuleCompanyRelation'
          nullable: true
        Applicability:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
            - $ref: '#/components/schemas/RoutingRuleApplicability'
          nullable: true
        RouteType:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
            - $ref: '#/components/schemas/RoutingRuleRouteType'
          nullable: true
        AssignmentTargetType:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          anyOf:
            - $ref: '#/components/schemas/RoutingRuleRouteType'
          nullable: true
        SelectedStayItems:
          title: RoutingRuleStayItemsUpdateParameters
          allOf:
            - $ref: '#/components/schemas/RoutingRuleStayItemsUpdateParameters'
          nullable: true
      additionalProperties: false
      x-schema-id: RoutingRuleUpdateParameters
    Rule:
      title: Rule
      required:
        - CreatedUtc
        - Id
        - ServiceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the rule.
          format: uuid
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the rule is assigned to.'
          format: uuid
        Conditions:
          title: RuleConditions
          allOf:
            - $ref: '#/components/schemas/RuleConditions'
          description: Conditions of the rule.
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the rule in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the rule in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: Rule
    RuleAction:
      title: Rule action
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the rule action.
          format: uuid
        RuleId:
          type: string
          description: Unique identifier of the rule.
          format: uuid
        Data:
          title: Data
          type: object
          properties:
            Discriminator:
              $ref: '#/components/schemas/RuleActionDiscriminator'
            Value:
              oneOf:
                - $ref: '#/components/schemas/RuleActionProductData'
          description: Additional information about action.
          x-coproduct: true
          x-schema-id: RuleActionDataCoproductOfRuleActionDiscriminator
      additionalProperties: false
      x-schema-id: RuleAction
    RuleActionDiscriminator:
      enum:
        - Product
      type: string
    RuleActionProductData:
      title: RuleActionProductData
      type: object
      properties:
        ActionType:
          type: string
          nullable: true
        ProductId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: RuleActionProductData
    RuleCondition:
      title: RuleCondition
      type: object
      properties:
        Value:
          type: string
          nullable: true
        ConditionType:
          anyOf:
            - $ref: '#/components/schemas/RuleConditionType'
          nullable: true
      additionalProperties: false
      x-schema-id: RuleCondition
    RuleConditionType:
      enum:
        - Equals
        - NotEquals
      type: string
    RuleConditions:
      title: RuleConditions
      type: object
      properties:
        RateId:
          title: RuleCondition
          allOf:
            - $ref: '#/components/schemas/RuleCondition'
          nullable: true
        RateGroupId:
          title: RuleCondition
          allOf:
            - $ref: '#/components/schemas/RuleCondition'
          nullable: true
        BusinessSegmentId:
          title: RuleCondition
          allOf:
            - $ref: '#/components/schemas/RuleCondition'
          nullable: true
        ResourceCategoryId:
          title: RuleCondition
          allOf:
            - $ref: '#/components/schemas/RuleCondition'
          nullable: true
        ResourceCategoryType:
          title: RuleCondition
          allOf:
            - $ref: '#/components/schemas/RuleCondition'
          nullable: true
        Origin:
          title: RuleCondition
          allOf:
            - $ref: '#/components/schemas/RuleCondition'
          nullable: true
        TravelAgencyId:
          title: RuleCondition
          allOf:
            - $ref: '#/components/schemas/RuleCondition'
          nullable: true
        MinimumTimeUnitCount:
          type: integer
          format: int32
          nullable: true
        MaximumTimeUnitCount:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      description: Conditions of the rule.
      x-schema-id: RuleConditions
    RuleExtent:
      title: RuleExtent
      type: object
      properties:
        RuleActions:
          type: boolean
        Rates:
          type: boolean
        RateGroups:
          type: boolean
        ResourceCategories:
          type: boolean
        BusinessSegments:
          type: boolean
      additionalProperties: false
      description: Extent of data to be returned.
      x-schema-id: RuleExtent
    RuleFilterParameters:
      title: RuleFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        Ids:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service).'
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        Extent:
          title: RuleExtent
          allOf:
            - $ref: '#/components/schemas/RuleExtent'
          description: Extent of data to be returned.
      additionalProperties: false
      x-schema-id: RuleFilterParameters
    RuleResult:
      title: RuleResult
      type: object
      properties:
        Rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
          description: Rules used with reservation creations and modifications.
          nullable: true
        RuleActions:
          type: array
          items:
            $ref: '#/components/schemas/RuleAction'
          description: Rule actions applied in rules.
          nullable: true
        Rates:
          type: array
          items:
            $ref: '#/components/schemas/RateForExtent'
          description: Rates used in conditions.
          nullable: true
        RateGroups:
          type: array
          items:
            $ref: '#/components/schemas/RateGroupOld'
          description: Rate groups used in conditions.
          nullable: true
        ResourceCategories:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategory'
          description: Resource categories used in conditions.
          nullable: true
        BusinessSegments:
          type: array
          items:
            $ref: '#/components/schemas/BusinessSegment'
          description: Business segments used in conditions.
          nullable: true
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RuleResult
    SaltoMobileKeyDto:
      title: SaltoMobileKeyDto
      type: object
      properties:
        Key:
          type: string
          nullable: true
        InstallationId:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: SaltoMobileKeyDto
    SearchOperator:
      enum:
        - And
        - Or
      type: string
    SenderDiscriminator:
      enum:
        - Application
        - Enterprise
      type: string
    SepaDirectDebitData:
      title: SEPA Direct Debit data
      required:
        - Email
        - Iban
        - Name
        - RemoteIpAddress
        - UserAgent
      type: object
      properties:
        Iban:
          minLength: 1
          type: string
          description: The customer's bank account number in IBAN format.
        Name:
          minLength: 1
          type: string
          description: Full name of the customer.
        Email:
          minLength: 1
          type: string
          description: Email address of the customer.
          format: email
        UserAgent:
          minLength: 1
          type: string
          description: The user agent of the browser from which the Mandate was accepted by the customer.
        RemoteIpAddress:
          minLength: 1
          type: string
          description: The IP address from which the Mandate was accepted by the customer.
      additionalProperties: false
      x-schema-id: SepaDirectDebitData
    Service:
      title: Service
      required:
        - CreatedUtc
        - Data
        - EnterpriseId
        - Id
        - IsActive
        - Name
        - Names
        - Options
        - Ordering
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the service.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the [Enterprise](https://mews-systems.gitbook.io/connector-api/operations/enterprises/#enterprise).'
          format: uuid
        IsActive:
          type: boolean
          description: Whether the service is still active.
        Name:
          minLength: 1
          type: string
          description: Name of the service.
          deprecated: true
          x-deprecatedMessage: Use `Names` instead
        Names:
          title: Localized text
          type: object
          additionalProperties:
            type: string
          description: All translations of the name.
          x-schema-id: LocalizedStrings
        StartTime:
          type: string
          nullable: true
          deprecated: true
        EndTime:
          type: string
          nullable: true
          deprecated: true
        Options:
          title: Service options
          allOf:
            - $ref: '#/components/schemas/ServiceOptions'
          description: Options of the service.
        Promotions:
          allOf:
            - $ref: '#/components/schemas/Promotions'
          description: ''
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `Promotions` in `Data` instead.
        Type:
          type: string
          nullable: true
          deprecated: true
        Ordering:
          type: integer
          description: Order value for presentation purposes.
          format: int32
        Data:
          title: Service data
          type: object
          properties:
            Discriminator:
              $ref: '#/components/schemas/ServiceDataDiscriminator'
            Value:
              oneOf:
                - $ref: '#/components/schemas/BookableServiceData'
                - $ref: '#/components/schemas/AdditionalServiceData'
          description: Additional information about the specific service.
          x-coproduct: true
          x-schema-id: ServiceDataCoproductOfServiceDataDiscriminator
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the service from external system.
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the service in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the service in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      description: ''
      x-schema-id: Service
    ServiceAvailabilityFilterParameters:
      title: ServiceAvailabilityFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - FirstTimeUnitStartUtc
        - LastTimeUnitStartUtc
        - ServiceId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/#service) whose availability should be returned.'
          format: uuid
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/), in UTC timezone ISO 8601 format.'
          format: date-time
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/), in UTC timezone ISO 8601 format. The maximum size of time interval depends on the service''s [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/): 367 hours if hours, 367 days if days, or 60 months if months.'
          format: date-time
        StartUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
      additionalProperties: false
      x-schema-id: ServiceAvailabilityFilterParameters
    ServiceAvailabilityFilterParametersV20240122:
      title: ServiceAvailabilityFilterParametersV20240122
      required:
        - AccessToken
        - Client
        - ClientToken
        - FirstTimeUnitStartUtc
        - LastTimeUnitStartUtc
        - Metrics
        - ServiceId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) whose availability should be returned.'
          format: uuid
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/), in UTC timezone ISO 8601 format.'
          format: date-time
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/), in UTC timezone ISO 8601 format. The maximum size of time interval depends on the service''s [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/): 367 hours if hours, 367 days if days, or 60 months if months.'
          format: date-time
        Metrics:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceAvailabilityMetricTypeEnum'
          description: 'Set of [Service availability metrics](https://mews-systems.gitbook.io/connector-api/operations/services/#service-availability-metrics) to be returned.'
      additionalProperties: false
      x-schema-id: ServiceAvailabilityFilterParametersV20240122
    ServiceAvailabilityResult:
      title: ServiceAvailabilityResult
      required:
        - CategoryAvailabilities
        - TimeUnitStartsUtc
      type: object
      properties:
        DatesUtc:
          type: array
          items:
            type: string
          nullable: true
          deprecated: true
        TimeUnitStartsUtc:
          type: array
          items:
            type: string
          description: Set of all time units covered by the time interval; expressed in UTC timezone ISO 8601 format.
        CategoryAvailabilities:
          type: array
          items:
            $ref: '#/components/schemas/CategoryAvailability'
          description: Resource category availabilities.
      additionalProperties: false
      x-schema-id: ServiceAvailabilityResult
    ServiceAvailabilityResultV20240122:
      title: ServiceAvailabilityResultV20240122
      required:
        - ResourceCategoryAvailabilities
        - TimeUnitStartsUtc
      type: object
      properties:
        TimeUnitStartsUtc:
          type: array
          items:
            type: string
          description: Set of all time units covered by the time interval; expressed in UTC timezone ISO 8601 format.
          format: date-time
        ResourceCategoryAvailabilities:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategoryAvailabilityV20240122'
          description: Resource category availabilities. Can be empty if no resource categories are assigned to the service.
      additionalProperties: false
      x-schema-id: ServiceAvailabilityResultV20240122
    ServiceAvailabilityUpdateData:
      title: Availability update
      required:
        - FirstTimeUnitStartUtc
        - LastTimeUnitStartUtc
        - ResourceCategoryId
        - UnitCountAdjustment
      type: object
      properties:
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units), in UTC timezone ISO 8601 format.'
          format: date-time
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units), in UTC timezone ISO 8601 format. The maximum size of time interval depends on the service''s [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units): 367 hours if hours, 367 days if days, or 60 months if months.'
          format: date-time
        StartUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        ResourceCategoryId:
          type: string
          description: 'Unique identifier of the [Resource category](https://mews-systems.gitbook.io/connector-api/operations/resources#resource-category) whose availability to update.'
          format: uuid
        UnitCountAdjustment:
          title: Int32 update value
          allOf:
            - $ref: '#/components/schemas/Int32NullableUpdateValue'
          description: 'Adjustment value to be applied on the interval, can be both positive and negative (relative adjustment, not an absolute number). If specified without `Value` parameter, removes all adjustments within the interval.'
        AvailabilityBlockId:
          type: string
          description: 'Unique identifier of the [Availability block](https://mews-systems.gitbook.io/connector-api/operations/availabilityblocks#availability-block) whose availability to update.'
          format: uuid
          nullable: true
        PaxCounts:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/PaxCount'
          description: Collection of predicted occupancy of availability adjustments. Relates how many adjustments are assigned to each count of guests.
          nullable: true
      additionalProperties: false
      x-schema-id: ServiceAvailabilityUpdateData
    ServiceAvailabilityUpdateParameters:
      title: ServiceAvailabilityUpdateParameters
      required:
        - AccessToken
        - AvailabilityUpdates
        - Client
        - ClientToken
        - ServiceId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/#service) to update.'
          format: uuid
        AvailabilityUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ServiceAvailabilityUpdateData'
          description: Availability updates.
      additionalProperties: false
      x-schema-id: ServiceAvailabilityUpdateParameters
    ServiceDataDiscriminator:
      title: Service data discriminator
      enum:
        - Bookable
        - Additional
      type: string
    ServiceFilterParameters:
      title: ServiceFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service).'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which `Services` were updated.
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: ServiceFilterParameters
    ServiceOptions:
      title: Service options
      required:
        - BillAsPackage
      type: object
      properties:
        BillAsPackage:
          type: boolean
          description: Products should be displayed as a single package instead of individual items.
      additionalProperties: false
      description: Options of the service.
      x-schema-id: ServiceOptions
    ServiceOrder:
      title: ServiceOrder
      required:
        - AccountId
        - CreatedUtc
        - CreatorProfileId
        - Id
        - Options
        - Origin
        - ServiceId
        - State
        - UpdatedUtc
        - UpdaterProfileId
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services#service) that service order is made against.'
          format: uuid
        AccountId:
          type: string
          format: uuid
        AccountType:
          anyOf:
            - $ref: '#/components/schemas/AccountType'
          nullable: true
        CreatorProfileId:
          type: string
          format: uuid
        UpdaterProfileId:
          type: string
          format: uuid
        BookerId:
          type: string
          format: uuid
          nullable: true
        Number:
          type: string
          nullable: true
        State:
          $ref: '#/components/schemas/ServiceOrderState'
        Origin:
          $ref: '#/components/schemas/ServiceOrderOrigin'
        CommanderOrigin:
          anyOf:
            - $ref: '#/components/schemas/ServiceOrderCommanderOrigin'
          nullable: true
        OriginDetails:
          type: string
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        CancelledUtc:
          type: string
          format: date-time
          nullable: true
        VoucherId:
          type: string
          format: uuid
          nullable: true
        BusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        LinkedReservationId:
          type: string
          format: uuid
          nullable: true
        Options:
          title: Service Order Options
          allOf:
            - $ref: '#/components/schemas/ServiceOrderOptions'
      additionalProperties: false
      x-schema-id: ServiceOrder
    ServiceOrderCancellationReasonEnum:
      title: Reservation cancellation reason
      enum:
        - Other
        - ConfirmationMissed
        - BookedElsewhere
        - ForceMajeure
        - GuestComplaint
        - NoShow
        - PriceTooHigh
        - ServiceNotAvailable
        - InputError
        - InvalidPayment
        - TravelAgency
        - RequestedByGuest
        - Update
        - BookingAbandoned
        - RequestedByBooker
      type: string
      description: "\n\nOther\n\nConfirmationMissed\n\nBookedElsewhere\n\nForceMajeure\n\nGuestComplaint\n\nNoShow\n\nPriceTooHigh\n\nServiceNotAvailable\n\nInputError\n\nInvalidPayment\n\nTravelAgency\n\nRequestedByGuest\n\nUpdate\n\nBookingAbandoned\n\nRequestedByBooker"
      x-enumNames:
        - Other
        - ConfirmationMissed
        - BookedElsewhere
        - ForceMajeure
        - GuestComplaint
        - NoShow
        - PriceTooHigh
        - ServiceNotAvailable
        - InputError
        - InvalidPayment
        - TravelAgency
        - RequestedByGuest
        - Update
        - BookingAbandoned
        - RequestedByBooker
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
    ServiceOrderCommanderOrigin:
      title: Commander origin
      enum:
        - InPerson
        - Channel
        - Phone
        - Email
        - Website
        - Message
        - CallCenter
      type: string
    ServiceOrderCommanderOriginEnum:
      title: Commander origin
      enum:
        - InPerson
        - Channel
        - Phone
        - Email
        - Website
        - Message
        - CallCenter
      type: string
      description: "\n\nInPerson\n\nChannel\n\nPhone\n\nEmail\n\nWebsite\n\nMessage\n\nCallCenter"
      x-enumNames:
        - InPerson
        - Channel
        - Phone
        - Email
        - Website
        - Message
        - CallCenter
      x-enumDescriptions:
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
        - ''
    ServiceOrderNoteAddParameters:
      title: Service order note parameters
      required:
        - ServiceOrderId
        - Text
      type: object
      properties:
        ServiceOrderId:
          type: string
          description: Unique identifier of the `Service order` to which note will be added.
          format: uuid
        Text:
          minLength: 1
          type: string
          description: Content of the service order note.
      additionalProperties: false
      x-schema-id: ServiceOrderNoteAddParameters
    ServiceOrderNoteAdditionResult:
      title: ServiceOrderNoteAdditionResult
      required:
        - ServiceOrderNotes
      type: object
      properties:
        ServiceOrderNotes:
          type: array
          items:
            $ref: '#/components/schemas/OrderNote'
          description: Added service order notes.
      additionalProperties: false
      x-schema-id: ServiceOrderNoteAdditionResult
    ServiceOrderNoteDeleteParameters:
      title: ServiceOrderNoteDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ServiceOrderNoteIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ServiceOrderNoteIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the service order notes to be deleted.
      additionalProperties: false
      x-schema-id: ServiceOrderNoteDeleteParameters
    ServiceOrderNoteFilterParameters:
      title: ServiceOrderNoteFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceOrderIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ServiceOrderIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Service order`. Reservation IDs or Order IDs can be used as service order identifiers.
        ServiceOrderNoteIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Service order note`. Use this property if you want to fetch specific service order notes.
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Timestamp in UTC timezone ISO 8601 format when the service order note was updated.
          nullable: true
          x-max-interval-in-months: 3
        Types:
          type: array
          items:
            $ref: '#/components/schemas/OrderNoteTypeEnum'
          description: 'Type of the service order note. Defaults to `["General", "ChannelManager"]`.'
          nullable: true
      additionalProperties: false
      x-schema-id: ServiceOrderNoteFilterParameters
    ServiceOrderNoteResult:
      title: ServiceOrderNoteResult
      required:
        - ServiceOrderNotes
      type: object
      properties:
        ServiceOrderNotes:
          type: array
          items:
            $ref: '#/components/schemas/OrderNote'
          description: The collection of service order notes.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest service order note returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older service order notes.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ServiceOrderNoteResult
    ServiceOrderNoteUpdateParameters:
      title: Service order note update parameters
      required:
        - ServiceOrderNoteId
      type: object
      properties:
        ServiceOrderNoteId:
          type: string
          description: Unique identifier of the `Service order note`.
          format: uuid
        Text:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Content of the service order note (or `null` if the content should not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: ServiceOrderNoteUpdateParameters
    ServiceOrderNoteUpdateResult:
      title: ServiceOrderNoteUpdateResult
      required:
        - ServiceOrderNotes
      type: object
      properties:
        ServiceOrderNotes:
          type: array
          items:
            $ref: '#/components/schemas/OrderNote'
          description: Updated service order notes.
      additionalProperties: false
      x-schema-id: ServiceOrderNoteUpdateResult
    ServiceOrderOptions:
      title: Service Order Options
      required:
        - AllCompanionsCheckedIn
        - AnyCompanionCheckedIn
        - ConnectorCheckIn
        - OwnerCheckedIn
      type: object
      properties:
        OwnerCheckedIn:
          type: boolean
          description: Owner of the reservation checked in.
        AllCompanionsCheckedIn:
          type: boolean
          description: All companions of the reservation checked in.
        AnyCompanionCheckedIn:
          type: boolean
          description: Any of the companions of the reservation checked in.
        ConnectorCheckIn:
          type: boolean
          description: Check in was done via Connector API.
      additionalProperties: false
      x-schema-id: ServiceOrderOptions
    ServiceOrderOrigin:
      title: Service order origin
      enum:
        - Distributor
        - ChannelManager
        - Commander
        - Import
        - Connector
        - Navigator
      type: string
      x-enumDescriptions:
        - From the Mews Booking Engine or Booking Engine API.
        - From a channel manager.
        - From Mews Operations.
        - From an import process.
        - From the Mews Connector API.
        - From Mews Guest Services.
    ServiceOrderOriginEnum:
      title: Service order origin
      enum:
        - Distributor
        - ChannelManager
        - Commander
        - Import
        - Connector
        - Navigator
      type: string
      description: "\n\nDistributor (From the Mews Booking Engine or Booking Engine API.)\n\nChannelManager (From a channel manager.)\n\nCommander (From Mews Operations.)\n\nImport (From an import process.)\n\nConnector (From the Mews Connector API.)\n\nNavigator (From Mews Guest Services.)"
      x-enumNames:
        - Distributor
        - ChannelManager
        - Commander
        - Import
        - Connector
        - Navigator
      x-enumDescriptions:
        - From the Mews Booking Engine or Booking Engine API.
        - From a channel manager.
        - From Mews Operations.
        - From an import process.
        - From the Mews Connector API.
        - From Mews Guest Services.
    ServiceOrderState:
      title: Service order state
      enum:
        - Inquired
        - Confirmed
        - Started
        - Processed
        - Canceled
        - Optional
        - Requested
      type: string
      x-enumDescriptions:
        - Confirmed neither by the customer nor enterprise.
        - 'Confirmed by both parties, before check-in.'
        - Checked in.
        - Checked out.
        - Canceled.
        - Confirmed by enterprise but not by the guest (the enterprise is holding resource for the guest).
        - Confirmed by the customer but not by the enterprise (waitlist).
    ServiceOrderStateEnum:
      title: Service order state
      enum:
        - Inquired
        - Confirmed
        - Started
        - Processed
        - Canceled
        - Optional
        - Requested
      type: string
      description: "\n\nInquired (Confirmed neither by the customer nor enterprise.)\n\nConfirmed (Confirmed by both parties, before check-in.)\n\nStarted (Checked in.)\n\nProcessed (Checked out.)\n\nCanceled (Canceled.)\n\nOptional (Confirmed by enterprise but not by the guest (the enterprise is holding resource for the guest).)\n\nRequested (Confirmed by the customer but not by the enterprise (waitlist).)"
      x-enumNames:
        - Inquired
        - Confirmed
        - Started
        - Processed
        - Canceled
        - Optional
        - Requested
      x-enumDescriptions:
        - Confirmed neither by the customer nor enterprise.
        - 'Confirmed by both parties, before check-in.'
        - Checked in.
        - Checked out.
        - Canceled.
        - Confirmed by enterprise but not by the guest (the enterprise is holding resource for the guest).
        - Confirmed by the customer but not by the enterprise (waitlist).
    ServiceOrderStateOld:
      title: Service order state (ver 2017-04-12)
      enum:
        - Enquired
        - Confirmed
        - Started
        - Processed
        - Canceled
        - Optional
        - Requested
      type: string
    ServiceOverbookingLimit:
      title: Service overbooking limit
      required:
        - CreatedUtc
        - FirstTimeUnitStartUtc
        - Id
        - IsActive
        - LastTimeUnitStartUtc
        - Limit
        - ServiceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the service overbooking limit.
          format: uuid
        ServiceId:
          type: string
          description: Unique identifier of the `Service`.
          format: uuid
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/), in UTC timezone ISO 8601 format.'
          format: date-time
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units/), in UTC timezone ISO 8601 format.'
          format: date-time
        Limit:
          type: integer
          description: Number of overbookings allowed for the `Service`.
          format: int32
        CreatedUtc:
          minLength: 1
          type: string
          description: Timestamp in UTC timezone ISO 8601 format when the service overbooking was created.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Timestamp in UTC timezone ISO 8601 format when the service overbooking was updated.
          format: date-time
        IsActive:
          type: boolean
          description: Whether the service overbooking limit is still active.
      additionalProperties: false
      x-schema-id: ServiceOverbookingLimit
    ServiceOverbookingLimitClearData:
      title: Service overbooking limits clear parameters
      required:
        - FirstTimeUnitStartUtc
        - LastTimeUnitStartUtc
      type: object
      properties:
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units), in UTC timezone ISO 8601 format.'
          format: date-time
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units), in UTC timezone ISO 8601 format. The maximum size of time interval depends on the service''s time unit: 367 hours if hours, 367 days if days, or 60 months if months.'
          format: date-time
      additionalProperties: false
      x-schema-id: ServiceOverbookingLimitClearData
    ServiceOverbookingLimitClearParameters:
      title: ServiceOverbookingLimitClearParameters
      required:
        - AccessToken
        - ClearServiceOverbookingLimits
        - Client
        - ClientToken
        - ServiceId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services#service) overbooking limits will be set in.'
          format: uuid
        ClearServiceOverbookingLimits:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ServiceOverbookingLimitClearData'
          description: Collection of service overbooking limits to be cleared.
      additionalProperties: false
      x-schema-id: ServiceOverbookingLimitClearParameters
    ServiceOverbookingLimitFilterParameters:
      title: ServiceOverbookingLimitFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Service` associated with the service overbooking limits.
        ServiceOverbookingLimitIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the service overbooking limits.
          nullable: true
        CollidingUtc:
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the service overbooking limit is active.
          nullable: true
        UpdatedUtc:
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the service overbooking limits were updated.
          nullable: true
          x-max-interval-in-months: 3
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityState'
          description: 'Whether to return only active, only deleted, or both types of record. If not specified, only active records will be returned.'
          nullable: true
      additionalProperties: false
      x-schema-id: ServiceOverbookingLimitFilterParameters
    ServiceOverbookingLimitResult:
      title: ServiceOverbookingLimitResult
      required:
        - ServiceOverbookingLimits
      type: object
      properties:
        ServiceOverbookingLimits:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOverbookingLimit'
          description: Service overbooking limits of the default service.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ServiceOverbookingLimitResult
    ServiceOverbookingLimitSetData:
      title: Service overbooking limits set parameters
      required:
        - FirstTimeUnitStartUtc
        - LastTimeUnitStartUtc
        - Limit
      type: object
      properties:
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units), in UTC timezone ISO 8601 format.'
          format: date-time
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units), in UTC timezone ISO 8601 format. The maximum size of time interval depends on the service''s [time unit](https://mews-systems.gitbook.io/connector-api/concepts/time-units): 367 days.'
          format: date-time
        Limit:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Number of overbookings allowed for the `Service`. Must be non-negative.
          format: int32
      additionalProperties: false
      x-schema-id: ServiceOverbookingLimitSetData
    ServiceOverbookingLimitSetParameters:
      title: ServiceOverbookingLimitSetParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ServiceId
        - SetServiceOverbookingLimits
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using [Portfolio Access Tokens](https://mews-systems.gitbook.io/connector-api/concepts/multi-property), ignored otherwise.'
          format: uuid
          nullable: true
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services#service) overbooking limits will be set in.'
          format: uuid
        SetServiceOverbookingLimits:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ServiceOverbookingLimitSetData'
          description: Collection of service overbooking limits to be set.
      additionalProperties: false
      x-schema-id: ServiceOverbookingLimitSetParameters
    ServiceResult:
      title: ServiceResult
      required:
        - Services
      type: object
      properties:
        Services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          description: Services offered by the enterprise.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ServiceResult
    SetRestrictionParameters:
      title: SetRestrictionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Data
        - ServiceId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        ServiceId:
          minLength: 1
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services#service) restrictions will be set in.'
          x-schema-id: HybridIdentifier
        Data:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RestrictionSetData'
          description: Parameters of restrictions.
      additionalProperties: false
      x-schema-id: SetRestrictionParameters
    Sex:
      title: Sex
      enum:
        - Male
        - Female
      type: string
    SexEnum:
      title: Sex
      enum:
        - Male
        - Female
      type: string
      description: "\n\nMale\n\nFemale"
      x-enumNames:
        - Male
        - Female
      x-enumDescriptions:
        - ''
        - ''
    Source:
      title: Source
      required:
        - Code
        - Id
        - Name
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the source.
          format: uuid
        Name:
          minLength: 1
          type: string
          description: Name of the source.
        Type:
          $ref: '#/components/schemas/SourceType'
        UpdatedUtc:
          minLength: 1
          type: string
          description: 'Date and time when the source was last updated, expressed in UTC timezone in ISO 8601 format.'
          format: date-time
        Code:
          type: integer
          description: Code of the source.
          format: int32
      additionalProperties: false
      x-schema-id: Source
    SourceAssignment:
      title: Source assignment
      required:
        - Id
        - IsPrimary
        - ReservationGroupId
        - SourceId
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the source assignement.
          format: uuid
        ReservationGroupId:
          type: string
          description: 'Unique identifier of the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).'
          format: uuid
        SourceId:
          type: string
          description: 'Unique identifier of the [Source](https://mews-systems.gitbook.io/connector-api/operations/sources/#source).'
          format: uuid
        IsPrimary:
          type: boolean
          description: 'Specifies the primary source for the [Reservation group](https://mews-systems.gitbook.io/connector-api/operations/reservations/#reservation-group).'
      additionalProperties: false
      x-schema-id: SourceAssignment
    SourceAssignmentFilterParameters:
      title: SourceAssignmentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ReservationGroupIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the `Reservation group`.
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval of `Reservation group` last update date and time.
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: SourceAssignmentFilterParameters
    SourceAssignmentFilterParametersV20240920:
      title: SourceAssignmentFilterParametersV20240920
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        ReservationIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of `Reservation`.
          nullable: true
      additionalProperties: false
      x-schema-id: SourceAssignmentFilterParametersV20240920
    SourceAssignmentResult:
      title: SourceAssignmentResult
      required:
        - Cursor
        - SourceAssignments
      type: object
      properties:
        SourceAssignments:
          type: array
          items:
            $ref: '#/components/schemas/SourceAssignment'
          description: Assignments between reservation group and sources.
        Cursor:
          type: string
          description: Unique identifier of the last and hence oldest source assignment returned. This can be used in `Limitation` in a subsequent request to fetch the next batch of older source assignments.
          format: uuid
      additionalProperties: false
      x-schema-id: SourceAssignmentResult
    SourceAssignmentResultV20240920:
      title: SourceAssignmentResultV20240920
      required:
        - SourceAssignments
      type: object
      properties:
        SourceAssignments:
          type: array
          items:
            $ref: '#/components/schemas/SourceAssignmentV20240920'
          description: Assignments between `Reservation` and `Source`.
        Cursor:
          type: string
          description: Opaque pagination cursor which can be used in `Limitation` to fetch newer source assignments.
          format: string
          nullable: true
      additionalProperties: false
      x-schema-id: SourceAssignmentResultV20240920
    SourceAssignmentV20240920:
      title: Source assignments (ver 2024-09-20)
      required:
        - Id
        - IsPrimary
        - ReservationId
        - SourceId
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the source assignment.
          format: uuid
        ReservationId:
          type: string
          description: Unique identifier of the `Reservation`.
          format: uuid
        SourceId:
          type: string
          description: Unique identifier of the `Source`.
          format: uuid
        IsPrimary:
          type: boolean
          description: Specifies whether the source is primary for the `Reservation`.
      additionalProperties: false
      x-schema-id: SourceAssignmentV20240920
    SourceFilterParameters:
      title: SourceFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        SourceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Sources](https://mews-systems.gitbook.io/connector-api/operations/sources/#source).'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the source was updated.
          nullable: true
          x-max-interval-in-months: 3
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned.
      additionalProperties: false
      x-schema-id: SourceFilterParameters
    SourceResult:
      title: SourceResult
      required:
        - Sources
      type: object
      properties:
        Sources:
          type: array
          items:
            $ref: '#/components/schemas/Source'
          description: The reservation sources.
        Cursor:
          type: string
          description: 'Unique identifier of the last and hence oldest source returned. This can be used in [Limitation](https://mews-systems.gitbook.io/connector-api/guidelines/pagination/#limitation) in a subsequent request to fetch the next batch of older sources.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: SourceResult
    SourceType:
      title: Source type
      enum:
        - OnlineTravelAgency
        - CentralReservationSystem
        - GlobalDistributionSystem
        - AlternativeDistributionSystem
        - SalesAndCateringSystem
        - PropertyManagementSystem
        - TourOperatorSystem
        - OnlineBookingEngine
        - Kiosk
        - Agent
      type: string
      description: Type of the source.
    SpaceData:
      title: SpaceData
      required:
        - FloorNumber
      type: object
      properties:
        FloorNumber:
          minLength: 1
          type: string
        LocationNotes:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: SpaceData
    StringUpdateValue:
      title: String update value
      type: object
      properties:
        Value:
          type: string
          description: Value which is to be updated.
          nullable: true
      additionalProperties: false
      x-schema-id: StringUpdateValue
    SurchargeConfiguration:
      title: Surcharging fees configuration
      required:
        - SurchargeFees
      type: object
      properties:
        SurchargeFees:
          title: CreditCardTypeDecimalIDictionary
          type: object
          properties:
            MasterCard:
              type: number
              format: double
            Visa:
              type: number
              format: double
            Amex:
              type: number
              format: double
            Discover:
              type: number
              format: double
            DinersClub:
              type: number
              format: double
            Jcb:
              type: number
              format: double
            Maestro:
              type: number
              format: double
            UnionPay:
              type: number
              format: double
            VPay:
              type: number
              format: double
            RuPay:
              type: number
              format: double
            Dankort:
              type: number
              format: double
            Mir:
              type: number
              format: double
            Verve:
              type: number
              format: double
            Troy:
              type: number
              format: double
            PostFinance:
              type: number
              format: double
            Giro:
              type: number
              format: double
            Bancomat:
              type: number
              format: double
            Bc:
              type: number
              format: double
            CarteBleue:
              type: number
              format: double
            Eftpos:
              type: number
              format: double
            Eps:
              type: number
              format: double
            Interac:
              type: number
              format: double
            Isracard:
              type: number
              format: double
            Meps:
              type: number
              format: double
            Nets:
              type: number
              format: double
            Bancontact:
              type: number
              format: double
          additionalProperties: false
          description: Dictionary keys are `CreditCardType` and values are surcharging fees as a percentage.
          x-schema-id: CreditCardTypeDecimalIDictionary
        SurchargeServiceId:
          type: string
          description: Unique identifier of the surcharging `Service`.
          format: uuid
          nullable: true
        SurchargeTaxCode:
          type: string
          description: Surcharging fee `TaxCode`.
          nullable: true
      additionalProperties: false
      x-schema-id: SurchargeConfiguration
    Task:
      title: Task
      required:
        - ClosedUtc
        - CreatedUtc
        - DeadlineUtc
        - Name
        - State
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the task.
          format: uuid
        EnterpriseId:
          type: string
          description: 'Unique identifier of the enterprise. Required when using Portfolio Access Tokens, ignored otherwise.'
          format: uuid
        Name:
          minLength: 1
          type: string
          description: Name (or title) of the task.
        State:
          minLength: 1
          type: string
          description: State of the task.
        Description:
          type: string
          description: Further description of the task.
          nullable: true
        DepartmentId:
          type: string
          description: Unique identifier of the Department the task is addressed to.
          format: uuid
          nullable: true
        ServiceOrderId:
          type: string
          description: Unique identifier of the service order (reservation or product service order) the task is linked with.
          format: uuid
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the task in UTC timezone in ISO 8601 format.
        DeadlineUtc:
          minLength: 1
          type: string
          description: Deadline date and time of the task in UTC timezone in ISO 8601 format.
        ClosedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the task in UTC timezone in ISO 8601 format.
      additionalProperties: false
      x-schema-id: Task
    TaskAddParameters:
      title: TaskAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - DeadlineUtc
        - Name
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        DepartmentId:
          type: string
          description: 'Unique identifier of the [Department](https://mews-systems.gitbook.io/connector-api/operations/departments/#department) the task is addressed to.'
          format: uuid
          nullable: true
        ServiceOrderId:
          type: string
          description: Unique identifier of the service order (reservation or product service order) the task is linked with.
          format: uuid
          nullable: true
        Name:
          minLength: 1
          type: string
          description: Name (or title) of the task.
        Description:
          type: string
          description: Further decription of the task.
          nullable: true
        DeadlineUtc:
          minLength: 1
          type: string
          description: Deadline of the task in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: TaskAddParameters
    TaskFilterParameters:
      title: TaskFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        CreatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the Task was created.
          nullable: true
          x-max-interval-in-months: 3
        ClosedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the Task was closed.
          nullable: true
          x-max-interval-in-months: 3
        DeadlineUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval in which the Task has a deadline.
          nullable: true
          x-max-interval-in-months: 3
        TaskIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Tasks](https://mews-systems.gitbook.io/connector-api/operations/#task).'
          nullable: true
        DepartmentIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Departments](https://mews-systems.gitbook.io/connector-api/operations/departments/#department). Not possible to be used standalone, needs to be used in combination with other filters.'
          nullable: true
        ServiceOrderIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of service orders (reservations or product service orders).
          nullable: true
      additionalProperties: false
      x-schema-id: TaskFilterParameters
    TaskResult:
      title: TaskResult
      required:
        - Tasks
      type: object
      properties:
        Tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
          description: The filtered tasks.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: TaskResult
    TaxBreakdown:
      title: Tax breakdown
      required:
        - Items
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/TaxBreakdownItem'
          description: Tax breakdown items per each tax rate applied.
      additionalProperties: false
      x-schema-id: TaxBreakdown
    TaxBreakdownItem:
      title: Tax breakdown item
      required:
        - NetValue
        - TaxValue
      type: object
      properties:
        TaxRateCode:
          type: string
          description: Tax rate code for the item. `null` for untaxed amounts.
          nullable: true
        NetValue:
          type: number
          description: The net value that the tax is calculated from.
          format: double
        TaxValue:
          type: number
          description: The value of the tax.
          format: double
      additionalProperties: false
      x-schema-id: TaxBreakdownItem
    TaxEnvironment:
      title: Tax environment
      type: object
      properties:
        Code:
          type: string
          description: Code of the tax environment.
          nullable: true
        CountryCode:
          type: string
          description: 'ISO 3166-1 alpha-3 code of associated country, e.g. USA or GBR.'
          nullable: true
        ValidityStartUtc:
          type: string
          description: 'If specified, marks the start of the validity interval in UTC timezone in ISO 8601 format.'
          nullable: true
        ValidityEndUtc:
          type: string
          description: 'If specified, marks the end of the validity interval in UTC timezone in ISO 8601 format.'
          nullable: true
        TaxationCodes:
          type: array
          items:
            type: string
          description: 'Codes of the [Taxations](https://mews-systems.gitbook.io/connector-api/operations/#taxation) that are used by this environment.'
          nullable: true
      additionalProperties: false
      x-schema-id: TaxEnvironment
    TaxEnvironmentResult:
      title: TaxEnvironmentResult
      type: object
      properties:
        TaxEnvironments:
          type: array
          items:
            $ref: '#/components/schemas/TaxEnvironment'
          description: The supported tax environments.
          nullable: true
        Taxations:
          type: array
          items:
            $ref: '#/components/schemas/OldTaxation'
          nullable: true
          deprecated: true
        TaxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
          nullable: true
          deprecated: true
      additionalProperties: false
      x-schema-id: TaxEnvironmentResult
    TaxExemptionReasonTypeEnum:
      title: Tax exemption reason type
      enum:
        - IT_N1
        - IT_N2_2
        - IT_N3_5
        - IT_N4
        - IT_N5
        - PL_ZW
        - PL_NP
      type: string
      description: "\n\nIT_N1 (N1 - Escluse ex art.15)\n\nIT_N2_2 (N2.2 - Non soggette – altri casi)\n\nIT_N3_5 (N3.5 - Non imponibili – a seguito di dichiarazioni d’intento)\n\nIT_N4 (N4 - Esenti)\n\nIT_N5 (N5 - Regime del margine / IVA non esposta in fattura)\n\nPL_ZW (ZW - Zwolniony)\n\nPL_NP (NP - Nie podlega)"
      x-enumNames:
        - IT_N1
        - IT_N2_2
        - IT_N3_5
        - IT_N4
        - IT_N5
        - PL_ZW
        - PL_NP
      x-enumDescriptions:
        - N1 - Escluse ex art.15
        - N2.2 - Non soggette – altri casi
        - N3.5 - Non imponibili – a seguito di dichiarazioni d’intento
        - N4 - Esenti
        - N5 - Regime del margine / IVA non esposta in fattura
        - ZW - Zwolniony
        - NP - Nie podlega
    TaxRate:
      title: Tax rate
      type: object
      properties:
        Code:
          type: string
          description: Code of the tax rate. To be used when posting revenue items which should be accompanied by the tax rate(s) applicable to the nature of the item and the tax environment.
          nullable: true
        TaxationCode:
          type: string
          description: 'Code of the [Taxation](https://mews-systems.gitbook.io/connector-api/operations/#taxation) the rate is part of.'
          nullable: true
        Value:
          type: number
          format: double
        ValidityInvervalsUtc:
          type: array
          items:
            $ref: '#/components/schemas/DateTimeIntervalUtc'
          nullable: true
        Strategy:
          title: Strategy
          type: object
          properties:
            Discriminator:
              $ref: '#/components/schemas/TaxRateStrategyDiscriminator'
            Value:
              oneOf:
                - $ref: '#/components/schemas/RelativeTaxRateStrategy'
                - $ref: '#/components/schemas/FlatTaxRateStrategy'
                - $ref: '#/components/schemas/DependentTaxRateStrategy'
          description: 'Tax strategy type, e.g. relative, flat or dependent.'
          x-coproduct: true
          x-schema-id: TaxRateStrategyCoproductOfTaxRateStrategyDiscriminator
      additionalProperties: false
      x-schema-id: TaxRate
    TaxRateStrategyDiscriminator:
      enum:
        - Relative
        - Flat
        - Dependent
      type: string
    TaxValue:
      title: Tax value
      required:
        - Value
      type: object
      properties:
        Code:
          type: string
          description: Code corresponding to tax type.
          nullable: true
        Value:
          type: number
          description: Amount of tax applied.
          format: double
      additionalProperties: false
      x-schema-id: TaxValue
    Taxation:
      title: Taxation
      type: object
      properties:
        Code:
          type: string
          description: Code of the taxation.
          nullable: true
        Name:
          type: string
          description: Name of the taxation.
          nullable: true
        LocalName:
          type: string
          description: Local name of the taxation.
          nullable: true
      additionalProperties: false
      x-schema-id: Taxation
    TaxationResult:
      title: TaxationResult
      type: object
      properties:
        Taxations:
          type: array
          items:
            $ref: '#/components/schemas/Taxation'
          description: The supported taxations.
          nullable: true
        TaxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
          description: The supported tax rates.
          nullable: true
      additionalProperties: false
      x-schema-id: TaxationResult
    TimeFilterInterval:
      title: TimeFilterInterval
      type: object
      properties:
        StartUtc:
          type: string
          format: date-time
          nullable: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: TimeFilterInterval
    TimeUnitPeriodEnum:
      title: Time unit period
      enum:
        - Day
        - Month
        - Hour
      type: string
      description: "\n\nDay\n\nMonth\n\nHour"
      x-enumNames:
        - Day
        - Month
        - Hour
      x-enumDescriptions:
        - ''
        - ''
        - ''
    Title:
      title: Title
      enum:
        - Mister
        - Miss
        - Misses
      type: string
      description: "Type of the title prefix of the customer.\r\n\r\nNote that the value should not be used as-is, but localized. For example, the value `Misses` should be displayed as `Mrs.` in English and `Fr.` in German.\n\nMister (Mr.)\n\nMiss (Ms.)\n\nMisses (Mrs.)"
      x-enumNames:
        - Mister
        - Miss
        - Misses
      x-enumDescriptions:
        - Mr.
        - Ms.
        - Mrs.
      x-schema-id: Title
      x-showDescription: true
    TokenizedCreditCardParameters:
      title: TokenizedCreditCardParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CreditCardData
        - CustomerId
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        CustomerId:
          type: string
          description: 'Unique identifier of the [Customer](https://mews-systems.gitbook.io/connector-api/operations/customers/#customer).'
          format: uuid
        CreditCardData:
          allOf:
            - $ref: '#/components/schemas/CreditCardData'
          description: Credit card details provided by PCI provider.
      additionalProperties: false
      x-schema-id: TokenizedCreditCardParameters
    TravelAgencyContract:
      title: Travel agency contract
      required:
        - CompanyId
        - CreatedUtc
        - Id
        - IsActive
        - ServiceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the contract.
          format: uuid
        ServiceId:
          type: string
          description: 'Unique identifier of the [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the contract is related to.'
          format: uuid
        CompanyId:
          type: string
          description: 'Unique identifier of the contracted [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company).'
          format: uuid
        IsActive:
          type: boolean
          description: Whether the contract is still active.
        CommissionIncluded:
          type: boolean
          description: 'Whether commission of the travel agency is included in the rate. When CommissionIncluded is not provided in the response, that means commission is unspecified, when set to true it means the the commission is included in the rate and false means the commission in not included in the rate.'
          nullable: true
        Commission:
          type: number
          description: Commission of the travel agency.
          format: double
          nullable: true
        ChannelManagerAbsoluteAdjustment:
          type: number
          description: Flat fee added to (or subtracted from) the reservation price when coming from Channel Managers.
          format: double
          nullable: true
        ChannelManagerRelativeAdjustment:
          type: number
          description: Percentage of the reservation price added to (or subtracted from) price when coming from Channel Managers.
          format: double
          nullable: true
        Options:
          title: TravelAgencyContractOptions
          allOf:
            - $ref: '#/components/schemas/TravelAgencyContractOptions'
          description: Options of the travel agency contract.
          nullable: true
        AccountingCode:
          type: string
          description: Accounting code of the travel agency contract.
          nullable: true
        InvoiceDueInterval:
          type: string
          description: 'The maximum time, when the invoice has to be be paid in ISO 8601 duration format.'
          nullable: true
        ChannelManagerBusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        ContactPerson:
          type: string
          description: Contact person of the travel agency.
          nullable: true
        ContactEmail:
          type: string
          description: Contact email of the travel agency.
          format: email
          nullable: true
        AdditionalContactInfo:
          type: string
          description: Additional contact info of the travel agency.
          nullable: true
        Notes:
          type: string
          description: Additional notes of the travel agency contract.
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the travel agency contract in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the travel agency contract in UTC timezone in ISO 8601 format.
          format: date-time
      additionalProperties: false
      x-schema-id: TravelAgencyContract
    TravelAgencyContractAddParameters:
      title: TravelAgencyContractAddParameters
      required:
        - CompanyId
        - ServiceId
      type: object
      properties:
        ServiceId:
          type: string
          format: uuid
        CompanyId:
          type: string
          format: uuid
        CommissionIncluded:
          type: boolean
          nullable: true
        Commission:
          type: number
          format: double
          nullable: true
        ChannelManagerBusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        ChannelManagerAbsoluteAdjustment:
          type: number
          format: double
          nullable: true
        ChannelManagerRelativeAdjustment:
          type: number
          format: double
          nullable: true
        Options:
          title: TravelAgencyContractOptions
          allOf:
            - $ref: '#/components/schemas/TravelAgencyContractOptions'
          description: Options of the travel agency contract.
          nullable: true
        AccountingCode:
          type: string
          nullable: true
        InvoiceDueInterval:
          type: string
          nullable: true
        ContactPerson:
          type: string
          nullable: true
        ContactEmail:
          type: string
          format: email
          nullable: true
        AdditionalContactInfo:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: TravelAgencyContractAddParameters
    TravelAgencyContractOptions:
      title: TravelAgencyContractOptions
      type: object
      properties:
        IncludeCancellationFeeInCommissionEstimate:
          type: boolean
        SkipAutomaticSettlement:
          type: boolean
      additionalProperties: false
      description: Options of the travel agency contract.
      x-schema-id: TravelAgencyContractOptions
    TravelAgencyContractOptionsParameters:
      title: TravelAgencyContractOptionsParameters
      type: object
      properties:
        IncludeCancellationFeeInCommissionEstimate:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
        SkipAutomaticSettlement:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanUpdateValue'
          nullable: true
      additionalProperties: false
      x-schema-id: TravelAgencyContractOptionsParameters
    TravelAgencyContractUpdateParameters:
      title: TravelAgencyContractUpdateParameters
      required:
        - TravelAgencyContractId
      type: object
      properties:
        TravelAgencyContractId:
          type: string
          format: uuid
        CommissionIncluded:
          title: Boolean update value
          allOf:
            - $ref: '#/components/schemas/BooleanNullableUpdateValue'
          nullable: true
        Commission:
          title: Decimal update value
          allOf:
            - $ref: '#/components/schemas/DecimalNullableUpdateValue'
          nullable: true
        ChannelManagerBusinessSegmentId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          nullable: true
        ChannelManagerAbsoluteAdjustment:
          title: Decimal update value
          allOf:
            - $ref: '#/components/schemas/DecimalNullableUpdateValue'
          nullable: true
        ChannelManagerRelativeAdjustment:
          title: Decimal update value
          allOf:
            - $ref: '#/components/schemas/DecimalNullableUpdateValue'
          nullable: true
        Options:
          title: TravelAgencyContractOptionsParameters
          allOf:
            - $ref: '#/components/schemas/TravelAgencyContractOptionsParameters'
          nullable: true
        AccountingCode:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
        InvoiceDueInterval:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
        ContactPerson:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
        ContactEmail:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          format: email
          nullable: true
        AdditionalContactInfo:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
        Notes:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          nullable: true
      additionalProperties: false
      x-schema-id: TravelAgencyContractUpdateParameters
    Unit:
      type: object
      additionalProperties: false
    UpdateValueCurrencyValueOld:
      title: Currency value (ver 2018-06-07) update value
      type: object
      properties:
        Value:
          title: Currency value (ver 2018-06-07)
          allOf:
            - $ref: '#/components/schemas/CurrencyValueOld'
          description: Value in the specified currency.
          nullable: true
      additionalProperties: false
      x-schema-id: UpdateValueCurrencyValueOld
    Voucher:
      title: Voucher
      required:
        - CreatedUtc
        - Id
        - IsActive
        - Name
        - ServiceId
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of voucher.
          format: uuid
        ServiceId:
          type: string
          description: 'Unique identifier of [Service](https://mews-systems.gitbook.io/connector-api/operations/services/#service) the voucher belongs to.'
          format: uuid
        Name:
          maxLength: 128
          minLength: 1
          type: string
          description: Internal name of the voucher.
        CreatedUtc:
          minLength: 1
          type: string
          description: Creation date and time of the voucher in UTC timezone in ISO 8601 format.
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          description: Last update date and time of the voucher in UTC timezone in ISO 8601 format.
          format: date-time
        Type:
          title: Voucher Type
          allOf:
            - $ref: '#/components/schemas/VoucherTypeEnum'
          description: "Type of the voucher.\n\nPublic\n\nPartnerCompany\n\nTravelAgency"
          x-enumNames:
            - Public
            - PartnerCompany
            - TravelAgency
          x-enumDescriptions:
            - ''
            - ''
            - ''
        ActivityState:
          anyOf:
            - $ref: '#/components/schemas/ActivityState'
          description: Whether voucher is active or deleted.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `IsActive` instead.
        CompanyId:
          type: string
          description: 'Unique identifier of [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) the voucher is related to.'
          format: uuid
          nullable: true
        TravelAgencyId:
          type: string
          description: 'Unique identifier of [Company](https://mews-systems.gitbook.io/connector-api/operations/companies/#company) with [Travel agency contract](https://mews-systems.gitbook.io/connector-api/operations/companycontracts/#travel-agency-contract) the voucher is related to.'
          format: uuid
          nullable: true
        OccupiableIntervalStartUtc:
          type: string
          description: 'Start of the time interval, expressed as the timestamp for the start of the first time unit, in UTC timezone ISO 8601 format (or null if the start time should not be updated).'
          format: date-time
          nullable: true
        OccupiableIntervalEndUtc:
          type: string
          description: 'End of the time interval, expressed as the timestamp for the start of the last time unit, in UTC timezone ISO 8601 format (or null if the end time should not be updated).'
          format: date-time
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the voucher from external system.
          nullable: true
        IsActive:
          type: boolean
          description: Whether the voucher is still active.
      additionalProperties: false
      x-schema-id: Voucher
    VoucherAddParameters:
      title: Voucher Parameters
      required:
        - Name
        - ServiceId
        - Type
      type: object
      properties:
        ServiceId:
          type: string
          description: Unique identifier of Service.
          format: uuid
        Name:
          maxLength: 128
          minLength: 1
          type: string
          description: Internal name of the voucher.
        Type:
          title: Voucher Type
          allOf:
            - $ref: '#/components/schemas/VoucherTypeEnum'
          description: "Type of the voucher.\n\nPublic\n\nPartnerCompany\n\nTravelAgency"
          x-enumNames:
            - Public
            - PartnerCompany
            - TravelAgency
          x-enumDescriptions:
            - ''
            - ''
            - ''
        CompanyId:
          type: string
          description: Unique identifier of Company.
          format: uuid
          nullable: true
        AssignedRateIds:
          maxItems: 10
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of Rates.
          nullable: true
        OccupiableIntervalStartUtc:
          type: string
          description: Start of the interval in which the voucher can be applied.
          format: date-time
          nullable: true
        OccupiableIntervalEndUtc:
          type: string
          description: End of the interval in which the voucher can be applied.
          format: date-time
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          description: Identifier of the voucher from external system.
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherAddParameters
    VoucherAssignment:
      title: Voucher assignment
      type: object
      properties:
        VoucherId:
          type: string
          description: 'Unique identifier of [Voucher](https://mews-systems.gitbook.io/connector-api/operations/#voucher).'
          format: uuid
        RateId:
          type: string
          description: 'Unique identifier of [Rate](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate) the voucher is assigned with.'
          format: uuid
      additionalProperties: false
      x-schema-id: VoucherAssignment
    VoucherCode:
      title: Voucher code
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of the voucher code.
          format: uuid
        VoucherId:
          type: string
          description: 'Unique identifier of [Voucher](https://mews-systems.gitbook.io/connector-api/operations/#voucher) the code belongs to.'
          format: uuid
        Value:
          type: string
          description: Value of voucher code used by customers.
          nullable: true
        ValidityStartUtc:
          type: string
          description: 'If specified, marks the beginning of interval in which the code can be used.'
          nullable: true
        ValidityEndUtc:
          type: string
          description: 'If specified, marks the end of interval in which the code can be used.'
          nullable: true
        CreatedUtc:
          type: string
          description: Creation date and time of the voucher in UTC timezone in ISO 8601 format.
          nullable: true
        UpdatedUtc:
          type: string
          description: Last update date and time of the voucher in UTC timezone in ISO 8601 format.
          nullable: true
        ActivityState:
          type: string
          description: Whether voucher code is active or deleted.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `IsActive` instead.
        IsActive:
          type: boolean
          description: Whether the voucher code is still active.
      additionalProperties: false
      x-schema-id: VoucherCode
    VoucherCodeAddParameters:
      title: Voucher code parameters
      required:
        - Value
        - VoucherId
      type: object
      properties:
        VoucherId:
          type: string
          description: 'Unique identifier of [Voucher](#voucher) the code belongs to.'
          format: uuid
        Value:
          maxLength: 128
          minLength: 1
          type: string
          description: Value of voucher code used by customers.
        ValidityStartUtc:
          type: string
          description: 'If specified, marks the beginning of interval in which the code can be used.'
          format: date-time
          nullable: true
        ValidityEndUtc:
          type: string
          description: 'If specified, marks the end of interval in which the code can be used.'
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherCodeAddParameters
    VoucherCodeFilterParameters:
      title: VoucherCodeFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - VoucherIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        VoucherCodeIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the voucher codes.
          nullable: true
        VoucherIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of vouchers.
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          description: Interval of voucher code's last update date and time.
          nullable: true
          x-max-interval-in-months: 3
      additionalProperties: false
      x-schema-id: VoucherCodeFilterParameters
    VoucherCodeResult:
      title: VoucherCodeResult
      required:
        - VoucherCodes
      type: object
      properties:
        VoucherCodes:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/VoucherCode'
          description: Information about voucher codes used by customers.
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherCodeResult
    VoucherExtent:
      title: Voucher Extent
      type: object
      properties:
        Vouchers:
          type: boolean
          description: Whether the response should contain main information about vouchers.
          nullable: true
        VoucherCodes:
          type: boolean
          description: Whether the response should contain voucher codes used by customers.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `voucherCodes/getAll`
        VoucherAssignments:
          type: boolean
          description: Whether the response should contain assignments between vouchers and Rates.
          nullable: true
        Companies:
          type: boolean
          description: Whether the response should contain detail of related companies.
          nullable: true
          deprecated: true
          x-deprecatedMessage: Use `companies/getAll`
        Rates:
          type: boolean
          description: Whether the response should contain detail of assigned rates.
          nullable: true
      additionalProperties: false
      description: Extent of data to be returned. Whether only specific voucher info should be returned or related items as well.
      x-schema-id: VoucherExtent
    VoucherFilterParameters:
      title: VoucherFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
        - Limitation
        - ServiceIds
      type: object
      properties:
        ClientToken:
          minLength: 1
          type: string
          description: Token identifying the client application.
        AccessToken:
          minLength: 1
          type: string
          description: Access token of the client application.
        Client:
          minLength: 1
          type: string
          description: Name and version of the client application.
        Limitation:
          allOf:
            - $ref: '#/components/schemas/Limitation'
          description: Limitation on the quantity of data returned and optional Cursor for the starting point of data.
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of the Enterprises. If not specified, the operation returns data for all enterprises within scope of the Access Token.'
          nullable: true
        Extent:
          title: Voucher Extent
          allOf:
            - $ref: '#/components/schemas/VoucherExtent'
          description: Extent of data to be returned. Whether only specific voucher info should be returned or related items as well.
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: 'Unique identifiers of [Services](https://mews-systems.gitbook.io/connector-api/operations/services/#service) where the vouchers belong to.'
        VoucherIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of vouchers.
          nullable: true
        CompanyIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          description: Unique identifiers of the companies.
          nullable: true
        VoucherCodeValues:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: Value of voucher codes used by customers.
          nullable: true
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          description: 'Whether to return only active, only deleted, or both types of record. If not specified, both active and deleted records will be returned.'
          nullable: true
        UpdatedUtc:
          title: TimeFilterInterval
          allOf:
            - $ref: '#/components/schemas/TimeFilterInterval'
          nullable: true
          x-max-interval-in-months: 3
        ExternalIdentifiers:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          description: 'Identifiers of [Voucher](https://mews-systems.gitbook.io/connector-api/operations/#voucher) from external systems.'
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherFilterParameters
    VoucherResult:
      title: VoucherResult
      type: object
      properties:
        Vouchers:
          type: array
          items:
            $ref: '#/components/schemas/Voucher'
          description: Details about vouchers added to the system.
          nullable: true
        VoucherCodes:
          type: array
          items:
            $ref: '#/components/schemas/VoucherCode'
          description: Information about voucher codes used by customers.
          nullable: true
        VoucherAssignments:
          type: array
          items:
            $ref: '#/components/schemas/VoucherAssignment'
          description: 'The assignments between vouchers and [Rates](https://mews-systems.gitbook.io/connector-api/operations/rates/#rate).'
          nullable: true
        Rates:
          type: array
          items:
            $ref: '#/components/schemas/RateForExtent'
          description: The assigned rates.
          nullable: true
        Companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
          description: The related companies and travel agencies.
          nullable: true
        Cursor:
          type: string
          description: 'Unique identifier of the item one newer in time order than the items to be returned. If Cursor is not specified, i.e. null, then the latest or most recent items will be returned.'
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherResult
    VoucherTypeEnum:
      title: Voucher Type
      enum:
        - Public
        - PartnerCompany
        - TravelAgency
      type: string
      description: "\n\nPublic\n\nPartnerCompany\n\nTravelAgency"
      x-enumNames:
        - Public
        - PartnerCompany
        - TravelAgency
      x-enumDescriptions:
        - ''
        - ''
        - ''
    VoucherTypeUpdateValue:
      title: Voucher Type update value
      type: object
      properties:
        Value:
          title: Voucher Type
          allOf:
            - $ref: '#/components/schemas/VoucherTypeEnum'
          description: Value which is to be updated.
          x-enumNames:
            - Public
            - PartnerCompany
            - TravelAgency
          x-enumDescriptions:
            - ''
            - ''
            - ''
      additionalProperties: false
      x-schema-id: VoucherTypeUpdateValue
    VoucherUpdateParameters:
      title: Vouchers update parameters
      required:
        - VoucherId
      type: object
      properties:
        VoucherId:
          type: string
          description: Unique identifier of the Voucher.
          format: uuid
        Name:
          title: String update value
          maxLength: 128
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Internal name of the voucher (or `null` if the name should not be updated).
          nullable: true
        Type:
          title: Voucher Type update value
          allOf:
            - $ref: '#/components/schemas/VoucherTypeUpdateValue'
          description: 'Type of the voucher e.g. ''Public'', ''PartnerCompany'' or ''TravelAgency'' (or `null` if the type should not be updated).'
          nullable: true
        CompanyId:
          title: Guid update value
          allOf:
            - $ref: '#/components/schemas/GuidNullableUpdateValue'
          description: Unique identifier of Company (Company or Travel Agency) the voucher is related to. This is required for Type of `PartnerCompany` or `TravelAgency`. Use `null` if Company should not be updated.
          nullable: true
        AssignedRateIds:
          title: Assigned rate ids
          allOf:
            - $ref: '#/components/schemas/AssignedRateIds'
          description: Unique identifiers of Rates (or `null` should it not be updated).
          nullable: true
        OccupiableIntervalStartUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Start of the interval in which the voucher can be applied (or `null` if the start time should not be updated).
          format: date-time
          nullable: true
        OccupiableIntervalEndUtc:
          title: String update value
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: End of the interval in which the voucher can be applied (or `null` if the end time should not be updated).
          format: date-time
          nullable: true
        ExternalIdentifier:
          title: String update value
          maxLength: 255
          allOf:
            - $ref: '#/components/schemas/StringUpdateValue'
          description: Identifier of the voucher from external system (or `null` if the identifier should not be updated).
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherUpdateParameters
    VoucherWriteResult:
      title: VoucherWriteResult
      type: object
      properties:
        Vouchers:
          type: array
          items:
            $ref: '#/components/schemas/Voucher'
          description: Details about vouchers added to the system.
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherWriteResult